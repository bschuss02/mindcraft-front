{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"enabled\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport GestureHandler from \"./GestureHandler\";\n\nvar ManualGestureHandler = function (_GestureHandler) {\n  _inherits(ManualGestureHandler, _GestureHandler);\n\n  var _super = _createSuper(ManualGestureHandler);\n\n  function ManualGestureHandler() {\n    _classCallCheck(this, ManualGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ManualGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n          enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n          props = _objectWithoutProperties(_ref, _excluded);\n\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n\n      this.begin();\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tracker.track(event);\n\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.tracker.track(event);\n\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerOutOfBounds\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n\n      this.tracker.removeFromTracker(event.pointerId);\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n\n      this.tracker.removeFromTracker(event.pointerId);\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerCancel\", this).call(this, event);\n\n      this.reset();\n    }\n  }]);\n\n  return ManualGestureHandler;\n}(GestureHandler);\n\nexport { ManualGestureHandler as default };","map":{"version":3,"sources":["ManualGestureHandler.ts"],"names":["init","updateGestureConfig","enabled","props","onPointerDown","onPointerAdd","onPointerMove","onPointerOutOfBounds","onPointerUp","event","onPointerRemove","onPointerCancel"],"mappings":";;;;;;;;;;;;;;;;;;AACA,OAAA,cAAA;;IAEe,oB;;;;;;;;;;;;;WACNA,cAAI,GAAJA,EAAI,QAAJA,EAAsD;AAC3D,qFAAA,GAAA,EAAA,QAAA;AACD;;;WAEMC,mCAAgE;AAAA,8BAA1CC,OAA0C;AAAA,UAA1CA,OAA0C,6BAA5C,IAA4C;AAAA,UAAvBC,KAAuB;;AACrE;AAA4BD,QAAAA,OAAO,EAAT;AAA1B,SAAiDC,KAAjD;AACD;;;WAESC,uBAAa,KAAbA,EAAyC;AACjD,WAAA,OAAA,CAAA,YAAA,CAAA,KAAA;;AACA,8FAAA,KAAA;;AACA,WAAA,KAAA;AACD;;;WAESC,sBAAY,KAAZA,EAAwC;AAChD,WAAA,OAAA,CAAA,YAAA,CAAA,KAAA;;AACA,6FAAA,KAAA;AACD;;;WAESC,uBAAa,KAAbA,EAAyC;AACjD,WAAA,OAAA,CAAA,KAAA,CAAA,KAAA;;AACA,8FAAA,KAAA;AACD;;;WAESC,8BAAoB,KAApBA,EAAgD;AACxD,WAAA,OAAA,CAAA,KAAA,CAAA,KAAA;;AACA,qGAAA,KAAA;AACD;;;WAESC,qBAAW,KAAXA,EAAuC;AAC/C,4FAAA,KAAA;;AACA,WAAA,OAAA,CAAA,iBAAA,CAA+BC,KAAK,CAApC,SAAA;AACD;;;WAESC,yBAAe,KAAfA,EAA2C;AACnD,gGAAA,KAAA;;AACA,WAAA,OAAA,CAAA,iBAAA,CAA+BD,KAAK,CAApC,SAAA;AACD;;;WAESE,yBAAe,KAAfA,EAA2C;AACnD,gGAAA,KAAA;;AACA,WAAA,KAAA;AACD;;;;EA3CY,c;;SAAA,oB","sourcesContent":["import { AdaptedEvent, Config } from '../interfaces';\nimport GestureHandler from './GestureHandler';\n\nexport default class ManualGestureHandler extends GestureHandler {\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.begin();\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tracker.track(event);\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tracker.track(event);\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  protected onPointerCancel(event: AdaptedEvent): void {\n    super.onPointerCancel(event);\n    this.reset();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}