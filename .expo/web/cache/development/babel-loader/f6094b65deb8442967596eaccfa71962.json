{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"initialRouteName\", \"children\", \"screenListeners\", \"screenOptions\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport { createNavigatorFactory, StackActions, StackRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport NativeStackView from \"../views/NativeStackView\";\n\nfunction NativeStackNavigator(_ref) {\n  var id = _ref.id,\n      initialRouteName = _ref.initialRouteName,\n      children = _ref.children,\n      screenListeners = _ref.screenListeners,\n      screenOptions = _ref.screenOptions,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useNavigationBuilder = useNavigationBuilder(StackRouter, {\n    id: id,\n    initialRouteName: initialRouteName,\n    children: children,\n    screenListeners: screenListeners,\n    screenOptions: screenOptions\n  }),\n      state = _useNavigationBuilder.state,\n      descriptors = _useNavigationBuilder.descriptors,\n      navigation = _useNavigationBuilder.navigation,\n      NavigationContent = _useNavigationBuilder.NavigationContent;\n\n  React.useEffect(function () {\n    var _navigation$addListen;\n\n    return navigation === null || navigation === void 0 ? void 0 : (_navigation$addListen = navigation.addListener) === null || _navigation$addListen === void 0 ? void 0 : _navigation$addListen.call(navigation, 'tabPress', function (e) {\n      var isFocused = navigation.isFocused();\n      requestAnimationFrame(function () {\n        if (state.index > 0 && isFocused && !e.defaultPrevented) {\n          navigation.dispatch(_objectSpread(_objectSpread({}, StackActions.popToTop()), {}, {\n            target: state.key\n          }));\n        }\n      });\n    });\n  }, [navigation, state.index, state.key]);\n  return React.createElement(NavigationContent, null, React.createElement(NativeStackView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors\n  })));\n}\n\nexport default createNavigatorFactory(NativeStackNavigator);","map":{"version":3,"sources":["navigators/createNativeStackNavigator.tsx"],"names":["createNavigatorFactory","StackActions","StackRouter","useNavigationBuilder","React","NativeStackView","NativeStackNavigator","id","initialRouteName","children","screenListeners","screenOptions","rest","state","descriptors","navigation","NavigationContent","useEffect","addListener","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","popToTop","target","key"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,sBADF,EAKEC,YALF,EAOEC,WAPF,EASEC,oBATF,QAUO,0BAVP;AAWA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAOA,OAAOC,eAAP;;AAEA,SAASC,oBAAT,CAA6B,IAA7B,EAO8B;AAPA,MAC5BC,EAD4B,GAOF,IAPE,CAC5BA,EAD4B;AAAA,MAE5BC,gBAF4B,GAOF,IAPE,CAE5BA,gBAF4B;AAAA,MAG5BC,QAH4B,GAOF,IAPE,CAG5BA,QAH4B;AAAA,MAI5BC,eAJ4B,GAOF,IAPE,CAI5BA,eAJ4B;AAAA,MAK5BC,aAL4B,GAOF,IAPE,CAK5BA,aAL4B;AAAA,MAMzBC,IANyB,4BAOF,IAPE;;AAQ5B,8BACET,oBAAoB,CAMlBD,WANkB,EAML;AACbK,IAAAA,EAAE,EAAFA,EADa;AAEbC,IAAAA,gBAAgB,EAAhBA,gBAFa;AAGbC,IAAAA,QAAQ,EAARA,QAHa;AAIbC,IAAAA,eAAe,EAAfA,eAJa;AAKbC,IAAAA,aAAAA,EAAAA;AALa,GANK,CADtB;AAAA,MAAQE,KAAR,yBAAQA,KAAR;AAAA,MAAeC,WAAf,yBAAeA,WAAf;AAAA,MAA4BC,UAA5B,yBAA4BA,UAA5B;AAAA,MAAwCC,iBAAxC,yBAAwCA,iBAAxC;;AAeAZ,EAAAA,KAAK,CAACa,SAANb,CACE,YAAA;AAAA,QAAA,qBAAA;;AAAA,WAEEW,UAAU,KAAA,IAAVA,IAAAA,UAAU,KAAA,KAAA,CAAVA,GAAU,KAAA,CAAVA,GAAU,CAAA,qBAAA,GAAVA,UAAU,CAAEG,WAAF,MAAa,IAAb,IAAa,qBAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAVH,qBAAAA,CAAAA,IAAAA,CAAAA,UAAAA,EAA0B,UAA1BA,EAAuCI,UAAAA,CAAM,EAAK;AAChD,UAAMC,SAAS,GAAGL,UAAU,CAACK,SAAXL,EAAlB;AAIAM,MAAAA,qBAAqB,CAAC,YAAM;AAC1B,YACER,KAAK,CAACS,KAANT,GAAc,CAAdA,IACAO,SADAP,IAEA,CAAEM,CAAC,CAAgCI,gBAHrC,EAIE;AAGAR,UAAAA,UAAU,CAACS,QAAXT,iCACKd,YAAY,CAACwB,QAAbxB,EADLc;AAEEW,YAAAA,MAAM,EAAEb,KAAK,CAACc;AAFhBZ;AAIF;AACD,OAboB,CAArBM;AAcD,KAnBDN,CAFF;AAqBI,GAtBNX,EAuBE,CAACW,UAAD,EAAaF,KAAK,CAACS,KAAnB,EAA0BT,KAAK,CAACc,GAAhC,CAvBFvB;AA0BA,SACE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB,IAAlB,EACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,QAAA,CAAA,EAAA,EACVQ,IADU,EACN;AACR,IAAA,KAAK,EAAEC,KADC;AAER,IAAA,UAAU,EAAEE,UAFJ;AAGR,IAAA,WAAW,EAAED;AAHL,GADM,CAAhB,CADF,CADF;AAUF;;AAEA,eAAed,sBAAsB,CAKnCM,oBALmC,CAArC","sourceRoot":"../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { createNavigatorFactory, StackActions, StackRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport NativeStackView from '../views/NativeStackView';\nfunction NativeStackNavigator(_ref) {\n  let {\n    id,\n    initialRouteName,\n    children,\n    screenListeners,\n    screenOptions,\n    ...rest\n  } = _ref;\n  const {\n    state,\n    descriptors,\n    navigation,\n    NavigationContent\n  } = useNavigationBuilder(StackRouter, {\n    id,\n    initialRouteName,\n    children,\n    screenListeners,\n    screenOptions\n  });\n  React.useEffect(() => {\n    var _navigation$addListen;\n    return (// @ts-expect-error: there may not be a tab navigator in parent\n      navigation === null || navigation === void 0 ? void 0 : (_navigation$addListen = navigation.addListener) === null || _navigation$addListen === void 0 ? void 0 : _navigation$addListen.call(navigation, 'tabPress', e => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (state.index > 0 && isFocused && !e.defaultPrevented) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key\n            });\n          }\n        });\n      })\n    );\n  }, [navigation, state.index, state.key]);\n  return /*#__PURE__*/React.createElement(NavigationContent, null, /*#__PURE__*/React.createElement(NativeStackView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors\n  })));\n}\nexport default createNavigatorFactory(NativeStackNavigator);\n//# sourceMappingURL=createNativeStackNavigator.js.map"]},"metadata":{},"sourceType":"module"}