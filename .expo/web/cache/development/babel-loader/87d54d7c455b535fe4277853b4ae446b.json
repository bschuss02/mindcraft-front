{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport NavigationContext from \"./NavigationContext\";\nimport { PrivateValueStore } from \"./types\";\nimport UnhandledActionContext from \"./UnhandledActionContext\";\nPrivateValueStore;\nexport default function useNavigationHelpers(_ref) {\n  var navigatorId = _ref.id,\n      onAction = _ref.onAction,\n      getState = _ref.getState,\n      emitter = _ref.emitter,\n      router = _ref.router;\n  var onUnhandledAction = React.useContext(UnhandledActionContext);\n  var parentNavigationHelpers = React.useContext(NavigationContext);\n  return React.useMemo(function () {\n    var dispatch = function dispatch(op) {\n      var action = typeof op === 'function' ? op(getState()) : op;\n      var handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction === null || onUnhandledAction === void 0 ? void 0 : onUnhandledAction(action);\n      }\n    };\n\n    var actions = _objectSpread(_objectSpread({}, router.actionCreators), CommonActions);\n\n    var helpers = Object.keys(actions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(actions[name].apply(actions, arguments));\n      };\n\n      return acc;\n    }, {});\n\n    var navigationHelpers = _objectSpread(_objectSpread(_objectSpread({}, parentNavigationHelpers), helpers), {}, {\n      dispatch: dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers ? parentNavigationHelpers.isFocused : function () {\n        return true;\n      },\n      canGoBack: function canGoBack() {\n        var state = getState();\n        return router.getStateForAction(state, CommonActions.goBack(), {\n          routeNames: state.routeNames,\n          routeParamList: {},\n          routeGetIdList: {}\n        }) !== null || (parentNavigationHelpers === null || parentNavigationHelpers === void 0 ? void 0 : parentNavigationHelpers.canGoBack()) || false;\n      },\n      getId: function getId() {\n        return navigatorId;\n      },\n      getParent: function getParent(id) {\n        if (id !== undefined) {\n          var current = navigationHelpers;\n\n          while (current && id !== current.getId()) {\n            current = current.getParent();\n          }\n\n          return current;\n        }\n\n        return parentNavigationHelpers;\n      },\n      getState: getState\n    });\n\n    return navigationHelpers;\n  }, [navigatorId, emitter.emit, getState, onAction, onUnhandledAction, parentNavigationHelpers, router]);\n}","map":{"version":3,"sources":["useNavigationHelpers.tsx"],"names":["CommonActions","React","NavigationContext","PrivateValueStore","UnhandledActionContext","useNavigationHelpers","id","navigatorId","onAction","getState","emitter","router","onUnhandledAction","useContext","parentNavigationHelpers","useMemo","dispatch","op","action","handled","actions","actionCreators","helpers","Object","keys","reduce","acc","name","navigationHelpers","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList","routeGetIdList","getId","getParent","undefined","current"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport NavigationContext from './NavigationContext';\nimport { PrivateValueStore } from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers(_ref) {\n  let {\n    id: navigatorId,\n    onAction,\n    getState,\n    emitter,\n    router\n  } = _ref;\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n  return React.useMemo(() => {\n    const dispatch = op => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n      const handled = onAction(action);\n      if (!handled) {\n        onUnhandledAction === null || onUnhandledAction === void 0 ? void 0 : onUnhandledAction(action);\n      }\n    };\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions\n    };\n    const helpers = Object.keys(actions).reduce((acc, name) => {\n      // @ts-expect-error: name is a valid key, but TypeScript is dumb\n      acc[name] = function () {\n        return dispatch(actions[name](...arguments));\n      };\n      return acc;\n    }, {});\n    const navigationHelpers = {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers ? parentNavigationHelpers.isFocused : () => true,\n      canGoBack: () => {\n        const state = getState();\n        return router.getStateForAction(state, CommonActions.goBack(), {\n          routeNames: state.routeNames,\n          routeParamList: {},\n          routeGetIdList: {}\n        }) !== null || (parentNavigationHelpers === null || parentNavigationHelpers === void 0 ? void 0 : parentNavigationHelpers.canGoBack()) || false;\n      },\n      getId: () => navigatorId,\n      getParent: id => {\n        if (id !== undefined) {\n          let current = navigationHelpers;\n          while (current && id !== current.getId()) {\n            current = current.getParent();\n          }\n          return current;\n        }\n        return parentNavigationHelpers;\n      },\n      getState\n    };\n    return navigationHelpers;\n  }, [navigatorId, emitter.emit, getState, onAction, onUnhandledAction, parentNavigationHelpers, router]);\n}\n//# sourceMappingURL=useNavigationHelpers.js.map"]},"metadata":{},"sourceType":"module"}