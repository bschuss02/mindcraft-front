{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport $tyW6A$react, { useMemo as $tyW6A$useMemo, useRef as $tyW6A$useRef } from \"react\";\nimport $tyW6A$swchelperssrc_define_propertymjs from \"@swc/helpers/src/_define_property.mjs\";\n\nfunction $c1d7fb2ec91bae71$var$Item(props) {\n  return null;\n}\n\n$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {\n  var childItems = props.childItems,\n      title = props.title,\n      children = props.children;\n  var rendered = props.title || props.children;\n  var textValue = props.textValue || (typeof rendered === \"string\" ? rendered : \"\") || props[\"aria-label\"] || \"\";\n  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning)) console.warn(\"<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.\");\n  yield {\n    type: \"item\",\n    props: props,\n    rendered: rendered,\n    textValue: textValue,\n    \"aria-label\": props[\"aria-label\"],\n    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),\n    childNodes: function* childNodes() {\n      if (childItems) for (var child of childItems) yield {\n        type: \"item\",\n        value: child\n      };else if (title) {\n        var items = [];\n        (0, $tyW6A$react).Children.forEach(children, function (child) {\n          items.push({\n            type: \"item\",\n            element: child\n          });\n        });\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction $c1d7fb2ec91bae71$var$hasChildItems(props) {\n  if (props.hasChildItems != null) return props.hasChildItems;\n  if (props.childItems) return true;\n  if (props.title && (0, $tyW6A$react).Children.count(props.children) > 0) return true;\n  return false;\n}\n\nvar $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 = $c1d7fb2ec91bae71$var$Item;\n\nfunction $9fc4852771d079eb$var$Section(props) {\n  return null;\n}\n\n$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode(props) {\n  var children = props.children,\n      title = props.title,\n      items = props.items;\n  yield {\n    type: \"section\",\n    props: props,\n    hasChildNodes: true,\n    rendered: title,\n    \"aria-label\": props[\"aria-label\"],\n    childNodes: function* childNodes() {\n      if (typeof children === \"function\") {\n        if (!items) throw new Error(\"props.children was a function but props.items is missing\");\n\n        for (var item of items) yield {\n          type: \"item\",\n          value: item,\n          renderer: children\n        };\n      } else {\n        var items1 = [];\n        (0, $tyW6A$react).Children.forEach(children, function (child) {\n          items1.push({\n            type: \"item\",\n            element: child\n          });\n        });\n        yield* items1;\n      }\n    }\n  };\n};\n\nvar $9fc4852771d079eb$export$6e2c8f0811a474ce = $9fc4852771d079eb$var$Section;\n\nvar $eb2240fc39a57fa5$export$bf788dd355e3a401 = function () {\n  function $eb2240fc39a57fa5$export$bf788dd355e3a401() {\n    _classCallCheck(this, $eb2240fc39a57fa5$export$bf788dd355e3a401);\n\n    (0, $tyW6A$swchelperssrc_define_propertymjs)(this, \"cache\", new WeakMap());\n  }\n\n  _createClass($eb2240fc39a57fa5$export$bf788dd355e3a401, [{\n    key: \"build\",\n    value: function build(props, context) {\n      var _this = this;\n\n      this.context = context;\n      return $eb2240fc39a57fa5$var$iterable(function () {\n        return _this.iterateCollection(props);\n      });\n    }\n  }, {\n    key: \"iterateCollection\",\n    value: function* iterateCollection(props) {\n      var children = props.children,\n          items = props.items;\n\n      if (typeof children === \"function\") {\n        if (!items) throw new Error(\"props.children was a function but props.items is missing\");\n\n        for (var item of props.items) yield* this.getFullNode({\n          value: item\n        }, {\n          renderer: children\n        });\n      } else {\n        var items1 = [];\n        (0, $tyW6A$react).Children.forEach(children, function (child) {\n          items1.push(child);\n        });\n        var index = 0;\n\n        for (var item1 of items1) {\n          var nodes = this.getFullNode({\n            element: item1,\n            index: index\n          }, {});\n\n          for (var node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getKey\",\n    value: function getKey(item, partialNode, state, parentKey) {\n      if (item.key != null) return item.key;\n      if (partialNode.type === \"cell\" && partialNode.key != null) return \"\" + parentKey + partialNode.key;\n      var v = partialNode.value;\n\n      if (v != null) {\n        var _v_key;\n\n        var key = (_v_key = v.key) !== null && _v_key !== void 0 ? _v_key : v.id;\n        if (key == null) throw new Error(\"No key found for item\");\n        return key;\n      }\n\n      return parentKey ? parentKey + \".\" + partialNode.index : \"$.\" + partialNode.index;\n    }\n  }, {\n    key: \"getChildState\",\n    value: function getChildState(state, partialNode) {\n      return {\n        renderer: partialNode.renderer || state.renderer\n      };\n    }\n  }, {\n    key: \"getFullNode\",\n    value: function* getFullNode(partialNode, state, parentKey, parentNode) {\n      var element = partialNode.element;\n\n      if (!element && partialNode.value && state && state.renderer) {\n        var cached = this.cache.get(partialNode.value);\n\n        if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n          cached.index = partialNode.index;\n          cached.parentKey = parentNode ? parentNode.key : null;\n          yield cached;\n          return;\n        }\n\n        element = state.renderer(partialNode.value);\n      }\n\n      if ((0, $tyW6A$react).isValidElement(element)) {\n        var type = element.type;\n\n        if (typeof type !== \"function\" && typeof type.getCollectionNode !== \"function\") {\n          var name = typeof element.type === \"function\" ? element.type.name : element.type;\n          throw new Error(\"Unknown element <\" + name + \"> in collection.\");\n        }\n\n        var childNodes = type.getCollectionNode(element.props, this.context);\n        var index = partialNode.index;\n        var result = childNodes.next();\n\n        while (!result.done && result.value) {\n          var childNode = result.value;\n          partialNode.index = index;\n          var nodeKey = childNode.key;\n          if (!nodeKey) nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);\n          var nodes = this.getFullNode(_objectSpread(_objectSpread({}, childNode), {}, {\n            key: nodeKey,\n            index: index,\n            wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)\n          }), this.getChildState(state, childNode), parentKey ? \"\" + parentKey + element.key : element.key, parentNode);\n\n          var children = _toConsumableArray(nodes);\n\n          for (var node of children) {\n            node.value = childNode.value || partialNode.value;\n            if (node.value) this.cache.set(node.value, node);\n            if (partialNode.type && node.type !== partialNode.type) throw new Error(\"Unsupported type <\" + $eb2240fc39a57fa5$var$capitalize(node.type) + \"> in <\" + $eb2240fc39a57fa5$var$capitalize(parentNode.type) + \">. Only <\" + $eb2240fc39a57fa5$var$capitalize(partialNode.type) + \"> is supported.\");\n            index++;\n            yield node;\n          }\n\n          result = childNodes.next(children);\n        }\n\n        return;\n      }\n\n      if (partialNode.key == null) return;\n      var builder = this;\n      var node1 = {\n        type: partialNode.type,\n        props: partialNode.props,\n        key: partialNode.key,\n        parentKey: parentNode ? parentNode.key : null,\n        value: partialNode.value,\n        level: parentNode ? parentNode.level + 1 : 0,\n        index: partialNode.index,\n        rendered: partialNode.rendered,\n        textValue: partialNode.textValue,\n        \"aria-label\": partialNode[\"aria-label\"],\n        wrapper: partialNode.wrapper,\n        shouldInvalidate: partialNode.shouldInvalidate,\n        hasChildNodes: partialNode.hasChildNodes,\n        childNodes: $eb2240fc39a57fa5$var$iterable(function* () {\n          if (!partialNode.hasChildNodes) return;\n          var index = 0;\n\n          for (var child of partialNode.childNodes()) {\n            if (child.key != null) child.key = \"\" + node1.key + child.key;\n            child.index = index;\n\n            var _nodes = builder.getFullNode(child, builder.getChildState(state, child), node1.key, node1);\n\n            for (var _node2 of _nodes) {\n              index++;\n              yield _node2;\n            }\n          }\n        })\n      };\n      yield node1;\n    }\n  }]);\n\n  return $eb2240fc39a57fa5$export$bf788dd355e3a401;\n}();\n\nfunction $eb2240fc39a57fa5$var$iterable(iterator) {\n  var cache = [];\n  var iterable = null;\n  return _defineProperty({}, Symbol.iterator, function* () {\n    for (var item of cache) yield item;\n\n    if (!iterable) iterable = iterator();\n\n    for (var item1 of iterable) {\n      cache.push(item1);\n      yield item1;\n    }\n  });\n}\n\nfunction $eb2240fc39a57fa5$var$compose(outer, inner) {\n  if (outer && inner) return function (element) {\n    return outer(inner(element));\n  };\n  if (outer) return outer;\n  if (inner) return inner;\n}\n\nfunction $eb2240fc39a57fa5$var$capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nfunction $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context) {\n  var invalidators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var builder = (0, $tyW6A$useMemo)(function () {\n    return new (0, $eb2240fc39a57fa5$export$bf788dd355e3a401)();\n  }, []);\n  var prev = (0, $tyW6A$useRef)(null);\n  return (0, $tyW6A$useMemo)(function () {\n    var nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current;\n  }, [builder, props.children, props.items, context].concat(_toConsumableArray(invalidators)));\n}\n\nvar $453cc9f0df89c0a5$var$cache = new WeakMap();\n\nfunction $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {\n  var count = $453cc9f0df89c0a5$var$cache.get(collection);\n  if (count != null) return count;\n  count = 0;\n\n  for (var item of collection) if (item.type === \"section\") count += $453cc9f0df89c0a5$export$77d5aafae4e095b2(item.childNodes);else count++;\n\n  $453cc9f0df89c0a5$var$cache.set(collection, count);\n  return count;\n}\n\nexport { $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 as Item, $9fc4852771d079eb$export$6e2c8f0811a474ce as Section, $7613b1592d41b092$export$6cd28814d92fa9c9 as useCollection, $453cc9f0df89c0a5$export$77d5aafae4e095b2 as getItemCount };","map":{"version":3,"sources":["packages/@react-stately/collections/src/Item.ts","packages/@react-stately/collections/src/Section.ts","packages/@react-stately/collections/src/useCollection.ts","packages/@react-stately/collections/src/CollectionBuilder.ts","packages/@react-stately/collections/src/getItemCount.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ItemElement, ItemProps} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\n\nfunction Item<T>(props: ItemProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nItem.getCollectionNode = function* getCollectionNode<T>(props: ItemProps<T>, context: any): Generator<PartialNode<T>> {\n  let {childItems, title, children} = props;\n\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n\n  // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n  if (!textValue && !context?.suppressTextValueWarning) {\n    console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  }\n\n  yield {\n    type: 'item',\n    props: props,\n    rendered,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: hasChildItems(props),\n    *childNodes() {\n      if (childItems) {\n        for (let child of childItems) {\n          yield {\n            type: 'item',\n            value: child\n          };\n        }\n      } else if (title) {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child as ItemElement<T>\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction hasChildItems<T>(props: ItemProps<T>) {\n  if (props.hasChildItems != null) {\n    return props.hasChildItems;\n  }\n\n  if (props.childItems) {\n    return true;\n  }\n\n  if (props.title && React.Children.count(props.children) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport {_Item as Item};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\nimport {SectionProps} from '@react-types/shared';\n\nfunction Section<T>(props: SectionProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nSection.getCollectionNode = function* getCollectionNode<T>(props: SectionProps<T>): Generator<PartialNode<T>> {\n  let {children, title, items} = props;\n  yield {\n    type: 'section',\n    props: props,\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n    \n        for (let item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Section = Section as <T>(props: SectionProps<T>) => JSX.Element;\nexport {_Section as Section};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionBase, Node} from '@react-types/shared';\nimport {CollectionBuilder} from './CollectionBuilder';\nimport {useMemo, useRef} from 'react';\n\ntype CollectionFactory<T, C extends Collection<Node<T>>> = (node: Iterable<Node<T>>, prev: C | null) => C;\n\nexport function useCollection<T extends object, C extends Collection<Node<T>> = Collection<Node<T>>>(props: CollectionBase<T>, factory: CollectionFactory<T, C>, context?: unknown, invalidators: Array<any> = []): C {\n  let builder = useMemo(() => new CollectionBuilder<T>(), []);\n\n  let prev = useRef<C>(null);\n  return useMemo(() => {\n    let nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current;\n  // Don't invalidate when any prop changes, just the two we care about.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builder, props.children, props.items, context, ...invalidators]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBase, CollectionElement, Node} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {Key, ReactElement} from 'react';\n\ninterface CollectionBuilderState {\n  renderer?: (value: any) => ReactElement\n}\n\nexport class CollectionBuilder<T extends object> {\n  private context?: unknown;\n  private cache: WeakMap<T, Node<T>> = new WeakMap();\n\n  build(props: CollectionBase<T>, context?: unknown) {\n    this.context = context;\n    return iterable(() => this.iterateCollection(props));\n  }\n\n  private *iterateCollection(props: CollectionBase<T>) {\n    let {children, items} = props;\n\n    if (typeof children === 'function') {\n      if (!items) {\n        throw new Error('props.children was a function but props.items is missing');\n      }\n\n      for (let item of props.items) {\n        yield* this.getFullNode({\n          value: item\n        }, {renderer: children});\n      }\n    } else {\n      let items: CollectionElement<T>[] = [];\n      React.Children.forEach(children, child => {\n        items.push(child);\n      });\n\n      let index = 0;\n      for (let item of items) {\n        let nodes = this.getFullNode({\n          element: item,\n          index: index\n        }, {});\n\n        for (let node of nodes) {\n          index++;\n          yield node;\n        }\n      }\n    }\n  }\n\n  private getKey(item: CollectionElement<T>, partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key): Key {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (partialNode.type === 'cell' && partialNode.key != null) {\n      return `${parentKey}${partialNode.key}`;\n    }\n\n    let v = partialNode.value as any;\n    if (v != null) {\n      let key = v.key ?? v.id;\n      if (key == null) {\n        throw new Error('No key found for item');\n      }\n\n      return key;\n    }\n\n    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n  }\n\n  private getChildState(state: CollectionBuilderState, partialNode: PartialNode<T>) {\n    return {\n      renderer: partialNode.renderer || state.renderer\n    };\n  }\n\n  private *getFullNode(partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key, parentNode?: Node<T>): Generator<Node<T>> {\n    // If there's a value instead of an element on the node, and a parent renderer function is available,\n    // use it to render an element for the value.\n    let element = partialNode.element;\n    if (!element && partialNode.value && state && state.renderer) {\n      let cached = this.cache.get(partialNode.value);\n      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n        cached.index = partialNode.index;\n        cached.parentKey = parentNode ? parentNode.key : null;\n        yield cached;\n        return;\n      }\n\n      element = state.renderer(partialNode.value);\n    }\n\n    // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n    // Call this function to get a partial node, and recursively build a full node from there.\n    if (React.isValidElement(element)) {\n      let type = element.type as any;\n      if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n        let name = typeof element.type === 'function' ? element.type.name : element.type;\n        throw new Error(`Unknown element <${name}> in collection.`);\n      }\n\n      let childNodes = type.getCollectionNode(element.props, this.context) as Generator<PartialNode<T>, void, Node<T>[]>;\n      let index = partialNode.index;\n      let result = childNodes.next();\n      while (!result.done && result.value) {\n        let childNode = result.value;\n\n        partialNode.index = index;\n\n        let nodeKey = childNode.key;\n        if (!nodeKey) {\n          nodeKey = childNode.element ? null : this.getKey(element as CollectionElement<T>, partialNode, state, parentKey);\n        }\n\n        let nodes = this.getFullNode({\n          ...childNode,\n          key: nodeKey,\n          index,\n          wrapper: compose(partialNode.wrapper, childNode.wrapper)\n        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n\n        let children = [...nodes];\n        for (let node of children) {\n          // Cache the node based on its value\n          node.value = childNode.value || partialNode.value;\n          if (node.value) {\n            this.cache.set(node.value, node);\n          }\n\n          // The partial node may have specified a type for the child in order to specify a constraint.\n          // Verify that the full node that was built recursively matches this type.\n          if (partialNode.type && node.type !== partialNode.type) {\n            throw new Error(`Unsupported type <${capitalize(node.type)}> in <${capitalize(parentNode.type)}>. Only <${capitalize(partialNode.type)}> is supported.`);\n          }\n\n          index++;\n          yield node;\n        }\n\n        result = childNodes.next(children);\n      }\n\n      return;\n    }\n\n    // Ignore invalid elements\n    if (partialNode.key == null) {\n      return;\n    }\n\n    // Create full node\n    let builder = this;\n    let node: Node<T> = {\n      type: partialNode.type,\n      props: partialNode.props,\n      key: partialNode.key,\n      parentKey: parentNode ? parentNode.key : null,\n      value: partialNode.value,\n      level: parentNode ? parentNode.level + 1 : 0,\n      index: partialNode.index,\n      rendered: partialNode.rendered,\n      textValue: partialNode.textValue,\n      'aria-label': partialNode['aria-label'],\n      wrapper: partialNode.wrapper,\n      shouldInvalidate: partialNode.shouldInvalidate,\n      hasChildNodes: partialNode.hasChildNodes,\n      childNodes: iterable(function *() {\n        if (!partialNode.hasChildNodes) {\n          return;\n        }\n\n        let index = 0;\n        for (let child of partialNode.childNodes()) {\n          // Ensure child keys are globally unique by prepending the parent node's key\n          if (child.key != null) {\n            // TODO: Remove this line entirely and enforce that users always provide unique keys.\n            // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n            // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n            // children having a key of `abc`.\n            child.key = `${node.key}${child.key}`;\n          }\n\n          child.index = index;\n          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n          for (let node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      })\n    };\n\n    yield node;\n  }\n}\n\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction iterable<T>(iterator: () => IterableIterator<Node<T>>): Iterable<Node<T>> {\n  let cache = [];\n  let iterable = null;\n  return {\n    *[Symbol.iterator]() {\n      for (let item of cache) {\n        yield item;\n      }\n\n      if (!iterable) {\n        iterable = iterator();\n      }\n\n      for (let item of iterable) {\n        cache.push(item);\n        yield item;\n      }\n    }\n  };\n}\n\ntype Wrapper = (element: ReactElement) => ReactElement;\nfunction compose(outer: Wrapper | void, inner: Wrapper | void): Wrapper {\n  if (outer && inner) {\n    return (element) => outer(inner(element));\n  }\n\n  if (outer) {\n    return outer;\n  }\n\n  if (inner) {\n    return inner;\n  }\n}\n\nfunction capitalize(str: string) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Node} from '@react-types/shared';\n\nconst cache = new WeakMap<Iterable<unknown>, number>();\n\nexport function getItemCount<T>(collection: Iterable<Node<T>>): number {\n  let count = cache.get(collection);\n  if (count != null) {\n    return count;\n  }\n\n  count = 0;\n  for (let item of collection) {\n    if (item.type === 'section') {\n      count += getItemCount(item.childNodes);\n    } else {\n      count++;\n    }\n  }\n\n  cache.set(collection, count);\n  return count;\n}\n"]},"metadata":{},"sourceType":"module"}