{"ast":null,"code":"import * as React from 'react';\nimport CurrentRenderContext from \"./CurrentRenderContext\";\nexport default function useCurrentRender(_ref) {\n  var state = _ref.state,\n      navigation = _ref.navigation,\n      descriptors = _ref.descriptors;\n  var current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}","map":{"version":3,"sources":["useCurrentRender.tsx"],"names":["React","CurrentRenderContext","useCurrentRender","state","navigation","descriptors","current","useContext","isFocused","options","routes","index","key"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,oBAAP;AAqBA,eAAe,SAASC,gBAAT,CAAyB,IAAzB,EAIH;AAJ6B,MACvCC,KADuC,GAI/B,IAJ+B,CACvCA,KADuC;AAAA,MAEvCC,UAFuC,GAI/B,IAJ+B,CAEvCA,UAFuC;AAAA,MAGvCC,WAHuC,GAI/B,IAJ+B,CAGvCA,WAHuC;AAKvC,MAAMC,OAAO,GAAGN,KAAK,CAACO,UAANP,CAAiBC,oBAAjBD,CAAhB;;AAEA,MAAIM,OAAO,IAAIF,UAAU,CAACI,SAAXJ,EAAf,EAAuC;AACrCE,IAAAA,OAAO,CAACG,OAARH,GAAkBD,WAAW,CAACF,KAAK,CAACO,MAANP,CAAaA,KAAK,CAACQ,KAAnBR,EAA0BS,GAA3B,CAAXP,CAA2CI,OAA7DH;AACF;AACF","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport CurrentRenderContext from './CurrentRenderContext';\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender(_ref) {\n  let {\n    state,\n    navigation,\n    descriptors\n  } = _ref;\n  const current = React.useContext(CurrentRenderContext);\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n//# sourceMappingURL=useCurrentRender.js.map"]},"metadata":{},"sourceType":"module"}