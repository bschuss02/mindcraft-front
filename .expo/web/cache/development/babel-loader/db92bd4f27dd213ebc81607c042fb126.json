{"ast":null,"code":"var unitlessNumbers = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowGap: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnGap: true,\n  gridColumnStart: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  shadowOpacity: true\n};\nvar prefixes = ['ms', 'Moz', 'O', 'Webkit'];\n\nvar prefixKey = function prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\n\nObject.keys(unitlessNumbers).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\nexport default unitlessNumbers;","map":{"version":3,"sources":["unitlessNumbers.ts"],"names":["unitlessNumbers","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexOrder","flexPositive","flexShrink","flexNegative","fontWeight","gridRow","gridRowEnd","gridRowGap","gridRowStart","gridColumn","gridColumnEnd","gridColumnGap","gridColumnStart","lineClamp","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","scale","scaleX","scaleY","scaleZ","shadowOpacity","prefixes","prefixKey","prefix","key","Object","prop"],"mappings":"AAIA,IAAMA,eAAoB,GAAG;AAC3BC,EAAAA,uBAAuB,EADI,IAAA;AAE3BC,EAAAA,WAAW,EAFgB,IAAA;AAG3BC,EAAAA,iBAAiB,EAHU,IAAA;AAI3BC,EAAAA,gBAAgB,EAJW,IAAA;AAK3BC,EAAAA,gBAAgB,EALW,IAAA;AAM3BC,EAAAA,OAAO,EANoB,IAAA;AAO3BC,EAAAA,YAAY,EAPe,IAAA;AAQ3BC,EAAAA,eAAe,EARY,IAAA;AAS3BC,EAAAA,WAAW,EATgB,IAAA;AAU3BC,EAAAA,IAAI,EAVuB,IAAA;AAW3BC,EAAAA,QAAQ,EAXmB,IAAA;AAY3BC,EAAAA,SAAS,EAZkB,IAAA;AAa3BC,EAAAA,YAAY,EAbe,IAAA;AAc3BC,EAAAA,UAAU,EAdiB,IAAA;AAe3BC,EAAAA,YAAY,EAfe,IAAA;AAgB3BC,EAAAA,UAAU,EAhBiB,IAAA;AAiB3BC,EAAAA,OAAO,EAjBoB,IAAA;AAkB3BC,EAAAA,UAAU,EAlBiB,IAAA;AAmB3BC,EAAAA,UAAU,EAnBiB,IAAA;AAoB3BC,EAAAA,YAAY,EApBe,IAAA;AAqB3BC,EAAAA,UAAU,EArBiB,IAAA;AAsB3BC,EAAAA,aAAa,EAtBc,IAAA;AAuB3BC,EAAAA,aAAa,EAvBc,IAAA;AAwB3BC,EAAAA,eAAe,EAxBY,IAAA;AAyB3BC,EAAAA,SAAS,EAzBkB,IAAA;AA0B3BC,EAAAA,OAAO,EA1BoB,IAAA;AA2B3BC,EAAAA,KAAK,EA3BsB,IAAA;AA4B3BC,EAAAA,OAAO,EA5BoB,IAAA;AA6B3BC,EAAAA,OAAO,EA7BoB,IAAA;AA8B3BC,EAAAA,MAAM,EA9BqB,IAAA;AA+B3BC,EAAAA,MAAM,EA/BqB,IAAA;AAgC3BC,EAAAA,IAAI,EAhCuB,IAAA;AAkC3BC,EAAAA,WAAW,EAlCgB,IAAA;AAmC3BC,EAAAA,YAAY,EAnCe,IAAA;AAoC3BC,EAAAA,WAAW,EApCgB,IAAA;AAqC3BC,EAAAA,eAAe,EArCY,IAAA;AAsC3BC,EAAAA,gBAAgB,EAtCW,IAAA;AAuC3BC,EAAAA,gBAAgB,EAvCW,IAAA;AAwC3BC,EAAAA,aAAa,EAxCc,IAAA;AAyC3BC,EAAAA,WAAW,EAzCgB,IAAA;AA2C3BC,EAAAA,KAAK,EA3CsB,IAAA;AA4C3BC,EAAAA,MAAM,EA5CqB,IAAA;AA6C3BC,EAAAA,MAAM,EA7CqB,IAAA;AA8C3BC,EAAAA,MAAM,EA9CqB,IAAA;AAgD3BC,EAAAA,aAAa,EAAE;AAhDY,CAA7B;AAuDA,IAAMC,QAAQ,GAAG,CAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAjB,QAAiB,CAAjB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAA,MAAA,EAAA,GAAA,EAAiC;AACjD,SAAOC,MAAM,GAAGC,GAAG,CAAHA,MAAAA,CAAAA,CAAAA,EAATD,WAASC,EAATD,GAAuCC,GAAG,CAAHA,SAAAA,CAA9C,CAA8CA,CAA9C;AADF,CAAA;;AAGAC,MAAM,CAANA,IAAAA,CAAAA,eAAAA,EAAAA,OAAAA,CAAsCC,UAAAA,IAAD,EAAU;AAC7CL,EAAAA,QAAQ,CAARA,OAAAA,CAAkBE,UAAAA,MAAD,EAAY;AAC3BhD,IAAAA,eAAe,CAAC+C,SAAS,CAAA,MAAA,EAAzB/C,IAAyB,CAAV,CAAfA,GAA2CA,eAAe,CAA1DA,IAA0D,CAA1DA;AADF8C,GAAAA;AADFI,CAAAA;AAMA,eAAA,eAAA","sourcesContent":["/* eslint-disable */\n//@ts-nocheck\n// This functions is taken from react native web\n\nconst unitlessNumbers: any = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowGap: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnGap: true,\n  gridColumnStart: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  // transform types\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  // RN properties\n  shadowOpacity: true,\n};\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nconst prefixes = ['ms', 'Moz', 'O', 'Webkit'];\nconst prefixKey = (prefix: string, key: string) => {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\nObject.keys(unitlessNumbers).forEach((prop) => {\n  prefixes.forEach((prefix) => {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\n\nexport default unitlessNumbers;\n"]},"metadata":{},"sourceType":"module"}