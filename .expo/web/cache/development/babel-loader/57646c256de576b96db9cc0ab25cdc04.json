{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CommonActions } from '@react-navigation/routers';\nexport var NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nexport default function createNavigationContainerRef() {\n  var methods = [].concat(_toConsumableArray(Object.keys(CommonActions)), ['addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions']);\n  var listeners = {};\n\n  var removeListener = function removeListener(event, callback) {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter(function (cb) {\n        return cb !== callback;\n      });\n    }\n  };\n\n  var current = null;\n\n  var ref = _objectSpread({\n    get current() {\n      return current;\n    },\n\n    set current(value) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              event = _ref2[0],\n              callbacks = _ref2[1];\n\n          callbacks.forEach(function (callback) {\n            value.addListener(event, callback);\n          });\n        });\n      }\n    },\n\n    isReady: function isReady() {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    }\n  }, methods.reduce(function (acc, name) {\n    acc[name] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (current == null) {\n        switch (name) {\n          case 'addListener':\n            {\n              var event = args[0],\n                  callback = args[1];\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n              return function () {\n                return removeListener(event, callback);\n              };\n            }\n\n          case 'removeListener':\n            {\n              var _event = args[0],\n                  _callback = args[1];\n              removeListener(_event, _callback);\n              break;\n            }\n\n          default:\n            console.error(NOT_INITIALIZED_ERROR);\n        }\n      } else {\n        var _current;\n\n        return (_current = current)[name].apply(_current, args);\n      }\n    };\n\n    return acc;\n  }, {}));\n\n  return ref;\n}","map":{"version":3,"sources":["createNavigationContainerRef.tsx"],"names":["CommonActions","NOT_INITIALIZED_ERROR","createNavigationContainerRef","methods","Object","keys","listeners","removeListener","event","callback","filter","cb","current","ref","value","entries","forEach","callbacks","addListener","isReady","reduce","acc","name","args","push","console","error"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\nexport const NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nexport default function createNavigationContainerRef() {\n  const methods = [...Object.keys(CommonActions), 'addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions'];\n  const listeners = {};\n  const removeListener = (event, callback) => {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter(cb => cb !== callback);\n    }\n  };\n  let current = null;\n  const ref = {\n    get current() {\n      return current;\n    },\n    set current(value) {\n      current = value;\n      if (value != null) {\n        Object.entries(listeners).forEach(_ref => {\n          let [event, callbacks] = _ref;\n          callbacks.forEach(callback => {\n            value.addListener(event, callback);\n          });\n        });\n      }\n    },\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n      return current.isReady();\n    },\n    ...methods.reduce((acc, name) => {\n      acc[name] = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (current == null) {\n          switch (name) {\n            case 'addListener':\n              {\n                const [event, callback] = args;\n                listeners[event] = listeners[event] || [];\n                listeners[event].push(callback);\n                return () => removeListener(event, callback);\n              }\n            case 'removeListener':\n              {\n                const [event, callback] = args;\n                removeListener(event, callback);\n                break;\n              }\n            default:\n              console.error(NOT_INITIALIZED_ERROR);\n          }\n        } else {\n          // @ts-expect-error: this is ok\n          return current[name](...args);\n        }\n      };\n      return acc;\n    }, {})\n  };\n  return ref;\n}\n//# sourceMappingURL=createNavigationContainerRef.js.map"]},"metadata":{},"sourceType":"module"}