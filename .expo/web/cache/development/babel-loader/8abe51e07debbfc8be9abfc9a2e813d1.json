{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { nanoid } from 'nanoid/non-secure';\nimport BaseRouter from \"./BaseRouter\";\nexport var StackActions = {\n  replace: function replace(name, params) {\n    return {\n      type: 'REPLACE',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  push: function push(name, params) {\n    return {\n      type: 'PUSH',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  pop: function pop() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return {\n      type: 'POP',\n      payload: {\n        count: count\n      }\n    };\n  },\n  popToTop: function popToTop() {\n    return {\n      type: 'POP_TO_TOP'\n    };\n  }\n};\nexport default function StackRouter(options) {\n  var router = _objectSpread(_objectSpread({}, BaseRouter), {}, {\n    type: 'stack',\n    getInitialState: function getInitialState(_ref) {\n      var routeNames = _ref.routeNames,\n          routeParamList = _ref.routeParamList;\n      var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\" + nanoid(),\n        index: 0,\n        routeNames: routeNames,\n        routes: [{\n          key: initialRouteName + \"-\" + nanoid(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        }]\n      };\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref2) {\n      var routeNames = _ref2.routeNames,\n          routeParamList = _ref2.routeParamList;\n      var state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name);\n      }).map(function (route) {\n        return _objectSpread(_objectSpread({}, route), {}, {\n          key: route.key || route.name + \"-\" + nanoid(),\n          params: routeParamList[route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[route.name]), route.params) : route.params\n        });\n      });\n\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: initialRouteName + \"-\" + nanoid(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\" + nanoid(),\n        index: routes.length - 1,\n        routeNames: routeNames,\n        routes: routes\n      };\n    },\n    getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n      var routeNames = _ref3.routeNames,\n          routeParamList = _ref3.routeParamList,\n          routeKeyChanges = _ref3.routeKeyChanges;\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name) && !routeKeyChanges.includes(route.name);\n      });\n\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: initialRouteName + \"-\" + nanoid(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        routeNames: routeNames,\n        routes: routes,\n        index: Math.min(state.index, routes.length - 1)\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var index = state.routes.findIndex(function (r) {\n        return r.key === key;\n      });\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        index: index,\n        routes: state.routes.slice(0, index + 1)\n      });\n    },\n    getStateForAction: function getStateForAction(state, action, options) {\n      var routeParamList = options.routeParamList;\n\n      switch (action.type) {\n        case 'REPLACE':\n          {\n            var index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n\n            if (index === -1) {\n              return null;\n            }\n\n            var _action$payload = action.payload,\n                name = _action$payload.name,\n                key = _action$payload.key,\n                params = _action$payload.params;\n\n            if (!state.routeNames.includes(name)) {\n              return null;\n            }\n\n            return _objectSpread(_objectSpread({}, state), {}, {\n              routes: state.routes.map(function (route, i) {\n                return i === index ? {\n                  key: key !== undefined ? key : name + \"-\" + nanoid(),\n                  name: name,\n                  params: routeParamList[name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[name]), params) : params\n                } : route;\n              })\n            });\n          }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            var getId = options.routeGetIdList[action.payload.name];\n            var id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            var route = id ? state.routes.find(function (route) {\n              return route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n                params: route.params\n              }));\n            }) : undefined;\n            var routes;\n\n            if (route) {\n              routes = state.routes.filter(function (r) {\n                return r.key !== route.key;\n              });\n              routes.push(_objectSpread(_objectSpread({}, route), {}, {\n                params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n              }));\n            } else {\n              routes = [].concat(_toConsumableArray(state.routes), [{\n                key: action.payload.name + \"-\" + nanoid(),\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n              }]);\n            }\n\n            return _objectSpread(_objectSpread({}, state), {}, {\n              index: routes.length - 1,\n              routes: routes\n            });\n          }\n\n          return null;\n\n        case 'POP':\n          {\n            var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n\n            if (_index > 0) {\n              var count = Math.max(_index - action.payload.count + 1, 1);\n\n              var _routes = state.routes.slice(0, count).concat(state.routes.slice(_index + 1));\n\n              return _objectSpread(_objectSpread({}, state), {}, {\n                index: _routes.length - 1,\n                routes: _routes\n              });\n            }\n\n            return null;\n          }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(state, {\n            type: 'POP',\n            payload: {\n              count: state.routes.length - 1\n            }\n          }, options);\n\n        case 'NAVIGATE':\n          if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            var _action$payload$path;\n\n            var _index2 = -1;\n\n            var _getId = action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n\n            var _id = _getId === null || _getId === void 0 ? void 0 : _getId({\n              params: action.payload.params\n            });\n\n            if (_id) {\n              _index2 = state.routes.findIndex(function (route) {\n                return route.name === action.payload.name && _id === (_getId === null || _getId === void 0 ? void 0 : _getId({\n                  params: route.params\n                }));\n              });\n            } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n              _index2 = state.index;\n            } else {\n              for (var i = state.routes.length - 1; i >= 0; i--) {\n                if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                  _index2 = i;\n                  break;\n                }\n              }\n            }\n\n            if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n              return null;\n            }\n\n            if (_index2 === -1 && action.payload.name !== undefined) {\n              var _action$payload$key;\n\n              var _routes2 = [].concat(_toConsumableArray(state.routes), [{\n                key: (_action$payload$key = action.payload.key) != null ? _action$payload$key : action.payload.name + \"-\" + nanoid(),\n                name: action.payload.name,\n                path: action.payload.path,\n                params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n              }]);\n\n              return _objectSpread(_objectSpread({}, state), {}, {\n                routes: _routes2,\n                index: _routes2.length - 1\n              });\n            }\n\n            var _route = state.routes[_index2];\n\n            var _params;\n\n            if (action.payload.merge) {\n              _params = action.payload.params !== undefined || routeParamList[_route.name] !== undefined ? _objectSpread(_objectSpread(_objectSpread({}, routeParamList[_route.name]), _route.params), action.payload.params) : _route.params;\n            } else {\n              _params = routeParamList[_route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[_route.name]), action.payload.params) : action.payload.params;\n            }\n\n            return _objectSpread(_objectSpread({}, state), {}, {\n              index: _index2,\n              routes: [].concat(_toConsumableArray(state.routes.slice(0, _index2)), [_params !== _route.params || action.payload.path && action.payload.path !== _route.path ? _objectSpread(_objectSpread({}, _route), {}, {\n                path: (_action$payload$path = action.payload.path) != null ? _action$payload$path : _route.path,\n                params: _params\n              }) : state.routes[_index2]])\n            });\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: 1\n              },\n              target: action.target,\n              source: action.source\n            }, options);\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n    actionCreators: StackActions\n  });\n\n  return router;\n}","map":{"version":3,"sources":["StackRouter.tsx"],"names":["nanoid","BaseRouter","StackActions","replace","name","params","type","payload","push","pop","count","popToTop","StackRouter","options","router","getInitialState","routeNames","routeParamList","initialRouteName","undefined","includes","stale","key","index","routes","getRehydratedState","partialState","state","filter","route","map","length","getStateForRouteNamesChange","routeKeyChanges","Math","min","getStateForRouteFocus","findIndex","r","slice","getStateForAction","action","target","source","i","getId","routeGetIdList","id","find","max","concat","path","merge","actionCreators"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport BaseRouter from './BaseRouter';\nexport const StackActions = {\n  replace(name, params) {\n    return {\n      type: 'REPLACE',\n      payload: {\n        name,\n        params\n      }\n    };\n  },\n  push(name, params) {\n    return {\n      type: 'PUSH',\n      payload: {\n        name,\n        params\n      }\n    };\n  },\n  pop() {\n    let count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return {\n      type: 'POP',\n      payload: {\n        count\n      }\n    };\n  },\n  popToTop() {\n    return {\n      type: 'POP_TO_TOP'\n    };\n  }\n};\nexport default function StackRouter(options) {\n  const router = {\n    ...BaseRouter,\n    type: 'stack',\n    getInitialState(_ref) {\n      let {\n        routeNames,\n        routeParamList\n      } = _ref;\n      const initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [{\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        }]\n      };\n    },\n    getRehydratedState(partialState, _ref2) {\n      let {\n        routeNames,\n        routeParamList\n      } = _ref2;\n      let state = partialState;\n      if (state.stale === false) {\n        return state;\n      }\n      const routes = state.routes.filter(route => routeNames.includes(route.name)).map(route => ({\n        ...route,\n        key: route.key || `${route.name}-${nanoid()}`,\n        params: routeParamList[route.name] !== undefined ? {\n          ...routeParamList[route.name],\n          ...route.params\n        } : route.params\n      }));\n      if (routes.length === 0) {\n        const initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes\n      };\n    },\n    getStateForRouteNamesChange(state, _ref3) {\n      let {\n        routeNames,\n        routeParamList,\n        routeKeyChanges\n      } = _ref3;\n      const routes = state.routes.filter(route => routeNames.includes(route.name) && !routeKeyChanges.includes(route.name));\n      if (routes.length === 0) {\n        const initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1)\n      };\n    },\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex(r => r.key === key);\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1)\n      };\n    },\n    getStateForAction(state, action, options) {\n      const {\n        routeParamList\n      } = options;\n      switch (action.type) {\n        case 'REPLACE':\n          {\n            const index = action.target === state.key && action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            const {\n              name,\n              key,\n              params\n            } = action.payload;\n            if (!state.routeNames.includes(name)) {\n              return null;\n            }\n            return {\n              ...state,\n              routes: state.routes.map((route, i) => i === index ? {\n                key: key !== undefined ? key : `${name}-${nanoid()}`,\n                name,\n                params: routeParamList[name] !== undefined ? {\n                  ...routeParamList[name],\n                  ...params\n                } : params\n              } : route)\n            };\n          }\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            const route = id ? state.routes.find(route => route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n              params: route.params\n            }))) : undefined;\n            let routes;\n            if (route) {\n              routes = state.routes.filter(r => r.key !== route.key);\n              routes.push({\n                ...route,\n                params: routeParamList[action.payload.name] !== undefined ? {\n                  ...routeParamList[action.payload.name],\n                  ...action.payload.params\n                } : action.payload.params\n              });\n            } else {\n              routes = [...state.routes, {\n                key: `${action.payload.name}-${nanoid()}`,\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? {\n                  ...routeParamList[action.payload.name],\n                  ...action.payload.params\n                } : action.payload.params\n              }];\n            }\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes\n            };\n          }\n          return null;\n        case 'POP':\n          {\n            const index = action.target === state.key && action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index > 0) {\n              const count = Math.max(index - action.payload.count + 1, 1);\n              const routes = state.routes.slice(0, count).concat(state.routes.slice(index + 1));\n              return {\n                ...state,\n                index: routes.length - 1,\n                routes\n              };\n            }\n            return null;\n          }\n        case 'POP_TO_TOP':\n          return router.getStateForAction(state, {\n            type: 'POP',\n            payload: {\n              count: state.routes.length - 1\n            }\n          }, options);\n        case 'NAVIGATE':\n          if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n            const getId =\n            // `getId` and `key` can't be used together\n            action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n            const id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            if (id) {\n              index = state.routes.findIndex(route => route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n                params: route.params\n              })));\n            } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n            if (index === -1 && action.payload.key && action.payload.name === undefined) {\n              return null;\n            }\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [...state.routes, {\n                key: action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                name: action.payload.name,\n                path: action.payload.path,\n                params: routeParamList[action.payload.name] !== undefined ? {\n                  ...routeParamList[action.payload.name],\n                  ...action.payload.params\n                } : action.payload.params\n              }];\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1\n              };\n            }\n            const route = state.routes[index];\n            let params;\n            if (action.payload.merge) {\n              params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? {\n                ...routeParamList[route.name],\n                ...route.params,\n                ...action.payload.params\n              } : route.params;\n            } else {\n              params = routeParamList[route.name] !== undefined ? {\n                ...routeParamList[route.name],\n                ...action.payload.params\n              } : action.payload.params;\n            }\n            return {\n              ...state,\n              index,\n              routes: [...state.routes.slice(0, index), params !== route.params || action.payload.path && action.payload.path !== route.path ? {\n                ...route,\n                path: action.payload.path ?? route.path,\n                params\n              } : state.routes[index]]\n            };\n          }\n          return null;\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: 1\n              },\n              target: action.target,\n              source: action.source\n            }, options);\n          }\n          return null;\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n    actionCreators: StackActions\n  };\n  return router;\n}\n//# sourceMappingURL=StackRouter.js.map"]},"metadata":{},"sourceType":"module"}