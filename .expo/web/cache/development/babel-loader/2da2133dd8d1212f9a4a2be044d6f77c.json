{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationRouteContext from \"./NavigationRouteContext\";\nvar VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\nexport var shouldPreventRemove = function shouldPreventRemove(emitter, beforeRemoveListeners, currentRoutes, nextRoutes, action) {\n  var _action$VISITED_ROUTE;\n\n  var nextRouteKeys = nextRoutes.map(function (route) {\n    return route.key;\n  });\n  var removedRoutes = currentRoutes.filter(function (route) {\n    return !nextRouteKeys.includes(route.key);\n  }).reverse();\n  var visitedRouteKeys = (_action$VISITED_ROUTE = action[VISITED_ROUTE_KEYS]) != null ? _action$VISITED_ROUTE : new Set();\n\n  var beforeRemoveAction = _objectSpread(_objectSpread({}, action), {}, _defineProperty({}, VISITED_ROUTE_KEYS, visitedRouteKeys));\n\n  for (var route of removedRoutes) {\n    var _beforeRemoveListener;\n\n    if (visitedRouteKeys.has(route.key)) {\n      continue;\n    }\n\n    var isPrevented = (_beforeRemoveListener = beforeRemoveListeners[route.key]) === null || _beforeRemoveListener === void 0 ? void 0 : _beforeRemoveListener.call(beforeRemoveListeners, beforeRemoveAction);\n\n    if (isPrevented) {\n      return true;\n    }\n\n    visitedRouteKeys.add(route.key);\n    var event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: {\n        action: beforeRemoveAction\n      },\n      canPreventDefault: true\n    });\n\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n\n  return false;\n};\nexport default function useOnPreventRemove(_ref) {\n  var getState = _ref.getState,\n      emitter = _ref.emitter,\n      beforeRemoveListeners = _ref.beforeRemoveListeners;\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      addKeyedListener = _React$useContext.addKeyedListener;\n\n  var route = React.useContext(NavigationRouteContext);\n  var routeKey = route === null || route === void 0 ? void 0 : route.key;\n  React.useEffect(function () {\n    if (routeKey) {\n      return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('beforeRemove', routeKey, function (action) {\n        var state = getState();\n        return shouldPreventRemove(emitter, beforeRemoveListeners, state.routes, [], action);\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}","map":{"version":3,"sources":["useOnPreventRemove.tsx"],"names":["React","NavigationBuilderContext","NavigationRouteContext","VISITED_ROUTE_KEYS","Symbol","shouldPreventRemove","emitter","beforeRemoveListeners","currentRoutes","nextRoutes","action","nextRouteKeys","map","route","key","removedRoutes","filter","includes","reverse","visitedRouteKeys","Set","beforeRemoveAction","has","isPrevented","add","event","emit","type","target","data","canPreventDefault","defaultPrevented","useOnPreventRemove","getState","addKeyedListener","useContext","routeKey","useEffect","state","routes"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nconst VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\nexport const shouldPreventRemove = (emitter, beforeRemoveListeners, currentRoutes, nextRoutes, action) => {\n  const nextRouteKeys = nextRoutes.map(route => route.key);\n\n  // Call these in reverse order so last screens handle the event first\n  const removedRoutes = currentRoutes.filter(route => !nextRouteKeys.includes(route.key)).reverse();\n  const visitedRouteKeys =\n  // @ts-expect-error: add this property to mark that we've already emitted this action\n  action[VISITED_ROUTE_KEYS] ?? new Set();\n  const beforeRemoveAction = {\n    ...action,\n    [VISITED_ROUTE_KEYS]: visitedRouteKeys\n  };\n  for (const route of removedRoutes) {\n    var _beforeRemoveListener;\n    if (visitedRouteKeys.has(route.key)) {\n      // Skip if we've already emitted this action for this screen\n      continue;\n    }\n\n    // First, we need to check if any child screens want to prevent it\n    const isPrevented = (_beforeRemoveListener = beforeRemoveListeners[route.key]) === null || _beforeRemoveListener === void 0 ? void 0 : _beforeRemoveListener.call(beforeRemoveListeners, beforeRemoveAction);\n    if (isPrevented) {\n      return true;\n    }\n    visitedRouteKeys.add(route.key);\n    const event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: {\n        action: beforeRemoveAction\n      },\n      canPreventDefault: true\n    });\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n  return false;\n};\nexport default function useOnPreventRemove(_ref) {\n  let {\n    getState,\n    emitter,\n    beforeRemoveListeners\n  } = _ref;\n  const {\n    addKeyedListener\n  } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const routeKey = route === null || route === void 0 ? void 0 : route.key;\n  React.useEffect(() => {\n    if (routeKey) {\n      return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('beforeRemove', routeKey, action => {\n        const state = getState();\n        return shouldPreventRemove(emitter, beforeRemoveListeners, state.routes, [], action);\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}\n//# sourceMappingURL=useOnPreventRemove.js.map"]},"metadata":{},"sourceType":"module"}