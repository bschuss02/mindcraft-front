{"ast":null,"code":"export default function checkDuplicateRouteNames(state) {\n  var duplicates = [];\n\n  var getRouteNames = function getRouteNames(location, state) {\n    state.routes.forEach(function (route) {\n      var _route$state, _route$state$routeNam;\n\n      var currentLocation = location ? location + \" > \" + route.name : route.name;\n      (_route$state = route.state) === null || _route$state === void 0 ? void 0 : (_route$state$routeNam = _route$state.routeNames) === null || _route$state$routeNam === void 0 ? void 0 : _route$state$routeNam.forEach(function (routeName) {\n        if (routeName === route.name) {\n          duplicates.push([currentLocation, currentLocation + \" > \" + route.name]);\n        }\n      });\n\n      if (route.state) {\n        getRouteNames(currentLocation, route.state);\n      }\n    });\n  };\n\n  getRouteNames('', state);\n  return duplicates;\n}","map":{"version":3,"sources":["checkDuplicateRouteNames.tsx"],"names":["checkDuplicateRouteNames","state","duplicates","getRouteNames","location","routes","forEach","route","currentLocation","name","routeNames","routeName","push"],"mappings":"AAEA,eAAe,SAASA,wBAAT,CAAkCC,KAAlC,EAA0D;AACvE,MAAMC,UAAsB,GAAG,EAA/B;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CACpBC,QADoB,EAEpBH,KAFoB,EAGjB;AACHA,IAAAA,KAAK,CAACI,MAANJ,CAAaK,OAAbL,CAAsBM,UAAAA,KAA6B,EAAK;AAAA,UAAA,YAAA,EAAA,qBAAA;;AACtD,UAAMC,eAAe,GAAGJ,QAAQ,GACzBA,QADyB,WACXG,KAAK,CAACE,IADK,GAE5BF,KAAK,CAACE,IAFV;AAIA,OAAA,YAAA,GAAA,KAAK,CAACR,KAAN,MAAW,IAAX,IAAW,YAAA,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAW,CAAA,qBAAA,GAAX,YAAA,CAAaS,UAAF,MAAY,IAAZ,IAAY,qBAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAX,qBAAA,CAAyBJ,OAAzB,CAAkCK,UAAAA,SAAS,EAAK;AAC9C,YAAIA,SAAS,KAAKJ,KAAK,CAACE,IAAxB,EAA8B;AAC5BP,UAAAA,UAAU,CAACU,IAAXV,CAAgB,CACdM,eADc,EAEXA,eAFW,WAEUD,KAAK,CAACE,IAFhB,CAAhBP;AAIF;AACD,OAPD,CAAA;;AASA,UAAIK,KAAK,CAACN,KAAV,EAAiB;AACfE,QAAAA,aAAa,CAACK,eAAD,EAAkBD,KAAK,CAACN,KAAxB,CAAbE;AACF;AACD,KAjBDF;AAkBD,GAtBD;;AAwBAE,EAAAA,aAAa,CAAC,EAAD,EAAKF,KAAL,CAAbE;AAEA,SAAOD,UAAP;AACF","sourceRoot":"../../src","sourcesContent":["export default function checkDuplicateRouteNames(state) {\n  const duplicates = [];\n  const getRouteNames = (location, state) => {\n    state.routes.forEach(route => {\n      var _route$state, _route$state$routeNam;\n      const currentLocation = location ? `${location} > ${route.name}` : route.name;\n      (_route$state = route.state) === null || _route$state === void 0 ? void 0 : (_route$state$routeNam = _route$state.routeNames) === null || _route$state$routeNam === void 0 ? void 0 : _route$state$routeNam.forEach(routeName => {\n        if (routeName === route.name) {\n          duplicates.push([currentLocation, `${currentLocation} > ${route.name}`]);\n        }\n      });\n      if (route.state) {\n        getRouteNames(currentLocation, route.state);\n      }\n    });\n  };\n  getRouteNames('', state);\n  return duplicates;\n}\n//# sourceMappingURL=checkDuplicateRouteNames.js.map"]},"metadata":{},"sourceType":"module"}