{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PanGestureHandler, State as GestureState } from 'react-native-gesture-handler';\nimport Animated, { interpolate, runOnJS, useAnimatedGestureHandler, useAnimatedStyle, useDerivedValue, useSharedValue, withSpring } from 'react-native-reanimated';\nimport DrawerProgressContext from \"../../utils/DrawerProgressContext\";\nimport Overlay from \"./Overlay\";\nvar SWIPE_DISTANCE_MINIMUM = 5;\nvar DEFAULT_DRAWER_WIDTH = '80%';\n\nvar minmax = function () {\n  var _f = function _f(value, start, end) {\n    return Math.min(Math.max(value, start), end);\n  };\n\n  _f._closure = {};\n  _f.asString = \"function _f(value,start,end){return Math.min(Math.max(value,start),end);}\";\n  _f.__workletHash = 12387352865556;\n  _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js (10:15)\";\n  return _f;\n}();\n\nexport default function Drawer(_ref) {\n  var dimensions = _ref.dimensions,\n      drawerPosition = _ref.drawerPosition,\n      drawerStyle = _ref.drawerStyle,\n      drawerType = _ref.drawerType,\n      gestureHandlerProps = _ref.gestureHandlerProps,\n      hideStatusBarOnOpen = _ref.hideStatusBarOnOpen,\n      keyboardDismissMode = _ref.keyboardDismissMode,\n      onClose = _ref.onClose,\n      onOpen = _ref.onOpen,\n      open = _ref.open,\n      overlayStyle = _ref.overlayStyle,\n      renderDrawerContent = _ref.renderDrawerContent,\n      renderSceneContent = _ref.renderSceneContent,\n      statusBarAnimation = _ref.statusBarAnimation,\n      swipeDistanceThreshold = _ref.swipeDistanceThreshold,\n      swipeEdgeWidth = _ref.swipeEdgeWidth,\n      swipeEnabled = _ref.swipeEnabled,\n      swipeVelocityThreshold = _ref.swipeVelocityThreshold,\n      overlayAccessibilityLabel = _ref.overlayAccessibilityLabel;\n\n  var getDrawerWidth = function getDrawerWidth() {\n    var _ref3 = StyleSheet.flatten(drawerStyle) || {},\n        _ref3$width = _ref3.width,\n        width = _ref3$width === void 0 ? DEFAULT_DRAWER_WIDTH : _ref3$width;\n\n    if (typeof width === 'string' && width.endsWith('%')) {\n      var percentage = Number(width.replace(/%$/, ''));\n\n      if (Number.isFinite(percentage)) {\n        return dimensions.width * (percentage / 100);\n      }\n    }\n\n    return typeof width === 'number' ? width : 0;\n  };\n\n  var drawerWidth = getDrawerWidth();\n  var isOpen = drawerType === 'permanent' ? true : open;\n  var isRight = drawerPosition === 'right';\n  var getDrawerTranslationX = React.useCallback(function () {\n    var _f = function _f(open) {\n      if (drawerPosition === 'left') {\n        return open ? 0 : -drawerWidth;\n      }\n\n      return open ? 0 : drawerWidth;\n    };\n\n    _f._closure = {\n      drawerPosition: drawerPosition,\n      drawerWidth: drawerWidth\n    };\n    _f.asString = \"function _f(open){const{drawerPosition,drawerWidth}=jsThis._closure;{if(drawerPosition==='left'){return open?0:-drawerWidth;}return open?0:drawerWidth;}}\";\n    _f.__workletHash = 4752955090285;\n    _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js (53:50)\";\n    return _f;\n  }(), [drawerPosition, drawerWidth]);\n  var hideStatusBar = React.useCallback(function (hide) {\n    if (hideStatusBarOnOpen) {\n      StatusBar.setHidden(hide, statusBarAnimation);\n    }\n  }, [hideStatusBarOnOpen, statusBarAnimation]);\n  React.useEffect(function () {\n    hideStatusBar(isOpen);\n    return function () {\n      return hideStatusBar(false);\n    };\n  }, [isOpen, hideStatusBarOnOpen, statusBarAnimation, hideStatusBar]);\n  var interactionHandleRef = React.useRef(null);\n\n  var startInteraction = function startInteraction() {\n    interactionHandleRef.current = InteractionManager.createInteractionHandle();\n  };\n\n  var endInteraction = function endInteraction() {\n    if (interactionHandleRef.current != null) {\n      InteractionManager.clearInteractionHandle(interactionHandleRef.current);\n      interactionHandleRef.current = null;\n    }\n  };\n\n  var hideKeyboard = function hideKeyboard() {\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n  };\n\n  var onGestureStart = function onGestureStart() {\n    startInteraction();\n    hideKeyboard();\n    hideStatusBar(true);\n  };\n\n  var onGestureFinish = function onGestureFinish() {\n    endInteraction();\n  };\n\n  var hitSlop = isRight ? {\n    right: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  } : {\n    left: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  };\n  var touchStartX = useSharedValue(0);\n  var touchX = useSharedValue(0);\n  var translationX = useSharedValue(getDrawerTranslationX(open));\n  var gestureState = useSharedValue(GestureState.UNDETERMINED);\n  var toggleDrawer = React.useCallback(function () {\n    var _f = function _f(_ref2) {\n      var open = _ref2.open,\n          isUserInitiated = _ref2.isUserInitiated,\n          velocity = _ref2.velocity;\n      var translateX = getDrawerTranslationX(open);\n      touchStartX.value = 0;\n      touchX.value = 0;\n      translationX.value = withSpring(translateX, {\n        velocity: velocity,\n        stiffness: 1000,\n        damping: 500,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01\n      });\n\n      if (!isUserInitiated) {\n        return;\n      }\n\n      if (open) {\n        runOnJS(onOpen)();\n      } else {\n        runOnJS(onClose)();\n      }\n    };\n\n    _f._closure = {\n      getDrawerTranslationX: getDrawerTranslationX,\n      touchStartX: touchStartX,\n      touchX: touchX,\n      translationX: translationX,\n      withSpring: withSpring,\n      runOnJS: runOnJS,\n      onOpen: onOpen,\n      onClose: onClose\n    };\n    _f.asString = \"function _f(_ref2){const{getDrawerTranslationX,touchStartX,touchX,translationX,withSpring,runOnJS,onOpen,onClose}=jsThis._closure;{let{open:open,isUserInitiated:isUserInitiated,velocity:velocity}=_ref2;const translateX=getDrawerTranslationX(open);touchStartX.value=0;touchX.value=0;translationX.value=withSpring(translateX,{velocity:velocity,stiffness:1000,damping:500,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01});if(!isUserInitiated){return;}if(open){runOnJS(onOpen)();}else{runOnJS(onClose)();}}}\";\n    _f.__workletHash = 284988876842;\n    _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js (110:41)\";\n    return _f;\n  }(), [getDrawerTranslationX, onClose, onOpen, touchStartX, touchX, translationX]);\n  React.useEffect(function () {\n    return toggleDrawer({\n      open: open,\n      isUserInitiated: false\n    });\n  }, [open, toggleDrawer]);\n  var onGestureEvent = useAnimatedGestureHandler({\n    onStart: function () {\n      var _f = function _f(event, ctx) {\n        ctx.hasCalledOnStart = false;\n        ctx.startX = translationX.value;\n        gestureState.value = event.state;\n        touchStartX.value = event.x;\n      };\n\n      _f._closure = {\n        translationX: translationX,\n        gestureState: gestureState,\n        touchStartX: touchStartX\n      };\n      _f.asString = \"function _f(event,ctx){const{translationX,gestureState,touchStartX}=jsThis._closure;{ctx.hasCalledOnStart=false;ctx.startX=translationX.value;gestureState.value=event.state;touchStartX.value=event.x;}}\";\n      _f.__workletHash = 7995461185439;\n      _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js (144:13)\";\n      return _f;\n    }(),\n    onActive: function () {\n      var _f = function _f(event, ctx) {\n        touchX.value = event.x;\n        translationX.value = ctx.startX + event.translationX;\n        gestureState.value = event.state;\n\n        if (!ctx.hasCalledOnStart) {\n          ctx.hasCalledOnStart = true;\n          runOnJS(onGestureStart)();\n        }\n      };\n\n      _f._closure = {\n        touchX: touchX,\n        translationX: translationX,\n        gestureState: gestureState,\n        runOnJS: runOnJS,\n        onGestureStart: onGestureStart\n      };\n      _f.asString = \"function _f(event,ctx){const{touchX,translationX,gestureState,runOnJS,onGestureStart}=jsThis._closure;{touchX.value=event.x;translationX.value=ctx.startX+event.translationX;gestureState.value=event.state;if(!ctx.hasCalledOnStart){ctx.hasCalledOnStart=true;runOnJS(onGestureStart)();}}}\";\n      _f.__workletHash = 2717092431621;\n      _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js (150:14)\";\n      return _f;\n    }(),\n    onEnd: function () {\n      var _f = function _f(event) {\n        gestureState.value = event.state;\n        var nextOpen = Math.abs(event.translationX) > SWIPE_DISTANCE_MINIMUM && Math.abs(event.translationX) > swipeVelocityThreshold || Math.abs(event.translationX) > swipeDistanceThreshold ? drawerPosition === 'left' ? (event.velocityX === 0 ? event.translationX : event.velocityX) > 0 : (event.velocityX === 0 ? event.translationX : event.velocityX) < 0 : open;\n        toggleDrawer({\n          open: nextOpen,\n          isUserInitiated: true,\n          velocity: event.velocityX\n        });\n      };\n\n      _f._closure = {\n        gestureState: gestureState,\n        SWIPE_DISTANCE_MINIMUM: SWIPE_DISTANCE_MINIMUM,\n        swipeVelocityThreshold: swipeVelocityThreshold,\n        swipeDistanceThreshold: swipeDistanceThreshold,\n        drawerPosition: drawerPosition,\n        open: open,\n        toggleDrawer: toggleDrawer\n      };\n      _f.asString = \"function _f(event){const{gestureState,SWIPE_DISTANCE_MINIMUM,swipeVelocityThreshold,swipeDistanceThreshold,drawerPosition,open,toggleDrawer}=jsThis._closure;{gestureState.value=event.state;const nextOpen=Math.abs(event.translationX)>SWIPE_DISTANCE_MINIMUM&&Math.abs(event.translationX)>swipeVelocityThreshold||Math.abs(event.translationX)>swipeDistanceThreshold?drawerPosition==='left'?(event.velocityX===0?event.translationX:event.velocityX)>0:(event.velocityX===0?event.translationX:event.velocityX)<0:open;toggleDrawer({open:nextOpen,isUserInitiated:true,velocity:event.velocityX});}}\";\n      _f.__workletHash = 5030620258728;\n      _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js (163:11)\";\n      return _f;\n    }(),\n    onFinish: function () {\n      var _f = function _f() {\n        runOnJS(onGestureFinish)();\n      };\n\n      _f._closure = {\n        runOnJS: runOnJS,\n        onGestureFinish: onGestureFinish\n      };\n      _f.asString = \"function _f(){const{runOnJS,onGestureFinish}=jsThis._closure;{runOnJS(onGestureFinish)();}}\";\n      _f.__workletHash = 10753070071248;\n      _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js (176:14)\";\n      return _f;\n    }()\n  });\n  var translateX = useDerivedValue(function () {\n    var _f = function _f() {\n      var touchDistance = drawerType === 'front' && gestureState.value === GestureState.ACTIVE ? minmax(drawerPosition === 'left' ? touchStartX.value - drawerWidth : dimensions.width - drawerWidth - touchStartX.value, 0, dimensions.width) : 0;\n      var translateX = drawerPosition === 'left' ? minmax(translationX.value + touchDistance, -drawerWidth, 0) : minmax(translationX.value - touchDistance, 0, drawerWidth);\n      return translateX;\n    };\n\n    _f._closure = {\n      drawerType: drawerType,\n      gestureState: gestureState,\n      GestureState: {\n        ACTIVE: GestureState.ACTIVE\n      },\n      minmax: minmax,\n      drawerPosition: drawerPosition,\n      touchStartX: touchStartX,\n      drawerWidth: drawerWidth,\n      dimensions: {\n        width: dimensions.width\n      },\n      translationX: translationX\n    };\n    _f.asString = \"function _f(){const{drawerType,gestureState,GestureState,minmax,drawerPosition,touchStartX,drawerWidth,dimensions,translationX}=jsThis._closure;{const touchDistance=drawerType==='front'&&gestureState.value===GestureState.ACTIVE?minmax(drawerPosition==='left'?touchStartX.value-drawerWidth:dimensions.width-drawerWidth-touchStartX.value,0,dimensions.width):0;const translateX=drawerPosition==='left'?minmax(translationX.value+touchDistance,-drawerWidth,0):minmax(translationX.value-touchDistance,0,drawerWidth);return translateX;}}\";\n    _f.__workletHash = 16881564590342;\n    _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js (180:37)\";\n    return _f;\n  }());\n  var isRTL = I18nManager.getConstants().isRTL;\n  var drawerAnimatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var distanceFromEdge = dimensions.width - drawerWidth;\n      return {\n        transform: drawerType === 'permanent' ? [] : [{\n          translateX: (drawerType === 'back' ? 0 : translateX.value) + (drawerPosition === 'left' ? isRTL ? -distanceFromEdge : 0 : isRTL ? 0 : distanceFromEdge)\n        }]\n      };\n    };\n\n    _f._closure = {\n      dimensions: {\n        width: dimensions.width\n      },\n      drawerWidth: drawerWidth,\n      drawerType: drawerType,\n      translateX: translateX,\n      drawerPosition: drawerPosition,\n      isRTL: isRTL\n    };\n    _f.asString = \"function _f(){const{dimensions,drawerWidth,drawerType,translateX,drawerPosition,isRTL}=jsThis._closure;{const distanceFromEdge=dimensions.width-drawerWidth;return{transform:drawerType==='permanent'?[]:[{translateX:(drawerType==='back'?0:translateX.value)+(drawerPosition==='left'?isRTL?-distanceFromEdge:0:isRTL?0:distanceFromEdge)}]};}}\";\n    _f.__workletHash = 17545005580326;\n    _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js (211:47)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var contentAnimatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        transform: drawerType === 'permanent' ? [] : [{\n          translateX: drawerType === 'front' ? 0 : translateX.value + drawerWidth * (drawerPosition === 'left' ? 1 : -1)\n        }]\n      };\n    };\n\n    _f._closure = {\n      drawerType: drawerType,\n      translateX: translateX,\n      drawerWidth: drawerWidth,\n      drawerPosition: drawerPosition\n    };\n    _f.asString = \"function _f(){const{drawerType,translateX,drawerWidth,drawerPosition}=jsThis._closure;{return{transform:drawerType==='permanent'?[]:[{translateX:drawerType==='front'?0:translateX.value+drawerWidth*(drawerPosition==='left'?1:-1)}]};}}\";\n    _f.__workletHash = 10940802030343;\n    _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js (224:48)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var progress = useDerivedValue(function () {\n    var _f = function _f() {\n      return drawerType === 'permanent' ? 1 : interpolate(translateX.value, [getDrawerTranslationX(false), getDrawerTranslationX(true)], [0, 1]);\n    };\n\n    _f._closure = {\n      drawerType: drawerType,\n      interpolate: interpolate,\n      translateX: translateX,\n      getDrawerTranslationX: getDrawerTranslationX\n    };\n    _f.asString = \"function _f(){const{drawerType,interpolate,translateX,getDrawerTranslationX}=jsThis._closure;{return drawerType==='permanent'?1:interpolate(translateX.value,[getDrawerTranslationX(false),getDrawerTranslationX(true)],[0,1]);}}\";\n    _f.__workletHash = 10677902672597;\n    _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js (236:35)\";\n    return _f;\n  }());\n  return React.createElement(DrawerProgressContext.Provider, {\n    value: progress\n  }, React.createElement(PanGestureHandler, _extends({\n    activeOffsetX: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    failOffsetY: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    hitSlop: hitSlop,\n    enabled: drawerType !== 'permanent' && swipeEnabled,\n    onGestureEvent: onGestureEvent\n  }, gestureHandlerProps), React.createElement(Animated.View, {\n    style: [styles.main, {\n      flexDirection: drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row'\n    }]\n  }, React.createElement(Animated.View, {\n    style: [styles.content, contentAnimatedStyle]\n  }, React.createElement(View, {\n    accessibilityElementsHidden: isOpen && drawerType !== 'permanent',\n    importantForAccessibility: isOpen && drawerType !== 'permanent' ? 'no-hide-descendants' : 'auto',\n    style: styles.content\n  }, renderSceneContent()), drawerType !== 'permanent' ? React.createElement(Overlay, {\n    progress: progress,\n    onPress: function onPress() {\n      return toggleDrawer({\n        open: false,\n        isUserInitiated: true\n      });\n    },\n    style: overlayStyle,\n    accessibilityLabel: overlayAccessibilityLabel\n  }) : null), React.createElement(Animated.View, {\n    removeClippedSubviews: Platform.OS !== 'ios',\n    style: [styles.container, {\n      position: drawerType === 'permanent' ? 'relative' : 'absolute',\n      zIndex: drawerType === 'back' ? -1 : 0\n    }, drawerAnimatedStyle, drawerStyle]\n  }, renderDrawerContent()))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    width: DEFAULT_DRAWER_WIDTH\n  },\n  content: {\n    flex: 1\n  },\n  main: _objectSpread({\n    flex: 1\n  }, Platform.select({\n    web: null,\n    default: {\n      overflow: 'hidden'\n    }\n  }))\n});","map":{"version":3,"sources":["views/modern/Drawer.tsx"],"names":["React","I18nManager","InteractionManager","Keyboard","Platform","PanGestureHandler","State","GestureState","Animated","interpolate","runOnJS","useAnimatedGestureHandler","useAnimatedStyle","useDerivedValue","useSharedValue","withSpring","DrawerProgressContext","Overlay","SWIPE_DISTANCE_MINIMUM","DEFAULT_DRAWER_WIDTH","minmax","value","start","end","Math","min","max","Drawer","dimensions","drawerPosition","drawerStyle","drawerType","gestureHandlerProps","hideStatusBarOnOpen","keyboardDismissMode","onClose","onOpen","open","overlayStyle","renderDrawerContent","renderSceneContent","statusBarAnimation","swipeDistanceThreshold","swipeEdgeWidth","swipeEnabled","swipeVelocityThreshold","overlayAccessibilityLabel","getDrawerWidth","width","StyleSheet","flatten","endsWith","percentage","Number","replace","isFinite","drawerWidth","isOpen","isRight","getDrawerTranslationX","useCallback","hideStatusBar","hide","StatusBar","setHidden","useEffect","interactionHandleRef","useRef","startInteraction","current","createInteractionHandle","endInteraction","clearInteractionHandle","hideKeyboard","dismiss","onGestureStart","onGestureFinish","hitSlop","right","undefined","left","touchStartX","touchX","translationX","gestureState","UNDETERMINED","toggleDrawer","isUserInitiated","velocity","translateX","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","onGestureEvent","onStart","event","ctx","hasCalledOnStart","startX","state","x","onActive","onEnd","nextOpen","abs","velocityX","onFinish","touchDistance","ACTIVE","isRTL","getConstants","drawerAnimatedStyle","distanceFromEdge","transform","contentAnimatedStyle","progress","styles","main","flexDirection","content","OS","container","position","zIndex","create","top","bottom","maxWidth","flex","select","web","default","overflow"],"mappings":"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","sourceRoot":"../../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { I18nManager, InteractionManager, Keyboard, Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { PanGestureHandler, State as GestureState } from 'react-native-gesture-handler';\nimport Animated, { interpolate, runOnJS, useAnimatedGestureHandler, useAnimatedStyle, useDerivedValue, useSharedValue, withSpring } from 'react-native-reanimated';\nimport DrawerProgressContext from '../../utils/DrawerProgressContext';\nimport Overlay from './Overlay';\nconst SWIPE_DISTANCE_MINIMUM = 5;\nconst DEFAULT_DRAWER_WIDTH = '80%';\nconst minmax = (value, start, end) => {\n  'worklet';\n\n  return Math.min(Math.max(value, start), end);\n};\nexport default function Drawer(_ref) {\n  let {\n    dimensions,\n    drawerPosition,\n    drawerStyle,\n    drawerType,\n    gestureHandlerProps,\n    hideStatusBarOnOpen,\n    keyboardDismissMode,\n    onClose,\n    onOpen,\n    open,\n    overlayStyle,\n    renderDrawerContent,\n    renderSceneContent,\n    statusBarAnimation,\n    swipeDistanceThreshold,\n    swipeEdgeWidth,\n    swipeEnabled,\n    swipeVelocityThreshold,\n    overlayAccessibilityLabel\n  } = _ref;\n  const getDrawerWidth = () => {\n    const {\n      width = DEFAULT_DRAWER_WIDTH\n    } = StyleSheet.flatten(drawerStyle) || {};\n    if (typeof width === 'string' && width.endsWith('%')) {\n      // Try to calculate width if a percentage is given\n      const percentage = Number(width.replace(/%$/, ''));\n      if (Number.isFinite(percentage)) {\n        return dimensions.width * (percentage / 100);\n      }\n    }\n    return typeof width === 'number' ? width : 0;\n  };\n  const drawerWidth = getDrawerWidth();\n  const isOpen = drawerType === 'permanent' ? true : open;\n  const isRight = drawerPosition === 'right';\n  const getDrawerTranslationX = React.useCallback(open => {\n    'worklet';\n\n    if (drawerPosition === 'left') {\n      return open ? 0 : -drawerWidth;\n    }\n    return open ? 0 : drawerWidth;\n  }, [drawerPosition, drawerWidth]);\n  const hideStatusBar = React.useCallback(hide => {\n    if (hideStatusBarOnOpen) {\n      StatusBar.setHidden(hide, statusBarAnimation);\n    }\n  }, [hideStatusBarOnOpen, statusBarAnimation]);\n  React.useEffect(() => {\n    hideStatusBar(isOpen);\n    return () => hideStatusBar(false);\n  }, [isOpen, hideStatusBarOnOpen, statusBarAnimation, hideStatusBar]);\n  const interactionHandleRef = React.useRef(null);\n  const startInteraction = () => {\n    interactionHandleRef.current = InteractionManager.createInteractionHandle();\n  };\n  const endInteraction = () => {\n    if (interactionHandleRef.current != null) {\n      InteractionManager.clearInteractionHandle(interactionHandleRef.current);\n      interactionHandleRef.current = null;\n    }\n  };\n  const hideKeyboard = () => {\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n  };\n  const onGestureStart = () => {\n    startInteraction();\n    hideKeyboard();\n    hideStatusBar(true);\n  };\n  const onGestureFinish = () => {\n    endInteraction();\n  };\n\n  // FIXME: Currently hitSlop is broken when on Android when drawer is on right\n  // https://github.com/software-mansion/react-native-gesture-handler/issues/569\n  const hitSlop = isRight ?\n  // Extend hitSlop to the side of the screen when drawer is closed\n  // This lets the user drag the drawer from the side of the screen\n  {\n    right: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  } : {\n    left: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  };\n  const touchStartX = useSharedValue(0);\n  const touchX = useSharedValue(0);\n  const translationX = useSharedValue(getDrawerTranslationX(open));\n  const gestureState = useSharedValue(GestureState.UNDETERMINED);\n  const toggleDrawer = React.useCallback(_ref2 => {\n    'worklet';\n\n    let {\n      open,\n      isUserInitiated,\n      velocity\n    } = _ref2;\n    const translateX = getDrawerTranslationX(open);\n    touchStartX.value = 0;\n    touchX.value = 0;\n    translationX.value = withSpring(translateX, {\n      velocity,\n      stiffness: 1000,\n      damping: 500,\n      mass: 3,\n      overshootClamping: true,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 0.01\n    });\n    if (!isUserInitiated) {\n      return;\n    }\n    if (open) {\n      runOnJS(onOpen)();\n    } else {\n      runOnJS(onClose)();\n    }\n  }, [getDrawerTranslationX, onClose, onOpen, touchStartX, touchX, translationX]);\n  React.useEffect(() => toggleDrawer({\n    open,\n    isUserInitiated: false\n  }), [open, toggleDrawer]);\n  const onGestureEvent = useAnimatedGestureHandler({\n    onStart: (event, ctx) => {\n      ctx.hasCalledOnStart = false;\n      ctx.startX = translationX.value;\n      gestureState.value = event.state;\n      touchStartX.value = event.x;\n    },\n    onActive: (event, ctx) => {\n      touchX.value = event.x;\n      translationX.value = ctx.startX + event.translationX;\n      gestureState.value = event.state;\n\n      // onStart will _always_ be called, even when the activation\n      // criteria isn't met yet. This makes sure onGestureStart is only\n      // called when the criteria is really met.\n      if (!ctx.hasCalledOnStart) {\n        ctx.hasCalledOnStart = true;\n        runOnJS(onGestureStart)();\n      }\n    },\n    onEnd: event => {\n      gestureState.value = event.state;\n      const nextOpen = Math.abs(event.translationX) > SWIPE_DISTANCE_MINIMUM && Math.abs(event.translationX) > swipeVelocityThreshold || Math.abs(event.translationX) > swipeDistanceThreshold ? drawerPosition === 'left' ?\n      // If swiped to right, open the drawer, otherwise close it\n      (event.velocityX === 0 ? event.translationX : event.velocityX) > 0 :\n      // If swiped to left, open the drawer, otherwise close it\n      (event.velocityX === 0 ? event.translationX : event.velocityX) < 0 : open;\n      toggleDrawer({\n        open: nextOpen,\n        isUserInitiated: true,\n        velocity: event.velocityX\n      });\n    },\n    onFinish: () => {\n      runOnJS(onGestureFinish)();\n    }\n  });\n  const translateX = useDerivedValue(() => {\n    // Comment stolen from react-native-gesture-handler/DrawerLayout\n    //\n    // While closing the drawer when user starts gesture outside of its area (in greyed\n    // out part of the window), we want the drawer to follow only once finger reaches the\n    // edge of the drawer.\n    // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n    // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n    // an arrow pointing left\n    // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    +---------------+    +---------------+    +---------------+    +---------------+\n    //\n    // For the above to work properly we define animated value that will keep start position\n    // of the gesture. Then we use that value to calculate how much we need to subtract from\n    // the translationX. If the gesture started on the greyed out area we take the distance from the\n    // edge of the drawer to the start position. Otherwise we don't subtract at all and the\n    // drawer be pulled back as soon as you start the pan.\n    //\n    // This is used only when drawerType is \"front\"\n    const touchDistance = drawerType === 'front' && gestureState.value === GestureState.ACTIVE ? minmax(drawerPosition === 'left' ? touchStartX.value - drawerWidth : dimensions.width - drawerWidth - touchStartX.value, 0, dimensions.width) : 0;\n    const translateX = drawerPosition === 'left' ? minmax(translationX.value + touchDistance, -drawerWidth, 0) : minmax(translationX.value - touchDistance, 0, drawerWidth);\n    return translateX;\n  });\n  const isRTL = I18nManager.getConstants().isRTL;\n  const drawerAnimatedStyle = useAnimatedStyle(() => {\n    const distanceFromEdge = dimensions.width - drawerWidth;\n    return {\n      transform: drawerType === 'permanent' ?\n      // Reanimated needs the property to be present, but it results in Browser bug\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n      [] : [{\n        translateX:\n        // The drawer stays in place when `drawerType` is `back`\n        (drawerType === 'back' ? 0 : translateX.value) + (drawerPosition === 'left' ? isRTL ? -distanceFromEdge : 0 : isRTL ? 0 : distanceFromEdge)\n      }]\n    };\n  });\n  const contentAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      transform: drawerType === 'permanent' ?\n      // Reanimated needs the property to be present, but it results in Browser bug\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n      [] : [{\n        translateX:\n        // The screen content stays in place when `drawerType` is `front`\n        drawerType === 'front' ? 0 : translateX.value + drawerWidth * (drawerPosition === 'left' ? 1 : -1)\n      }]\n    };\n  });\n  const progress = useDerivedValue(() => {\n    return drawerType === 'permanent' ? 1 : interpolate(translateX.value, [getDrawerTranslationX(false), getDrawerTranslationX(true)], [0, 1]);\n  });\n  return /*#__PURE__*/React.createElement(DrawerProgressContext.Provider, {\n    value: progress\n  }, /*#__PURE__*/React.createElement(PanGestureHandler, _extends({\n    activeOffsetX: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    failOffsetY: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    hitSlop: hitSlop,\n    enabled: drawerType !== 'permanent' && swipeEnabled,\n    onGestureEvent: onGestureEvent\n  }, gestureHandlerProps), /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.main, {\n      flexDirection: drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row'\n    }]\n  }, /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.content, contentAnimatedStyle]\n  }, /*#__PURE__*/React.createElement(View, {\n    accessibilityElementsHidden: isOpen && drawerType !== 'permanent',\n    importantForAccessibility: isOpen && drawerType !== 'permanent' ? 'no-hide-descendants' : 'auto',\n    style: styles.content\n  }, renderSceneContent()), drawerType !== 'permanent' ? /*#__PURE__*/React.createElement(Overlay, {\n    progress: progress,\n    onPress: () => toggleDrawer({\n      open: false,\n      isUserInitiated: true\n    }),\n    style: overlayStyle,\n    accessibilityLabel: overlayAccessibilityLabel\n  }) : null), /*#__PURE__*/React.createElement(Animated.View, {\n    removeClippedSubviews: Platform.OS !== 'ios',\n    style: [styles.container, {\n      position: drawerType === 'permanent' ? 'relative' : 'absolute',\n      zIndex: drawerType === 'back' ? -1 : 0\n    }, drawerAnimatedStyle, drawerStyle]\n  }, renderDrawerContent()))));\n}\nconst styles = StyleSheet.create({\n  container: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    width: DEFAULT_DRAWER_WIDTH\n  },\n  content: {\n    flex: 1\n  },\n  main: {\n    flex: 1,\n    ...Platform.select({\n      // FIXME: We need to hide `overflowX` on Web so the translated content doesn't show offscreen.\n      // But adding `overflowX: 'hidden'` prevents content from collapsing the URL bar.\n      web: null,\n      default: {\n        overflow: 'hidden'\n      }\n    })\n  }\n});\n//# sourceMappingURL=Drawer.js.map"]},"metadata":{},"sourceType":"module"}