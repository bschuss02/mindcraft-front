{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport EnsureSingleNavigator from \"./EnsureSingleNavigator\";\nimport NavigationStateContext from \"./NavigationStateContext\";\nimport StaticContainer from \"./StaticContainer\";\nimport useOptionsGetters from \"./useOptionsGetters\";\nexport default function SceneView(_ref) {\n  var screen = _ref.screen,\n      route = _ref.route,\n      navigation = _ref.navigation,\n      routeState = _ref.routeState,\n      getState = _ref.getState,\n      setState = _ref.setState,\n      options = _ref.options,\n      clearOptions = _ref.clearOptions;\n  var navigatorKeyRef = React.useRef();\n  var getKey = React.useCallback(function () {\n    return navigatorKeyRef.current;\n  }, []);\n\n  var _useOptionsGetters = useOptionsGetters({\n    key: route.key,\n    options: options,\n    navigation: navigation\n  }),\n      addOptionsGetter = _useOptionsGetters.addOptionsGetter;\n\n  var setKey = React.useCallback(function (key) {\n    navigatorKeyRef.current = key;\n  }, []);\n  var getCurrentState = React.useCallback(function () {\n    var state = getState();\n    var currentRoute = state.routes.find(function (r) {\n      return r.key === route.key;\n    });\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n  var setCurrentState = React.useCallback(function (child) {\n    var state = getState();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      routes: state.routes.map(function (r) {\n        return r.key === route.key ? _objectSpread(_objectSpread({}, r), {}, {\n          state: child\n        }) : r;\n      })\n    }));\n  }, [getState, route.key, setState]);\n  var isInitialRef = React.useRef(true);\n  React.useEffect(function () {\n    isInitialRef.current = false;\n  });\n  React.useEffect(function () {\n    return clearOptions;\n  }, []);\n  var getIsInitial = React.useCallback(function () {\n    return isInitialRef.current;\n  }, []);\n  var context = React.useMemo(function () {\n    return {\n      state: routeState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey: getKey,\n      setKey: setKey,\n      getIsInitial: getIsInitial,\n      addOptionsGetter: addOptionsGetter\n    };\n  }, [routeState, getCurrentState, setCurrentState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  var ScreenComponent = screen.getComponent ? screen.getComponent() : screen.component;\n  return React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, React.createElement(EnsureSingleNavigator, null, React.createElement(StaticContainer, {\n    name: screen.name,\n    render: ScreenComponent || screen.children,\n    navigation: navigation,\n    route: route\n  }, ScreenComponent !== undefined ? React.createElement(ScreenComponent, {\n    navigation: navigation,\n    route: route\n  }) : screen.children !== undefined ? screen.children({\n    navigation: navigation,\n    route: route\n  }) : null)));\n}","map":{"version":3,"sources":["SceneView.tsx"],"names":["React","EnsureSingleNavigator","NavigationStateContext","StaticContainer","useOptionsGetters","SceneView","screen","route","navigation","routeState","getState","setState","options","clearOptions","navigatorKeyRef","useRef","getKey","useCallback","current","addOptionsGetter","key","setKey","getCurrentState","state","currentRoute","routes","find","r","undefined","setCurrentState","child","map","isInitialRef","useEffect","getIsInitial","context","useMemo","ScreenComponent","getComponent","component","name","children"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationStateContext from './NavigationStateContext';\nimport StaticContainer from './StaticContainer';\nimport useOptionsGetters from './useOptionsGetters';\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView(_ref) {\n  let {\n    screen,\n    route,\n    navigation,\n    routeState,\n    getState,\n    setState,\n    options,\n    clearOptions\n  } = _ref;\n  const navigatorKeyRef = React.useRef();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n  const {\n    addOptionsGetter\n  } = useOptionsGetters({\n    key: route.key,\n    options,\n    navigation\n  });\n  const setKey = React.useCallback(key => {\n    navigatorKeyRef.current = key;\n  }, []);\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find(r => r.key === route.key);\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n  const setCurrentState = React.useCallback(child => {\n    const state = getState();\n    setState({\n      ...state,\n      routes: state.routes.map(r => r.key === route.key ? {\n        ...r,\n        state: child\n      } : r)\n    });\n  }, [getState, route.key, setState]);\n  const isInitialRef = React.useRef(true);\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  });\n\n  // Clear options set by this screen when it is unmounted\n  React.useEffect(() => {\n    return clearOptions;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n  const context = React.useMemo(() => ({\n    state: routeState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    getKey,\n    setKey,\n    getIsInitial,\n    addOptionsGetter\n  }), [routeState, getCurrentState, setCurrentState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  const ScreenComponent = screen.getComponent ? screen.getComponent() : screen.component;\n  return /*#__PURE__*/React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(EnsureSingleNavigator, null, /*#__PURE__*/React.createElement(StaticContainer, {\n    name: screen.name,\n    render: ScreenComponent || screen.children,\n    navigation: navigation,\n    route: route\n  }, ScreenComponent !== undefined ? /*#__PURE__*/React.createElement(ScreenComponent, {\n    navigation: navigation,\n    route: route\n  }) : screen.children !== undefined ? screen.children({\n    navigation,\n    route\n  }) : null)));\n}\n//# sourceMappingURL=SceneView.js.map"]},"metadata":{},"sourceType":"module"}