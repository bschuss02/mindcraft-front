{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"enabled\"],\n    _excluded2 = [\"enabled\", \"active\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nvar Screens;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {}\n\nexport var MaybeScreenContainer = function MaybeScreenContainer(_ref) {\n  var enabled = _ref.enabled,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  if (Screens != null) {\n    return React.createElement(Screens.ScreenContainer, _extends({\n      enabled: enabled\n    }, rest));\n  }\n\n  return React.createElement(View, rest);\n};\nexport var MaybeScreen = function MaybeScreen(_ref2) {\n  var enabled = _ref2.enabled,\n      active = _ref2.active,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  if (Screens != null) {\n    return React.createElement(Screens.Screen, _extends({\n      enabled: enabled,\n      activityState: active\n    }, rest));\n  }\n\n  return React.createElement(View, rest);\n};","map":{"version":3,"sources":["views/Screens.tsx"],"names":["React","Screens","require","e","MaybeScreenContainer","enabled","rest","MaybeScreen","active"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,IAAIC,OAAJ;;AAEA,IAAI;AACFA,EAAAA,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAAjBD;AACD,CAFD,CAEE,OAAOE,CAAP,EAAU,CACV;;AAGF,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,IAAA,EAM9B;AAN+B,MACnCC,OADmC,GAMpC,IANoC,CACnCA,OADmC;AAAA,MAEhCC,IAFgC,4BAMpC,IANoC;;AAOnC,MAAIL,OAAO,IAAI,IAAf,EAAqB;AACnB,WAAO,KAAA,CAAA,aAAA,CAAC,OAAO,CAAC,eAAT,EAAwB,QAAA,CAAA;AAAC,MAAA,OAAO,EAAEI;AAAV,KAAA,EAAuBC,IAAvB,CAAxB,CAAP;AACF;;AAEA,SAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAUA,IAAV,CAAP;AACD,CAZM;AAcP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EASrB;AATsB,MAC1BF,OAD0B,GAS3B,KAT2B,CAC1BA,OAD0B;AAAA,MAE1BG,MAF0B,GAS3B,KAT2B,CAE1BA,MAF0B;AAAA,MAGvBF,IAHuB,4BAS3B,KAT2B;;AAU1B,MAAIL,OAAO,IAAI,IAAf,EAAqB;AACnB,WACE,KAAA,CAAA,aAAA,CAAC,OAAO,CAAC,MAAT,EAAe,QAAA,CAAA;AAAC,MAAA,OAAO,EAAEI,OAAV;AAAmB,MAAA,aAAa,EAAEG;AAAlC,KAAA,EAA8CF,IAA9C,CAAf,CADF;AAGF;;AAEA,SAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAUA,IAAV,CAAP;AACD,CAjBM","sourceRoot":"../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { View } from 'react-native';\nlet Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\nexport const MaybeScreenContainer = _ref => {\n  let {\n    enabled,\n    ...rest\n  } = _ref;\n  if (Screens != null) {\n    return /*#__PURE__*/React.createElement(Screens.ScreenContainer, _extends({\n      enabled: enabled\n    }, rest));\n  }\n  return /*#__PURE__*/React.createElement(View, rest);\n};\nexport const MaybeScreen = _ref2 => {\n  let {\n    enabled,\n    active,\n    ...rest\n  } = _ref2;\n  if (Screens != null) {\n    return /*#__PURE__*/React.createElement(Screens.Screen, _extends({\n      enabled: enabled,\n      activityState: active\n    }, rest));\n  }\n  return /*#__PURE__*/React.createElement(View, rest);\n};\n//# sourceMappingURL=Screens.js.map"]},"metadata":{},"sourceType":"module"}