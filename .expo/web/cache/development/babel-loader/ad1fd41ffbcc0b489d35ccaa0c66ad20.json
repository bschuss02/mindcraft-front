{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"styleInterpolator\", \"interpolationIndex\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"headerDarkContent\", \"children\", \"containerStyle\", \"contentStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport Color from 'color';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { forModalPresentationIOS } from \"../../TransitionConfigs/CardStyleInterpolators\";\nimport CardAnimationContext from \"../../utils/CardAnimationContext\";\nimport getDistanceForDirection from \"../../utils/getDistanceForDirection\";\nimport getInvertedMultiplier from \"../../utils/getInvertedMultiplier\";\nimport memoize from \"../../utils/memoize\";\nimport { GestureState, PanGestureHandler } from \"../GestureHandler\";\nimport ModalStatusBarManager from \"../ModalStatusBarManager\";\nimport CardSheet from \"./CardSheet\";\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = Platform.OS !== 'web';\n\nvar hasOpacityStyle = function hasOpacityStyle(style) {\n  if (style) {\n    var flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card() {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.isCurrentlyMounted = false;\n    _this.isClosing = new Animated.Value(FALSE);\n    _this.inverted = new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection));\n    _this.layout = {\n      width: new Animated.Value(_this.props.layout.width),\n      height: new Animated.Value(_this.props.layout.height)\n    };\n    _this.isSwiping = new Animated.Value(FALSE);\n\n    _this.animate = function (_ref2) {\n      var closing = _ref2.closing,\n          velocity = _ref2.velocity;\n      var _this$props = _this.props,\n          gesture = _this$props.gesture,\n          transitionSpec = _this$props.transitionSpec,\n          onOpen = _this$props.onOpen,\n          onClose = _this$props.onClose,\n          onTransition = _this$props.onTransition;\n\n      var toValue = _this.getAnimateToValue(_objectSpread(_objectSpread({}, _this.props), {}, {\n        closing: closing\n      }));\n\n      _this.lastToValue = toValue;\n\n      _this.isClosing.setValue(closing ? TRUE : FALSE);\n\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n      _this.setPointerEventsEnabled(!closing);\n\n      _this.handleStartInteraction();\n\n      clearTimeout(_this.pendingGestureCallback);\n      onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n        closing: closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, _objectSpread(_objectSpread({}, spec.config), {}, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref3) {\n        var finished = _ref3.finished;\n\n        _this.handleEndInteraction();\n\n        clearTimeout(_this.pendingGestureCallback);\n\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n\n          if (_this.isCurrentlyMounted) {\n            _this.forceUpdate();\n          }\n        }\n      });\n    };\n\n    _this.getAnimateToValue = function (_ref4) {\n      var closing = _ref4.closing,\n          layout = _ref4.layout,\n          gestureDirection = _ref4.gestureDirection;\n\n      if (!closing) {\n        return 0;\n      }\n\n      return getDistanceForDirection(layout, gestureDirection);\n    };\n\n    _this.setPointerEventsEnabled = function (enabled) {\n      var _this$ref$current;\n\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$ref$current = _this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n    };\n\n    _this.handleStartInteraction = function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = InteractionManager.createInteractionHandle();\n      }\n    };\n\n    _this.handleEndInteraction = function () {\n      if (_this.interactionHandle !== undefined) {\n        InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    };\n\n    _this.handleGestureStateChange = function (_ref5) {\n      var nativeEvent = _ref5.nativeEvent;\n      var _this$props2 = _this.props,\n          layout = _this$props2.layout,\n          onClose = _this$props2.onClose,\n          onGestureBegin = _this$props2.onGestureBegin,\n          onGestureCanceled = _this$props2.onGestureCanceled,\n          onGestureEnd = _this$props2.onGestureEnd,\n          gestureDirection = _this$props2.gestureDirection,\n          gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n\n      switch (nativeEvent.state) {\n        case GestureState.ACTIVE:\n          _this.isSwiping.setValue(TRUE);\n\n          _this.handleStartInteraction();\n\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n\n        case GestureState.CANCELLED:\n          {\n            _this.isSwiping.setValue(FALSE);\n\n            _this.handleEndInteraction();\n\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n\n        case GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n\n            var distance;\n            var translation;\n\n            var _velocity;\n\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n\n            var closing = (translation + _velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(function () {\n                onClose();\n\n                _this.forceUpdate();\n              }, 32);\n            }\n\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    };\n\n    _this.getInterpolatedStyle = memoize(function (styleInterpolator, animation) {\n      return styleInterpolator(animation);\n    });\n    _this.getCardAnimation = memoize(function (interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: interpolationIndex,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    });\n    _this.ref = React.createRef();\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate({\n        closing: this.props.closing\n      });\n      this.isCurrentlyMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n          layout = _this$props3.layout,\n          gestureDirection = _this$props3.gestureDirection,\n          closing = _this$props3.closing;\n      var width = layout.width,\n          height = layout.height;\n\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n      }\n\n      var toValue = this.getAnimateToValue(this.props);\n\n      if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.gesture.stopAnimation();\n      this.isCurrentlyMounted = false;\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props4 = this.props,\n          layout = _this$props4.layout,\n          gestureDirection = _this$props4.gestureDirection,\n          gestureResponseDistance = _this$props4.gestureResponseDistance;\n      var enableTrackpadTwoFingerGesture = true;\n      var distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          styleInterpolator = _this$props5.styleInterpolator,\n          interpolationIndex = _this$props5.interpolationIndex,\n          current = _this$props5.current,\n          gesture = _this$props5.gesture,\n          next = _this$props5.next,\n          layout = _this$props5.layout,\n          insets = _this$props5.insets,\n          overlay = _this$props5.overlay,\n          overlayEnabled = _this$props5.overlayEnabled,\n          shadowEnabled = _this$props5.shadowEnabled,\n          gestureEnabled = _this$props5.gestureEnabled,\n          gestureDirection = _this$props5.gestureDirection,\n          pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n          headerDarkContent = _this$props5.headerDarkContent,\n          children = _this$props5.children,\n          customContainerStyle = _this$props5.containerStyle,\n          contentStyle = _this$props5.contentStyle,\n          rest = _objectWithoutProperties(_this$props5, _excluded);\n\n      var interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n      var containerStyle = interpolatedStyle.containerStyle,\n          cardStyle = interpolatedStyle.cardStyle,\n          overlayStyle = interpolatedStyle.overlayStyle,\n          shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n\n      var _StyleSheet$flatten = StyleSheet.flatten(contentStyle || {}),\n          backgroundColor = _StyleSheet$flatten.backgroundColor;\n\n      var isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n      return React.createElement(CardAnimationContext.Provider, {\n        value: interpolationProps\n      }, Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? React.createElement(ModalStatusBarManager, {\n        dark: headerDarkContent,\n        layout: layout,\n        insets: insets,\n        style: cardStyle\n      }) : null, React.createElement(Animated.View, {\n        style: {\n          opacity: current\n        },\n        collapsable: false\n      }), React.createElement(View, _extends({\n        pointerEvents: \"box-none\"\n      }, rest), overlayEnabled ? React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: StyleSheet.absoluteFill\n      }, overlay({\n        style: overlayStyle\n      })) : null, React.createElement(Animated.View, {\n        style: [styles.container, containerStyle, customContainerStyle],\n        pointerEvents: \"box-none\"\n      }, React.createElement(PanGestureHandler, _extends({\n        enabled: layout.width !== 0 && gestureEnabled,\n        onGestureEvent: handleGestureEvent,\n        onHandlerStateChange: this.handleGestureStateChange\n      }, this.gestureActivationCriteria()), React.createElement(Animated.View, {\n        needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n        style: [styles.container, cardStyle]\n      }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(Animated.View, {\n        style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n          backgroundColor: backgroundColor\n        }, shadowStyle],\n        pointerEvents: \"none\"\n      }) : null, React.createElement(CardSheet, {\n        ref: this.ref,\n        enabled: pageOverflowEnabled,\n        layout: layout,\n        style: contentStyle\n      }, children))))));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nCard.defaultProps = {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref) {\n    var style = _ref.style;\n    return style ? React.createElement(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n};\nexport { Card as default };\nexport var getIsModalPresentation = function getIsModalPresentation(cardStyleInterpolator) {\n  return cardStyleInterpolator === forModalPresentationIOS || cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["views/Stack/Card.tsx"],"names":["Color","React","forModalPresentationIOS","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GestureState","PanGestureHandler","ModalStatusBarManager","CardSheet","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","hasOpacityStyle","style","flattenedStyle","StyleSheet","flatten","opacity","Card","Component","defaultProps","shadowEnabled","gestureEnabled","gestureVelocityImpact","overlay","styles","componentDidMount","animate","closing","props","isCurrentlyMounted","componentDidUpdate","prevProps","layout","gestureDirection","width","height","setValue","inverted","toValue","getAnimateToValue","lastToValue","componentWillUnmount","gesture","stopAnimation","handleEndInteraction","isClosing","Animated","Value","isSwiping","velocity","transitionSpec","onOpen","onClose","onTransition","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","finished","forceUpdate","enabled","pointerEvents","ref","current","setPointerEvents","interactionHandle","InteractionManager","createInteractionHandle","clearInteractionHandle","handleGestureStateChange","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","state","ACTIVE","CANCELLED","velocityY","velocityX","END","distance","translation","translationY","translationX","setTimeout","getInterpolatedStyle","styleInterpolator","getCardAnimation","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","layouts","screen","insets","top","right","bottom","left","gestureActivationCriteria","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","createRef","render","overlayEnabled","pageOverflowEnabled","headerDarkContent","children","containerStyle","customContainerStyle","contentStyle","rest","interpolationProps","interpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","isTransparent","alpha","getIsModalPresentation","absoluteFill","container","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","cardStyleInterpolator","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"mappings":"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","sourceRoot":"../../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport Color from 'color';\nimport * as React from 'react';\nimport { Animated, InteractionManager, Platform, StyleSheet, View } from 'react-native';\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport { GestureState, PanGestureHandler } from '../GestureHandler';\nimport ModalStatusBarManager from '../ModalStatusBarManager';\nimport CardSheet from './CardSheet';\nconst GESTURE_VELOCITY_IMPACT = 0.3;\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nconst useNativeDriver = Platform.OS !== 'web';\nconst hasOpacityStyle = style => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n  return false;\n};\nexport default class Card extends React.Component {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: _ref => {\n      let {\n        style\n      } = _ref;\n      return style ? /*#__PURE__*/React.createElement(Animated.View, {\n        pointerEvents: \"none\",\n        style: [styles.overlay, style]\n      }) : null;\n    }\n  };\n  componentDidMount() {\n    this.animate({\n      closing: this.props.closing\n    });\n    this.isCurrentlyMounted = true;\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      layout,\n      gestureDirection,\n      closing\n    } = this.props;\n    const {\n      width,\n      height\n    } = layout;\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n    const toValue = this.getAnimateToValue(this.props);\n    if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({\n        closing\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.props.gesture.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n  isCurrentlyMounted = false;\n  isClosing = new Animated.Value(FALSE);\n  inverted = new Animated.Value(getInvertedMultiplier(this.props.gestureDirection));\n  layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height)\n  };\n  isSwiping = new Animated.Value(FALSE);\n  animate = _ref2 => {\n    let {\n      closing,\n      velocity\n    } = _ref2;\n    const {\n      gesture,\n      transitionSpec,\n      onOpen,\n      onClose,\n      onTransition\n    } = this.props;\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing\n    });\n    this.lastToValue = toValue;\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n    const animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n    clearTimeout(this.pendingGestureCallback);\n    onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n      closing,\n      gesture: velocity !== undefined\n    });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false\n    }).start(_ref3 => {\n      let {\n        finished\n      } = _ref3;\n      this.handleEndInteraction();\n      clearTimeout(this.pendingGestureCallback);\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n  getAnimateToValue = _ref4 => {\n    let {\n      closing,\n      layout,\n      gestureDirection\n    } = _ref4;\n    if (!closing) {\n      return 0;\n    }\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n  setPointerEventsEnabled = enabled => {\n    var _this$ref$current;\n    const pointerEvents = enabled ? 'box-none' : 'none';\n    (_this$ref$current = this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n  };\n  handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n  handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n  handleGestureStateChange = _ref5 => {\n    let {\n      nativeEvent\n    } = _ref5;\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact\n    } = this.props;\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n        break;\n      case GestureState.CANCELLED:\n        {\n          this.isSwiping.setValue(FALSE);\n          this.handleEndInteraction();\n          const velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n          this.animate({\n            closing: this.props.closing,\n            velocity\n          });\n          onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n          break;\n        }\n      case GestureState.END:\n        {\n          this.isSwiping.setValue(FALSE);\n          let distance;\n          let translation;\n          let velocity;\n          if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n            distance = layout.height;\n            translation = nativeEvent.translationY;\n            velocity = nativeEvent.velocityY;\n          } else {\n            distance = layout.width;\n            translation = nativeEvent.translationX;\n            velocity = nativeEvent.velocityX;\n          }\n          const closing = (translation + velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection) > distance / 2 ? velocity !== 0 || translation !== 0 : this.props.closing;\n          this.animate({\n            closing,\n            velocity\n          });\n          if (closing) {\n            // We call onClose with a delay to make sure that the animation has already started\n            // This will make sure that the state update caused by this doesn't affect start of animation\n            this.pendingGestureCallback = setTimeout(() => {\n              onClose();\n\n              // Trigger an update after we dispatch the action to remove the screen\n              // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n              this.forceUpdate();\n            }, 32);\n          }\n          onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n          break;\n        }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  getInterpolatedStyle = memoize((styleInterpolator, animation) => styleInterpolator(animation));\n\n  // Keep track of the animation context when deps changes.\n  getCardAnimation = memoize((interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) => ({\n    index: interpolationIndex,\n    current: {\n      progress: current\n    },\n    next: next && {\n      progress: next\n    },\n    closing: this.isClosing,\n    swiping: this.isSwiping,\n    inverted: this.inverted,\n    layouts: {\n      screen: layout\n    },\n    insets: {\n      top: insetTop,\n      right: insetRight,\n      bottom: insetBottom,\n      left: insetLeft\n    }\n  }));\n  gestureActivationCriteria() {\n    const {\n      layout,\n      gestureDirection,\n      gestureResponseDistance\n    } = this.props;\n    const enableTrackpadTwoFingerGesture = true;\n    const distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: {\n          bottom: -layout.height + distance\n        },\n        enableTrackpadTwoFingerGesture\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: {\n          top: -layout.height + distance\n        },\n        enableTrackpadTwoFingerGesture\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: {\n            right: hitSlop\n          },\n          enableTrackpadTwoFingerGesture\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: {\n            left: hitSlop\n          },\n          enableTrackpadTwoFingerGesture\n        };\n      }\n    }\n  }\n  ref = /*#__PURE__*/React.createRef();\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      headerDarkContent,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n    const interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n    const interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle\n    } = interpolatedStyle;\n    const handleGestureEvent = gestureEnabled ? Animated.event([{\n      nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n        translationY: gesture\n      } : {\n        translationX: gesture\n      }\n    }], {\n      useNativeDriver\n    }) : undefined;\n    const {\n      backgroundColor\n    } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n    return /*#__PURE__*/React.createElement(CardAnimationContext.Provider, {\n      value: interpolationProps\n    },\n    // StatusBar messes with translucent status bar on Android\n    // So we should only enable it on iOS\n    Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? /*#__PURE__*/React.createElement(ModalStatusBarManager, {\n      dark: headerDarkContent,\n      layout: layout,\n      insets: insets,\n      style: cardStyle\n    }) : null, /*#__PURE__*/React.createElement(Animated.View, {\n      style: {\n        // This is a dummy style that doesn't actually change anything visually.\n        // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n        // If we disable animations and hide header, it could end up making the value unused.\n        // So we have this dummy style that will always be used regardless of what else changed.\n        opacity: current\n      }\n      // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n      ,\n      collapsable: false\n    }), /*#__PURE__*/React.createElement(View, _extends({\n      pointerEvents: \"box-none\"\n    }, rest), overlayEnabled ? /*#__PURE__*/React.createElement(View, {\n      pointerEvents: \"box-none\",\n      style: StyleSheet.absoluteFill\n    }, overlay({\n      style: overlayStyle\n    })) : null, /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.container, containerStyle, customContainerStyle],\n      pointerEvents: \"box-none\"\n    }, /*#__PURE__*/React.createElement(PanGestureHandler, _extends({\n      enabled: layout.width !== 0 && gestureEnabled,\n      onGestureEvent: handleGestureEvent,\n      onHandlerStateChange: this.handleGestureStateChange\n    }, this.gestureActivationCriteria()), /*#__PURE__*/React.createElement(Animated.View, {\n      needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n      style: [styles.container, cardStyle]\n    }, shadowEnabled && shadowStyle && !isTransparent ? /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n        backgroundColor\n      }, shadowStyle],\n      pointerEvents: \"none\"\n    }) : null, /*#__PURE__*/React.createElement(CardSheet, {\n      ref: this.ref,\n      enabled: pageOverflowEnabled,\n      layout: layout,\n      style: contentStyle\n    }, children))))));\n  }\n}\nexport const getIsModalPresentation = cardStyleInterpolator => {\n  return cardStyleInterpolator === forModalPresentationIOS ||\n  // Handle custom modal presentation interpolators as well\n  cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});\n//# sourceMappingURL=Card.js.map"]},"metadata":{},"sourceType":"module"}