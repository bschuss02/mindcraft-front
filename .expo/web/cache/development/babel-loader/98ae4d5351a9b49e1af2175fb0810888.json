{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"state\", \"descriptors\", \"dimensions\", \"insets\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { MissingIcon } from '@react-navigation/elements';\nimport { CommonActions, NavigationContext, NavigationRouteContext, useLinkBuilder, useTheme } from '@react-navigation/native';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaFrame } from 'react-native-safe-area-context';\nimport BottomTabBarHeightCallbackContext from \"../utils/BottomTabBarHeightCallbackContext\";\nimport useIsKeyboardShown from \"../utils/useIsKeyboardShown\";\nimport BottomTabItem from \"./BottomTabItem\";\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = Platform.OS !== 'web';\n\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      layout = _ref.layout,\n      dimensions = _ref.dimensions;\n  var tabBarLabelPosition = descriptors[state.routes[state.index].key].options.tabBarLabelPosition;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    var maxTabWidth = state.routes.reduce(function (acc, route) {\n      var tabBarItemStyle = descriptors[route.key].options.tabBarItemStyle;\n      var flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\n\nexport var getTabBarHeight = function getTabBarHeight(_ref2) {\n  var _StyleSheet$flatten;\n\n  var state = _ref2.state,\n      descriptors = _ref2.descriptors,\n      dimensions = _ref2.dimensions,\n      insets = _ref2.insets,\n      style = _ref2.style,\n      rest = _objectWithoutProperties(_ref2, _excluded);\n\n  var customHeight = (_StyleSheet$flatten = StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(_objectSpread({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n\n  if (Platform.OS === 'ios' && !Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexport default function BottomTabBar(_ref3) {\n  var state = _ref3.state,\n      navigation = _ref3.navigation,\n      descriptors = _ref3.descriptors,\n      insets = _ref3.insets,\n      style = _ref3.style;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var buildLink = useLinkBuilder();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var tabBarShowLabel = focusedOptions.tabBarShowLabel,\n      _focusedOptions$tabBa = focusedOptions.tabBarHideOnKeyboard,\n      tabBarHideOnKeyboard = _focusedOptions$tabBa === void 0 ? false : _focusedOptions$tabBa,\n      tabBarVisibilityAnimationConfig = focusedOptions.tabBarVisibilityAnimationConfig,\n      tabBarStyle = focusedOptions.tabBarStyle,\n      tabBarBackground = focusedOptions.tabBarBackground,\n      tabBarActiveTintColor = focusedOptions.tabBarActiveTintColor,\n      tabBarInactiveTintColor = focusedOptions.tabBarInactiveTintColor,\n      tabBarActiveBackgroundColor = focusedOptions.tabBarActiveBackgroundColor,\n      tabBarInactiveBackgroundColor = focusedOptions.tabBarInactiveBackgroundColor;\n  var dimensions = useSafeAreaFrame();\n  var isKeyboardShown = useIsKeyboardShown();\n  var onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n  var shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n  var visibilityAnimationConfigRef = React.useRef(tabBarVisibilityAnimationConfig);\n  React.useEffect(function () {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  var _React$useState = React.useState(!shouldShowTabBar),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isTabBarHidden = _React$useState2[0],\n      setIsTabBarHidden = _React$useState2[1];\n\n  var _React$useState3 = React.useState(function () {\n    return new Animated.Value(shouldShowTabBar ? 1 : 0);\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      visible = _React$useState4[0];\n\n  React.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n\n      var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, _objectSpread({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n\n      setIsTabBarHidden(true);\n\n      var _animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? Animated.spring : Animated.timing;\n\n      _animation(visible, _objectSpread({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n\n    return function () {\n      return visible.stopAnimation();\n    };\n  }, [visible, shouldShowTabBar]);\n\n  var _React$useState5 = React.useState({\n    height: 0,\n    width: dimensions.width\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      layout = _React$useState6[0],\n      setLayout = _React$useState6[1];\n\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n        height = _e$nativeEvent$layout.height,\n        width = _e$nativeEvent$layout.width;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n\n  var routes = state.routes;\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    descriptors: descriptors,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    style: [tabBarStyle, style]\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions,\n    layout: layout\n  });\n  var tabBarBackgroundElement = tabBarBackground === null || tabBarBackground === void 0 ? void 0 : tabBarBackground();\n  return React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, tabBarStyle],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, React.createElement(View, {\n    pointerEvents: \"none\",\n    style: StyleSheet.absoluteFill\n  }, tabBarBackgroundElement), React.createElement(View, {\n    accessibilityRole: \"tablist\",\n    style: styles.content\n  }, routes.map(function (route, index) {\n    var _options$tabBarIcon;\n\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate({\n          name: route.name,\n          merge: true\n        })), {}, {\n          target: state.key\n        }));\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && Platform.OS === 'ios' ? label + \", tab, \" + (index + 1) + \" of \" + routes.length : undefined;\n    return React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(BottomTabItem, {\n      route: route,\n      descriptor: descriptors[route.key],\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: options.tabBarAllowFontScaling,\n      activeTintColor: tabBarActiveTintColor,\n      inactiveTintColor: tabBarInactiveTintColor,\n      activeBackgroundColor: tabBarActiveBackgroundColor,\n      inactiveBackgroundColor: tabBarInactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: (_options$tabBarIcon = options.tabBarIcon) != null ? _options$tabBarIcon : function (_ref5) {\n        var color = _ref5.color,\n            size = _ref5.size;\n        return React.createElement(MissingIcon, {\n          color: color,\n          size: size\n        });\n      },\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: tabBarShowLabel,\n      labelStyle: options.tabBarLabelStyle,\n      iconStyle: options.tabBarIconStyle,\n      style: options.tabBarItemStyle\n    })));\n  })));\n}\nvar styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["views/BottomTabBar.tsx"],"names":["MissingIcon","CommonActions","NavigationContext","NavigationRouteContext","useLinkBuilder","useTheme","React","useSafeAreaFrame","BottomTabBarHeightCallbackContext","useIsKeyboardShown","BottomTabItem","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","shouldUseHorizontalLabels","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","StyleSheet","flatten","maxWidth","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","style","rest","customHeight","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","navigation","colors","buildLink","focusedRoute","focusedDescriptor","focusedOptions","tabBarShowLabel","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","isTabBarHidden","setIsTabBarHidden","useState","visible","Animated","Value","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","config","start","finished","hide","stopAnimation","setLayout","handleLayout","e","nativeEvent","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","left","right","absoluteFill","content","map","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","merge","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","length","params","tabBarTestID","tabBarAllowFontScaling","tabBarButton","tabBarIcon","color","size","tabBarBadge","tabBarBadgeStyle","tabBarLabelStyle","tabBarIconStyle","create","borderTopWidth","elevation","flex","flexDirection"],"mappings":"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","sourceRoot":"../../../src","sourcesContent":["import { MissingIcon } from '@react-navigation/elements';\nimport { CommonActions, NavigationContext, NavigationRouteContext, useLinkBuilder, useTheme } from '@react-navigation/native';\nimport React from 'react';\nimport { Animated, Platform, StyleSheet, View } from 'react-native';\nimport { useSafeAreaFrame } from 'react-native-safe-area-context';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nconst useNativeDriver = Platform.OS !== 'web';\nconst shouldUseHorizontalLabels = _ref => {\n  let {\n    state,\n    descriptors,\n    layout,\n    dimensions\n  } = _ref;\n  const {\n    tabBarLabelPosition\n  } = descriptors[state.routes[state.index].key].options;\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const {\n        tabBarItemStyle\n      } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nconst getPaddingBottom = insets => Math.max(insets.bottom - Platform.select({\n  ios: 4,\n  default: 0\n}), 0);\nexport const getTabBarHeight = _ref2 => {\n  var _StyleSheet$flatten;\n  let {\n    state,\n    descriptors,\n    dimensions,\n    insets,\n    style,\n    ...rest\n  } = _ref2;\n  // @ts-ignore\n  const customHeight = (_StyleSheet$flatten = StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest\n  });\n  const paddingBottom = getPaddingBottom(insets);\n  if (Platform.OS === 'ios' && !Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexport default function BottomTabBar(_ref3) {\n  let {\n    state,\n    navigation,\n    descriptors,\n    insets,\n    style\n  } = _ref3;\n  const {\n    colors\n  } = useTheme();\n  const buildLink = useLinkBuilder();\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor\n  } = focusedOptions;\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n  const visibilityAnimationConfigRef = React.useRef(tabBarVisibilityAnimationConfig);\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n  const [visible] = React.useState(() => new Animated.Value(shouldShowTabBar ? 1 : 0));\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n      const animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...(visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)\n      }).start(_ref4 => {\n        let {\n          finished\n        } = _ref4;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n      setIsTabBarHidden(true);\n      const animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...(visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)\n      }).start();\n    }\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width\n  });\n  const handleLayout = e => {\n    const {\n      height,\n      width\n    } = e.nativeEvent.layout;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(layout => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width\n        };\n      }\n    });\n  };\n  const {\n    routes\n  } = state;\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style]\n  });\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout\n  });\n  const tabBarBackgroundElement = tabBarBackground === null || tabBarBackground === void 0 ? void 0 : tabBarBackground();\n  return /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      // Absolutely position the tab bar so that the content is below it\n      // This is needed to avoid gap at bottom when the tab bar is hidden\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, tabBarStyle],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, /*#__PURE__*/React.createElement(View, {\n    pointerEvents: \"none\",\n    style: StyleSheet.absoluteFill\n  }, tabBarBackgroundElement), /*#__PURE__*/React.createElement(View, {\n    accessibilityRole: \"tablist\",\n    style: styles.content\n  }, routes.map((route, index) => {\n    const focused = index === state.index;\n    const {\n      options\n    } = descriptors[route.key];\n    const onPress = () => {\n      const event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch({\n          ...CommonActions.navigate({\n            name: route.name,\n            merge: true\n          }),\n          target: state.key\n        });\n      }\n    };\n    const onLongPress = () => {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    const label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    const accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && Platform.OS === 'ios' ? `${label}, tab, ${index + 1} of ${routes.length}` : undefined;\n    return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, /*#__PURE__*/React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, /*#__PURE__*/React.createElement(BottomTabItem, {\n      route: route,\n      descriptor: descriptors[route.key],\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: options.tabBarAllowFontScaling,\n      activeTintColor: tabBarActiveTintColor,\n      inactiveTintColor: tabBarInactiveTintColor,\n      activeBackgroundColor: tabBarActiveBackgroundColor,\n      inactiveBackgroundColor: tabBarInactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon ?? (_ref5 => {\n        let {\n          color,\n          size\n        } = _ref5;\n        return /*#__PURE__*/React.createElement(MissingIcon, {\n          color: color,\n          size: size\n        });\n      }),\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: tabBarShowLabel,\n      labelStyle: options.tabBarLabelStyle,\n      iconStyle: options.tabBarIconStyle,\n      style: options.tabBarItemStyle\n    })));\n  })));\n}\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\n//# sourceMappingURL=BottomTabBar.js.map"]},"metadata":{},"sourceType":"module"}