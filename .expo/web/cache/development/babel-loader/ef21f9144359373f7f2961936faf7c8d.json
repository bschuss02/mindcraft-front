{"ast":null,"code":"import { getHeaderTitle, Header, HeaderBackButton, HeaderBackContext, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar TRANSPARENT_PRESENTATIONS = ['transparentModal', 'containedTransparentModal'];\nexport default function NativeStackView(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors;\n  var parentHeaderBack = React.useContext(HeaderBackContext);\n  return React.createElement(SafeAreaProviderCompat, null, React.createElement(View, {\n    style: styles.container\n  }, state.routes.map(function (route, i) {\n    var _state$routes, _state$routes2;\n\n    var isFocused = state.index === i;\n    var previousKey = (_state$routes = state.routes[i - 1]) === null || _state$routes === void 0 ? void 0 : _state$routes.key;\n    var nextKey = (_state$routes2 = state.routes[i + 1]) === null || _state$routes2 === void 0 ? void 0 : _state$routes2.key;\n    var previousDescriptor = previousKey ? descriptors[previousKey] : undefined;\n    var nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n    var _descriptors$route$ke = descriptors[route.key],\n        options = _descriptors$route$ke.options,\n        navigation = _descriptors$route$ke.navigation,\n        render = _descriptors$route$ke.render;\n    var headerBack = previousDescriptor ? {\n      title: getHeaderTitle(previousDescriptor.options, previousDescriptor.route.name)\n    } : parentHeaderBack;\n    var canGoBack = headerBack !== undefined;\n    var header = options.header,\n        headerShown = options.headerShown,\n        headerTintColor = options.headerTintColor,\n        headerBackImageSource = options.headerBackImageSource,\n        headerLeft = options.headerLeft,\n        headerRight = options.headerRight,\n        headerTitle = options.headerTitle,\n        headerTitleAlign = options.headerTitleAlign,\n        headerTitleStyle = options.headerTitleStyle,\n        headerStyle = options.headerStyle,\n        headerShadowVisible = options.headerShadowVisible,\n        headerTransparent = options.headerTransparent,\n        headerBackground = options.headerBackground,\n        headerBackTitle = options.headerBackTitle,\n        presentation = options.presentation,\n        contentStyle = options.contentStyle;\n    var nextPresentation = nextDescriptor === null || nextDescriptor === void 0 ? void 0 : nextDescriptor.options.presentation;\n    return React.createElement(Screen, {\n      key: route.key,\n      focused: isFocused,\n      route: route,\n      navigation: navigation,\n      headerShown: headerShown,\n      headerTransparent: headerTransparent,\n      header: header !== undefined ? header({\n        back: headerBack,\n        options: options,\n        route: route,\n        navigation: navigation\n      }) : React.createElement(Header, {\n        title: getHeaderTitle(options, route.name),\n        headerTintColor: headerTintColor,\n        headerLeft: typeof headerLeft === 'function' ? function (_ref2) {\n          var tintColor = _ref2.tintColor;\n          return headerLeft({\n            tintColor: tintColor,\n            canGoBack: canGoBack,\n            label: headerBackTitle\n          });\n        } : headerLeft === undefined && canGoBack ? function (_ref3) {\n          var tintColor = _ref3.tintColor;\n          return React.createElement(HeaderBackButton, {\n            tintColor: tintColor,\n            backImage: headerBackImageSource !== undefined ? function () {\n              return React.createElement(Image, {\n                source: headerBackImageSource,\n                style: [styles.backImage, {\n                  tintColor: tintColor\n                }]\n              });\n            } : undefined,\n            onPress: navigation.goBack,\n            canGoBack: canGoBack\n          });\n        } : headerLeft,\n        headerRight: typeof headerRight === 'function' ? function (_ref4) {\n          var tintColor = _ref4.tintColor;\n          return headerRight({\n            tintColor: tintColor,\n            canGoBack: canGoBack\n          });\n        } : headerRight,\n        headerTitle: typeof headerTitle === 'function' ? function (_ref5) {\n          var children = _ref5.children,\n              tintColor = _ref5.tintColor;\n          return headerTitle({\n            children: children,\n            tintColor: tintColor\n          });\n        } : headerTitle,\n        headerTitleAlign: headerTitleAlign,\n        headerTitleStyle: headerTitleStyle,\n        headerTransparent: headerTransparent,\n        headerShadowVisible: headerShadowVisible,\n        headerBackground: headerBackground,\n        headerStyle: headerStyle\n      }),\n      style: [StyleSheet.absoluteFill, {\n        display: isFocused || nextPresentation != null && TRANSPARENT_PRESENTATIONS.includes(nextPresentation) ? 'flex' : 'none'\n      }, presentation != null && TRANSPARENT_PRESENTATIONS.includes(presentation) ? {\n        backgroundColor: 'transparent'\n      } : null]\n    }, React.createElement(HeaderBackContext.Provider, {\n      value: headerBack\n    }, React.createElement(View, {\n      style: [styles.contentContainer, contentStyle]\n    }, render())));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    flex: 1\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"sources":["views/NativeStackView.tsx"],"names":["getHeaderTitle","Header","HeaderBackButton","HeaderBackContext","SafeAreaProviderCompat","Screen","React","TRANSPARENT_PRESENTATIONS","NativeStackView","state","descriptors","parentHeaderBack","useContext","styles","container","routes","map","route","i","isFocused","index","previousKey","key","nextKey","previousDescriptor","undefined","nextDescriptor","options","navigation","render","headerBack","title","name","canGoBack","header","headerShown","headerTintColor","headerBackImageSource","headerLeft","headerRight","headerTitle","headerTitleAlign","headerTitleStyle","headerStyle","headerShadowVisible","headerTransparent","headerBackground","headerBackTitle","presentation","contentStyle","nextPresentation","back","tintColor","label","backImage","goBack","children","StyleSheet","absoluteFill","display","includes","backgroundColor","contentContainer","create","flex","height","width","margin","resizeMode"],"mappings":"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","sourceRoot":"../../../src","sourcesContent":["import { getHeaderTitle, Header, HeaderBackButton, HeaderBackContext, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\nconst TRANSPARENT_PRESENTATIONS = ['transparentModal', 'containedTransparentModal'];\nexport default function NativeStackView(_ref) {\n  let {\n    state,\n    descriptors\n  } = _ref;\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n  return /*#__PURE__*/React.createElement(SafeAreaProviderCompat, null, /*#__PURE__*/React.createElement(View, {\n    style: styles.container\n  }, state.routes.map((route, i) => {\n    var _state$routes, _state$routes2;\n    const isFocused = state.index === i;\n    const previousKey = (_state$routes = state.routes[i - 1]) === null || _state$routes === void 0 ? void 0 : _state$routes.key;\n    const nextKey = (_state$routes2 = state.routes[i + 1]) === null || _state$routes2 === void 0 ? void 0 : _state$routes2.key;\n    const previousDescriptor = previousKey ? descriptors[previousKey] : undefined;\n    const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n    const {\n      options,\n      navigation,\n      render\n    } = descriptors[route.key];\n    const headerBack = previousDescriptor ? {\n      title: getHeaderTitle(previousDescriptor.options, previousDescriptor.route.name)\n    } : parentHeaderBack;\n    const canGoBack = headerBack !== undefined;\n    const {\n      header,\n      headerShown,\n      headerTintColor,\n      headerBackImageSource,\n      headerLeft,\n      headerRight,\n      headerTitle,\n      headerTitleAlign,\n      headerTitleStyle,\n      headerStyle,\n      headerShadowVisible,\n      headerTransparent,\n      headerBackground,\n      headerBackTitle,\n      presentation,\n      contentStyle\n    } = options;\n    const nextPresentation = nextDescriptor === null || nextDescriptor === void 0 ? void 0 : nextDescriptor.options.presentation;\n    return /*#__PURE__*/React.createElement(Screen, {\n      key: route.key,\n      focused: isFocused,\n      route: route,\n      navigation: navigation,\n      headerShown: headerShown,\n      headerTransparent: headerTransparent,\n      header: header !== undefined ? header({\n        back: headerBack,\n        options,\n        route,\n        navigation\n      }) : /*#__PURE__*/React.createElement(Header, {\n        title: getHeaderTitle(options, route.name),\n        headerTintColor: headerTintColor,\n        headerLeft: typeof headerLeft === 'function' ? _ref2 => {\n          let {\n            tintColor\n          } = _ref2;\n          return headerLeft({\n            tintColor,\n            canGoBack,\n            label: headerBackTitle\n          });\n        } : headerLeft === undefined && canGoBack ? _ref3 => {\n          let {\n            tintColor\n          } = _ref3;\n          return /*#__PURE__*/React.createElement(HeaderBackButton, {\n            tintColor: tintColor,\n            backImage: headerBackImageSource !== undefined ? () => /*#__PURE__*/React.createElement(Image, {\n              source: headerBackImageSource,\n              style: [styles.backImage, {\n                tintColor\n              }]\n            }) : undefined,\n            onPress: navigation.goBack,\n            canGoBack: canGoBack\n          });\n        } : headerLeft,\n        headerRight: typeof headerRight === 'function' ? _ref4 => {\n          let {\n            tintColor\n          } = _ref4;\n          return headerRight({\n            tintColor,\n            canGoBack\n          });\n        } : headerRight,\n        headerTitle: typeof headerTitle === 'function' ? _ref5 => {\n          let {\n            children,\n            tintColor\n          } = _ref5;\n          return headerTitle({\n            children,\n            tintColor\n          });\n        } : headerTitle,\n        headerTitleAlign: headerTitleAlign,\n        headerTitleStyle: headerTitleStyle,\n        headerTransparent: headerTransparent,\n        headerShadowVisible: headerShadowVisible,\n        headerBackground: headerBackground,\n        headerStyle: headerStyle\n      }),\n      style: [StyleSheet.absoluteFill, {\n        display: isFocused || nextPresentation != null && TRANSPARENT_PRESENTATIONS.includes(nextPresentation) ? 'flex' : 'none'\n      }, presentation != null && TRANSPARENT_PRESENTATIONS.includes(presentation) ? {\n        backgroundColor: 'transparent'\n      } : null]\n    }, /*#__PURE__*/React.createElement(HeaderBackContext.Provider, {\n      value: headerBack\n    }, /*#__PURE__*/React.createElement(View, {\n      style: [styles.contentContainer, contentStyle]\n    }, render())));\n  })));\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    flex: 1\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  }\n});\n//# sourceMappingURL=NativeStackView.js.map"]},"metadata":{},"sourceType":"module"}