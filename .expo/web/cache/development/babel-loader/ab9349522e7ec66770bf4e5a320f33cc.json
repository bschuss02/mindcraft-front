{"ast":null,"code":"import { useState, useEffect, useContext } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Box, Text, Button, HStack, VStack, Icon, Pressable } from \"native-base\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction CustomTabBar(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  return _jsx(Box, {\n    bg: \"c1.900\",\n    position: \"fixed\",\n    zIndex: 9,\n    w: \"100%\",\n    borderBottomColor: \"#555\",\n    borderBottomWidth: 1,\n    children: _jsx(HStack, {\n      space: \"5\",\n      p: \"2\",\n      alignItems: \"center\",\n      children: state.routes.map(function (route, index) {\n        var options = descriptors[route.key].options;\n        var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n        var isFocused = state.index === index;\n\n        var onPress = function onPress() {\n          var event = navigation.emit({\n            type: \"tabPress\",\n            target: route.key,\n            canPreventDefault: true\n          });\n\n          if (!isFocused && !event.defaultPrevented) {\n            navigation.navigate(route.name);\n          }\n        };\n\n        return _jsx(Pressable, {\n          onPress: onPress,\n          _hover: {\n            bg: \"c1.600\"\n          },\n          borderRadius: \"10\",\n          children: _jsxs(HStack, {\n            justifyContent: \"center\",\n            children: [isFocused && _jsx(Box, {\n              alignSelf: \"flex-end\",\n              position: \"absolute\",\n              bg: \"c2.500\",\n              w: \"50px\",\n              h: \"5px\",\n              borderRadius: \"10\"\n            }), _jsxs(HStack, {\n              p: \"2\",\n              rounded: \"10\",\n              space: \"2\",\n              children: [options.tabBarIcon && _jsx(Icon, {\n                as: Ionicons,\n                name: options.tabBarIcon,\n                size: \"5\",\n                color: \"c1.50\"\n              }), _jsx(Text, {\n                fontSize: \"16\",\n                color: \"c1.50\",\n                children: label\n              })]\n            })]\n          })\n        }, index.toString());\n      })\n    })\n  });\n}\n\nexport { CustomTabBar };","map":{"version":3,"sources":["/Users/Benjamin/Dev/hoohacks/mindcraft-front/src/components/navigation/CustomTabBar.js"],"names":["useState","useEffect","useContext","Box","Text","Button","HStack","VStack","Icon","Pressable","useNavigation","Ionicons","MaterialCommunityIcons","CustomTabBar","state","descriptors","navigation","routes","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","bg","tabBarIcon","toString"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\"\nimport { TouchableOpacity } from \"react-native\"\nimport { Box, Text, Button, HStack, VStack, Icon, Pressable } from \"native-base\"\nimport { useNavigation } from \"@react-navigation/native\"\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\"\n\nfunction CustomTabBar({ state, descriptors, navigation }) {\n\treturn (\n\t\t<Box\n\t\t\tbg=\"c1.900\"\n\t\t\tposition=\"fixed\"\n\t\t\tzIndex={9}\n\t\t\tw=\"100%\"\n\t\t\tborderBottomColor=\"#555\"\n\t\t\tborderBottomWidth={1}\n\t\t>\n\t\t\t<HStack space=\"5\" p=\"2\" alignItems=\"center\">\n\t\t\t\t{state.routes.map((route, index) => {\n\t\t\t\t\tconst { options } = descriptors[route.key]\n\t\t\t\t\tconst label =\n\t\t\t\t\t\toptions.tabBarLabel !== undefined\n\t\t\t\t\t\t\t? options.tabBarLabel\n\t\t\t\t\t\t\t: options.title !== undefined\n\t\t\t\t\t\t\t? options.title\n\t\t\t\t\t\t\t: route.name\n\t\t\t\t\tconst isFocused = state.index === index\n\t\t\t\t\tconst onPress = () => {\n\t\t\t\t\t\tconst event = navigation.emit({\n\t\t\t\t\t\t\ttype: \"tabPress\",\n\t\t\t\t\t\t\ttarget: route.key,\n\t\t\t\t\t\t\tcanPreventDefault: true,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (!isFocused && !event.defaultPrevented) {\n\t\t\t\t\t\t\tnavigation.navigate(route.name)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Pressable\n\t\t\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\t\t\tonPress={onPress}\n\t\t\t\t\t\t\t_hover={{ bg: \"c1.600\" }}\n\t\t\t\t\t\t\tborderRadius=\"10\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<HStack justifyContent=\"center\">\n\t\t\t\t\t\t\t\t{isFocused && (\n\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\talignSelf=\"flex-end\"\n\t\t\t\t\t\t\t\t\t\tposition=\"absolute\"\n\t\t\t\t\t\t\t\t\t\tbg=\"c2.500\"\n\t\t\t\t\t\t\t\t\t\tw=\"50px\"\n\t\t\t\t\t\t\t\t\t\th=\"5px\"\n\t\t\t\t\t\t\t\t\t\tborderRadius=\"10\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<HStack p=\"2\" rounded=\"10\" space=\"2\">\n\t\t\t\t\t\t\t\t\t{options.tabBarIcon && (\n\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\tas={Ionicons}\n\t\t\t\t\t\t\t\t\t\t\tname={options.tabBarIcon}\n\t\t\t\t\t\t\t\t\t\t\tsize=\"5\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"c1.50\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<Text fontSize=\"16\" color=\"c1.50\">\n\t\t\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t</Pressable>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</HStack>\n\t\t</Box>\n\t)\n}\n\nexport { CustomTabBar }\n"]},"metadata":{},"sourceType":"module"}