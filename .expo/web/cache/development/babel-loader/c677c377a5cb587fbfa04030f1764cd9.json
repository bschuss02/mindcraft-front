{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Box, Text, Button, HStack, VStack, Icon, Input, useToast, Spinner } from \"native-base\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport DefaultBar from \"../components/bars/DefaultBar\";\nimport apiCall from \"../util/api/apiCall\";\nimport showMyToast from \"../util/api/showMyToast\";\nimport { useStartup } from \"../util/api/startup/useStartup\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignupScreen() {\n  var navigation = useNavigation();\n  var callStartup = useStartup();\n\n  var _useState = useState(\"user01\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"asdf\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isPasswordVisible = _useState6[0],\n      setIsPasswordVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  function handleSignup() {\n    return _handleSignup.apply(this, arguments);\n  }\n\n  function _handleSignup() {\n    _handleSignup = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      var signupInfo = {\n        username: username,\n        password: password\n      };\n\n      var _yield$apiCall = yield apiCall(\"POST\", \"auth/signup\", signupInfo),\n          data = _yield$apiCall.data,\n          error = _yield$apiCall.error;\n\n      if (error) {\n        setIsLoading(false);\n        return showMyToast(error);\n      }\n\n      var user = data.user,\n          token = data.token;\n      yield AsyncStorage.setItem(\"authToken\", token);\n      yield callStartup();\n      navigation.navigate(\"ProfileScreen\");\n      setIsLoading(false);\n    });\n    return _handleSignup.apply(this, arguments);\n  }\n\n  return _jsx(Box, {\n    variant: \"screen\",\n    children: _jsxs(VStack, {\n      space: \"5\",\n      maxW: \"500px\",\n      children: [_jsx(DefaultBar, {\n        title: \"Sign Up\"\n      }), _jsxs(VStack, {\n        space: \"3\",\n        children: [_jsx(Input, {\n          value: username,\n          onChangeText: setUsername,\n          variant: \"notWords\",\n          placeholder: \"Username\"\n        }), _jsx(Input, {\n          value: password,\n          onChangeText: setPassword,\n          placeholder: \"Password\",\n          variant: \"notWords\",\n          type: isPasswordVisible ? \"text\" : \"password\",\n          rightElement: _jsx(Box, {\n            mr: \"10px\",\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setIsPasswordVisible(!isPasswordVisible);\n              },\n              children: _jsx(Icon, {\n                size: \"25px\",\n                as: MaterialCommunityIcons,\n                name: isPasswordVisible ? \"eye\" : \"eye-off\",\n                color: \"primary.50\"\n              })\n            })\n          })\n        })]\n      }), _jsxs(VStack, {\n        space: \"5\",\n        alignItems: \"center\",\n        children: [_jsx(Button, {\n          onPress: handleSignup,\n          children: _jsx(Text, {\n            children: \"Sign Up\"\n          })\n        }), _jsxs(HStack, {\n          space: 1,\n          justifyContent: \"center\",\n          children: [_jsx(Text, {\n            children: \"Already have an account?\"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate(\"LoginScreen\");\n            },\n            children: _jsx(Text, {\n              color: \"primary.600\",\n              children: \"Log In\"\n            })\n          })]\n        }), isLoading && _jsxs(Box, {\n          alignItems: \"center\",\n          children: [_jsx(Text, {\n            fontSize: \"12px\",\n            color: \"c1.400\",\n            children: \"Loading\"\n          }), _jsx(Spinner, {})]\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/Users/Benjamin/Dev/hoohacks/mindcraft-front/src/screens/SignupScreen.js"],"names":["React","useState","useEffect","useContext","Box","Text","Button","HStack","VStack","Icon","Input","useToast","Spinner","useNavigation","Ionicons","MaterialCommunityIcons","AsyncStorage","DefaultBar","apiCall","showMyToast","useStartup","SignupScreen","navigation","callStartup","username","setUsername","password","setPassword","isPasswordVisible","setIsPasswordVisible","isLoading","setIsLoading","handleSignup","signupInfo","data","error","user","token","setItem","navigate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\"\nimport { TouchableOpacity } from \"react-native\"\nimport {\n\tBox,\n\tText,\n\tButton,\n\tHStack,\n\tVStack,\n\tIcon,\n\tInput,\n\tuseToast,\n\tSpinner,\n} from \"native-base\"\nimport { useNavigation } from \"@react-navigation/native\"\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\n\nimport DefaultBar from \"../components/bars/DefaultBar\"\nimport apiCall from \"../util/api/apiCall\"\nimport showMyToast from \"../util/api/showMyToast\"\nimport { useStartup } from \"../util/api/startup/useStartup\"\n\nexport default function SignupScreen() {\n\tconst navigation = useNavigation()\n\tconst callStartup = useStartup()\n\tconst [username, setUsername] = useState(\"user01\")\n\tconst [password, setPassword] = useState(\"asdf\")\n\tconst [isPasswordVisible, setIsPasswordVisible] = useState(false)\n\tconst [isLoading, setIsLoading] = useState(false)\n\n\tasync function handleSignup() {\n\t\tsetIsLoading(true)\n\t\tconst signupInfo = {\n\t\t\tusername,\n\t\t\tpassword,\n\t\t}\n\t\tconst { data, error } = await apiCall(\"POST\", \"auth/signup\", signupInfo)\n\t\tif (error) {\n\t\t\tsetIsLoading(false)\n\t\t\treturn showMyToast(error)\n\t\t}\n\t\tconst { user, token } = data\n\t\tawait AsyncStorage.setItem(\"authToken\", token)\n\t\tawait callStartup()\n\t\tnavigation.navigate(\"ProfileScreen\")\n\t\tsetIsLoading(false)\n\t}\n\n\treturn (\n\t\t<Box variant=\"screen\">\n\t\t\t<VStack space=\"5\" maxW=\"500px\">\n\t\t\t\t<DefaultBar title=\"Sign Up\" />\n\t\t\t\t<VStack space=\"3\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tonChangeText={setUsername}\n\t\t\t\t\t\tvariant=\"notWords\"\n\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChangeText={setPassword}\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tvariant=\"notWords\"\n\t\t\t\t\t\ttype={isPasswordVisible ? \"text\" : \"password\"}\n\t\t\t\t\t\trightElement={\n\t\t\t\t\t\t\t<Box mr=\"10px\">\n\t\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\t\tonPress={() => setIsPasswordVisible(!isPasswordVisible)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\tsize=\"25px\"\n\t\t\t\t\t\t\t\t\t\tas={MaterialCommunityIcons}\n\t\t\t\t\t\t\t\t\t\tname={isPasswordVisible ? \"eye\" : \"eye-off\"}\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary.50\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</VStack>\n\t\t\t\t<VStack space=\"5\" alignItems=\"center\">\n\t\t\t\t\t<Button onPress={handleSignup}>\n\t\t\t\t\t\t<Text>Sign Up</Text>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<HStack space={1} justifyContent=\"center\">\n\t\t\t\t\t\t<Text>Already have an account?</Text>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tonPress={() => navigation.navigate(\"LoginScreen\")}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text color=\"primary.600\">Log In</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</HStack>\n\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t<Box alignItems=\"center\">\n\t\t\t\t\t\t\t<Text fontSize=\"12px\" color=\"c1.400\">\n\t\t\t\t\t\t\t\tLoading\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t</VStack>\n\t\t\t</VStack>\n\t\t</Box>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}