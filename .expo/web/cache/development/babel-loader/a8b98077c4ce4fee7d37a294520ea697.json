{"ast":null,"code":"import { useState, useEffect, useContext } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Box, Text, Button, HStack, VStack, Icon, Heading, Pressable } from \"native-base\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction CustomDrawerItem(_ref) {\n  var route = _ref.route,\n      props = _ref.props,\n      index = _ref.index;\n  var name = route.name;\n  var options = props.descriptors[route.key].options;\n  var label = options.drawerLabel !== undefined ? options.drawerLabel : options.title !== undefined ? options.title : name;\n  var isFocused = props.state.index === index;\n  return _jsx(Pressable, {\n    borderRadius: \"10\",\n    p: \"2\",\n    _hover: {\n      bg: \"c1.600\"\n    },\n    onPress: function onPress() {\n      return props.navigation.navigate(name);\n    },\n    children: _jsxs(HStack, {\n      space: \"2\",\n      alignItems: \"center\",\n      children: [_jsx(Icon, {\n        as: Ionicons,\n        name: options.drawerIcon,\n        size: \"6\",\n        color: isFocused ? \"c2.500\" : \"c1.50\"\n      }), _jsx(Text, {\n        fontSize: \"18\",\n        fontWeight: isFocused ? \"bold\" : \"normal\",\n        color: isFocused ? \"c2.500\" : \"c1.50\",\n        children: label\n      })]\n    })\n  });\n}\n\nexport { CustomDrawerItem };","map":{"version":3,"sources":["/Users/Benjamin/Dev/hoohacks/mindcraft-front/src/components/navigation/CustomDrawerItem.js"],"names":["useState","useEffect","useContext","Box","Text","Button","HStack","VStack","Icon","Heading","Pressable","useNavigation","Ionicons","MaterialCommunityIcons","CustomDrawerItem","route","props","index","name","options","descriptors","key","label","drawerLabel","undefined","title","isFocused","state","bg","navigation","navigate","drawerIcon"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;;AAEA,SACCC,GADD,EAECC,IAFD,EAGCC,MAHD,EAICC,MAJD,EAKCC,MALD,EAMCC,IAND,EAOCC,OAPD,EAQCC,SARD,QASO,aATP;AAUA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,QAAT,EAAmBC,sBAAnB,QAAiD,oBAAjD;;;;AAEA,SAASC,gBAAT,OAAmD;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,KAAgB,QAAhBA,KAAgB;AAAA,MAATC,KAAS,QAATA,KAAS;AAClD,MAAQC,IAAR,GAAiBH,KAAjB,CAAQG,IAAR;AACA,MAAQC,OAAR,GAAoBH,KAAK,CAACI,WAAN,CAAkBL,KAAK,CAACM,GAAxB,CAApB,CAAQF,OAAR;AACA,MAAMG,KAAK,GACVH,OAAO,CAACI,WAAR,KAAwBC,SAAxB,GACGL,OAAO,CAACI,WADX,GAEGJ,OAAO,CAACM,KAAR,KAAkBD,SAAlB,GACAL,OAAO,CAACM,KADR,GAEAP,IALJ;AAMA,MAAMQ,SAAS,GAAGV,KAAK,CAACW,KAAN,CAAYV,KAAZ,KAAsBA,KAAxC;AAEA,SACC,KAAC,SAAD;AACC,IAAA,YAAY,EAAC,IADd;AAEC,IAAA,CAAC,EAAC,GAFH;AAGC,IAAA,MAAM,EAAE;AAAEW,MAAAA,EAAE,EAAE;AAAN,KAHT;AAIC,IAAA,OAAO,EAAE;AAAA,aAAMZ,KAAK,CAACa,UAAN,CAAiBC,QAAjB,CAA0BZ,IAA1B,CAAN;AAAA,KAJV;AAAA,cAMC,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAkB,MAAA,UAAU,EAAC,QAA7B;AAAA,iBACC,KAAC,IAAD;AACC,QAAA,EAAE,EAAEN,QADL;AAEC,QAAA,IAAI,EAAEO,OAAO,CAACY,UAFf;AAGC,QAAA,IAAI,EAAC,GAHN;AAIC,QAAA,KAAK,EAAEL,SAAS,GAAG,QAAH,GAAc;AAJ/B,QADD,EAOC,KAAC,IAAD;AACC,QAAA,QAAQ,EAAC,IADV;AAEC,QAAA,UAAU,EAAEA,SAAS,GAAG,MAAH,GAAY,QAFlC;AAGC,QAAA,KAAK,EAAEA,SAAS,GAAG,QAAH,GAAc,OAH/B;AAAA,kBAKEJ;AALF,QAPD;AAAA;AAND,IADD;AAwBA;;AAED,SAASR,gBAAT","sourcesContent":["import { useState, useEffect, useContext } from \"react\"\nimport { TouchableOpacity } from \"react-native\"\nimport {\n\tBox,\n\tText,\n\tButton,\n\tHStack,\n\tVStack,\n\tIcon,\n\tHeading,\n\tPressable,\n} from \"native-base\"\nimport { useNavigation } from \"@react-navigation/native\"\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\"\n\nfunction CustomDrawerItem({ route, props, index }) {\n\tconst { name } = route\n\tconst { options } = props.descriptors[route.key]\n\tconst label =\n\t\toptions.drawerLabel !== undefined\n\t\t\t? options.drawerLabel\n\t\t\t: options.title !== undefined\n\t\t\t? options.title\n\t\t\t: name\n\tconst isFocused = props.state.index === index\n\n\treturn (\n\t\t<Pressable\n\t\t\tborderRadius=\"10\"\n\t\t\tp=\"2\"\n\t\t\t_hover={{ bg: \"c1.600\" }}\n\t\t\tonPress={() => props.navigation.navigate(name)}\n\t\t>\n\t\t\t<HStack space=\"2\" alignItems=\"center\">\n\t\t\t\t<Icon\n\t\t\t\t\tas={Ionicons}\n\t\t\t\t\tname={options.drawerIcon}\n\t\t\t\t\tsize=\"6\"\n\t\t\t\t\tcolor={isFocused ? \"c2.500\" : \"c1.50\"}\n\t\t\t\t/>\n\t\t\t\t<Text\n\t\t\t\t\tfontSize=\"18\"\n\t\t\t\t\tfontWeight={isFocused ? \"bold\" : \"normal\"}\n\t\t\t\t\tcolor={isFocused ? \"c2.500\" : \"c1.50\"}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Text>\n\t\t\t</HStack>\n\t\t</Pressable>\n\t)\n}\n\nexport { CustomDrawerItem }\n"]},"metadata":{},"sourceType":"module"}