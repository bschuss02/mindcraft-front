{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"register\"],\n    _excluded2 = [\"onPress\", \"onPressChange\", \"onPressStart\", \"onPressEnd\", \"onPressUp\", \"isDisabled\", \"isPressed\", \"preventFocusOnPress\", \"shouldCancelOnPointerExit\", \"allowTextSelectionOnPress\", \"ref\"],\n    _excluded3 = [\"children\"],\n    _excluded4 = [\"children\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mergeProps as $bx7SL$mergeProps, useSyncRef as $bx7SL$useSyncRef, useGlobalListeners as $bx7SL$useGlobalListeners, isVirtualClick as $bx7SL$isVirtualClick, focusWithoutScrolling as $bx7SL$focusWithoutScrolling, isVirtualPointerEvent as $bx7SL$isVirtualPointerEvent, isIOS as $bx7SL$isIOS, runAfterTransition as $bx7SL$runAfterTransition, useLayoutEffect as $bx7SL$useLayoutEffect, isMac as $bx7SL$isMac, useEvent as $bx7SL$useEvent, useDescription as $bx7SL$useDescription } from \"@react-aria/utils\";\nimport $bx7SL$react, { useRef as $bx7SL$useRef, useContext as $bx7SL$useContext, useState as $bx7SL$useState, useMemo as $bx7SL$useMemo, useEffect as $bx7SL$useEffect, useCallback as $bx7SL$useCallback } from \"react\";\nvar $14c0b72509d70225$var$state = \"default\";\nvar $14c0b72509d70225$var$savedUserSelect = \"\";\nvar $14c0b72509d70225$var$modifiedElementMap = new WeakMap();\n\nfunction $14c0b72509d70225$export$16a4697467175487(target) {\n  if ((0, $bx7SL$isIOS)()) {\n    if ($14c0b72509d70225$var$state === \"default\") {\n      $14c0b72509d70225$var$savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = \"none\";\n    }\n\n    $14c0b72509d70225$var$state = \"disabled\";\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = \"none\";\n  }\n}\n\nfunction $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {\n  if ((0, $bx7SL$isIOS)()) {\n    if ($14c0b72509d70225$var$state !== \"disabled\") return;\n    $14c0b72509d70225$var$state = \"restoring\";\n    setTimeout(function () {\n      (0, $bx7SL$runAfterTransition)(function () {\n        if ($14c0b72509d70225$var$state === \"restoring\") {\n          if (document.documentElement.style.webkitUserSelect === \"none\") document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || \"\";\n          $14c0b72509d70225$var$savedUserSelect = \"\";\n          $14c0b72509d70225$var$state = \"default\";\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n      if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {\n        var targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);\n        if (target.style.userSelect === \"none\") target.style.userSelect = targetOldUserSelect;\n        if (target.getAttribute(\"style\") === \"\") target.removeAttribute(\"style\");\n        $14c0b72509d70225$var$modifiedElementMap.delete(target);\n      }\n    }\n}\n\nvar $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = (0, $bx7SL$react).createContext(null);\n$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = \"PressResponderContext\";\n\nfunction $f6c31cce2adf654f$var$usePressResponderContext(props) {\n  var context = (0, $bx7SL$useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));\n\n  if (context) {\n    var register = context.register,\n        contextProps = _objectWithoutProperties(context, _excluded);\n\n    props = (0, $bx7SL$mergeProps)(contextProps, props);\n    register();\n  }\n\n  (0, $bx7SL$useSyncRef)(context, props.ref);\n  return props;\n}\n\nfunction $f6c31cce2adf654f$export$45712eceda6fad21(props) {\n  var _$f6c31cce2adf654f$va = $f6c31cce2adf654f$var$usePressResponderContext(props),\n      onPress = _$f6c31cce2adf654f$va.onPress,\n      onPressChange = _$f6c31cce2adf654f$va.onPressChange,\n      onPressStart = _$f6c31cce2adf654f$va.onPressStart,\n      onPressEnd = _$f6c31cce2adf654f$va.onPressEnd,\n      onPressUp = _$f6c31cce2adf654f$va.onPressUp,\n      isDisabled = _$f6c31cce2adf654f$va.isDisabled,\n      isPressedProp = _$f6c31cce2adf654f$va.isPressed,\n      preventFocusOnPress = _$f6c31cce2adf654f$va.preventFocusOnPress,\n      shouldCancelOnPointerExit = _$f6c31cce2adf654f$va.shouldCancelOnPointerExit,\n      allowTextSelectionOnPress = _$f6c31cce2adf654f$va.allowTextSelectionOnPress,\n      _ = _$f6c31cce2adf654f$va.ref,\n      domProps = _objectWithoutProperties(_$f6c31cce2adf654f$va, _excluded2);\n\n  var propsRef = (0, $bx7SL$useRef)(null);\n  propsRef.current = {\n    onPress: onPress,\n    onPressChange: onPressChange,\n    onPressStart: onPressStart,\n    onPressEnd: onPressEnd,\n    onPressUp: onPressUp,\n    isDisabled: isDisabled,\n    shouldCancelOnPointerExit: shouldCancelOnPointerExit\n  };\n\n  var _ref = (0, $bx7SL$useState)(false),\n      _ref2 = _slicedToArray(_ref, 2),\n      isPressed = _ref2[0],\n      setPressed = _ref2[1];\n\n  var ref = (0, $bx7SL$useRef)({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  var _ref3 = (0, $bx7SL$useGlobalListeners)(),\n      addGlobalListener = _ref3.addGlobalListener,\n      removeAllGlobalListeners = _ref3.removeAllGlobalListeners;\n\n  var pressProps = (0, $bx7SL$useMemo)(function () {\n    var state = ref.current;\n\n    var triggerPressStart = function triggerPressStart(originalEvent, pointerType) {\n      var _propsRef$current = propsRef.current,\n          onPressStart = _propsRef$current.onPressStart,\n          onPressChange = _propsRef$current.onPressChange,\n          isDisabled = _propsRef$current.isDisabled;\n      if (isDisabled || state.didFirePressStart) return;\n      if (onPressStart) onPressStart({\n        type: \"pressstart\",\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n      if (onPressChange) onPressChange(true);\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n\n    var triggerPressEnd = function triggerPressEnd(originalEvent, pointerType) {\n      var wasPressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var _propsRef$current2 = propsRef.current,\n          onPressEnd = _propsRef$current2.onPressEnd,\n          onPressChange = _propsRef$current2.onPressChange,\n          onPress = _propsRef$current2.onPress,\n          isDisabled = _propsRef$current2.isDisabled;\n      if (!state.didFirePressStart) return;\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n      if (onPressEnd) onPressEnd({\n        type: \"pressend\",\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n      if (onPressChange) onPressChange(false);\n      setPressed(false);\n      if (onPress && wasPressed && !isDisabled) onPress({\n        type: \"press\",\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n\n    var triggerPressUp = function triggerPressUp(originalEvent, pointerType) {\n      var _propsRef$current3 = propsRef.current,\n          onPressUp = _propsRef$current3.onPressUp,\n          isDisabled = _propsRef$current3.isDisabled;\n      if (isDisabled) return;\n      if (onPressUp) onPressUp({\n        type: \"pressup\",\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n\n    var cancel = function cancel(e) {\n      if (state.isPressed) {\n        if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n      }\n    };\n\n    var pressProps = {\n      onKeyDown: function onKeyDown(e) {\n        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target)) {\n          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n          e.stopPropagation();\n\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, \"keyboard\");\n            addGlobalListener(document, \"keyup\", onKeyUp, false);\n          }\n        } else if (e.key === \"Enter\" && $f6c31cce2adf654f$var$isHTMLAnchorLink(e.currentTarget)) e.stopPropagation();\n      },\n      onKeyUp: function onKeyUp(e) {\n        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target)) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e), \"keyboard\");\n      },\n      onClick: function onClick(e) {\n        if (e && !e.currentTarget.contains(e.target)) return;\n\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) e.preventDefault();\n\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === \"virtual\" || (0, $bx7SL$isVirtualClick)(e.nativeEvent))) {\n            if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n            triggerPressStart(e, \"virtual\");\n            triggerPressUp(e, \"virtual\");\n            triggerPressEnd(e, \"virtual\");\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    var onKeyUp = function onKeyUp(e) {\n      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent(e, state.target)) {\n        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n        e.stopPropagation();\n        state.isPressed = false;\n        var target = e.target;\n        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), \"keyboard\", state.target.contains(target));\n        removeAllGlobalListeners();\n        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) || state.target.getAttribute(\"role\") === \"link\")) state.target.click();\n      }\n    };\n\n    if (typeof PointerEvent !== \"undefined\") {\n      pressProps.onPointerDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n\n        if ((0, $bx7SL$isVirtualPointerEvent)(e.nativeEvent)) {\n          state.pointerType = \"virtual\";\n          return;\n        }\n\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        state.pointerType = e.pointerType;\n        e.stopPropagation();\n\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n          if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);\n          triggerPressStart(e, state.pointerType);\n          addGlobalListener(document, \"pointermove\", onPointerMove, false);\n          addGlobalListener(document, \"pointerup\", onPointerUp, false);\n          addGlobalListener(document, \"pointercancel\", onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n\n        if (e.button === 0) {\n          if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = function (e) {\n        if (!e.currentTarget.contains(e.target) || state.pointerType === \"virtual\") return;\n        if (e.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e, e.currentTarget)) triggerPressUp(e, state.pointerType || e.pointerType);\n      };\n\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId !== state.activePointerId) return;\n\n        if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n        }\n      };\n\n      var onPointerCancel = function onPointerCancel(e) {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) return;\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = (0, $bx7SL$isVirtualClick)(e.nativeEvent) ? \"virtual\" : \"mouse\";\n        if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(document, \"mouseup\", onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n\n      pressProps.onMouseLeave = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n\n      pressProps.onMouseUp = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) triggerPressUp(e, state.pointerType);\n      };\n\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button !== 0) return;\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        var touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);\n        if (!touch) return;\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = \"touch\";\n        if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(window, \"scroll\", onScroll, true);\n      };\n\n      pressProps.onTouchMove = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (!state.isPressed) return;\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n\n      pressProps.onTouchEnd = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (!state.isPressed) return;\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) triggerPressEnd(e, state.pointerType, false);\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed) cancel(e);\n      };\n\n      var onScroll = function onScroll(e) {\n        if (state.isPressed && e.target.contains(state.target)) cancel({\n          currentTarget: state.target,\n          shiftKey: false,\n          ctrlKey: false,\n          metaKey: false,\n          altKey: false\n        });\n      };\n\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress]);\n  (0, $bx7SL$useEffect)(function () {\n    return function () {\n      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(ref.current.target);\n    };\n  }, [allowTextSelectionOnPress]);\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: (0, $bx7SL$mergeProps)(domProps, pressProps)\n  };\n}\n\nfunction $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {\n  return target.tagName === \"A\" && target.hasAttribute(\"href\");\n}\n\nfunction $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {\n  var key = event.key,\n      code = event.code;\n  var element = currentTarget;\n  var role = element.getAttribute(\"role\");\n  return (key === \"Enter\" || key === \" \" || key === \"Spacebar\" || code === \"Space\") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && (!$f6c31cce2adf654f$var$isHTMLAnchorLink(element) || role === \"button\" && key !== \"Enter\") && !(role === \"link\" && key !== \"Enter\");\n}\n\nfunction $f6c31cce2adf654f$var$getTouchFromEvent(event) {\n  var targetTouches = event.targetTouches;\n  if (targetTouches.length > 0) return targetTouches[0];\n  return null;\n}\n\nfunction $f6c31cce2adf654f$var$getTouchById(event, pointerId) {\n  var changedTouches = event.changedTouches;\n\n  for (var i = 0; i < changedTouches.length; i++) {\n    var touch = changedTouches[i];\n    if (touch.identifier === pointerId) return touch;\n  }\n\n  return null;\n}\n\nfunction $f6c31cce2adf654f$var$createEvent(target, e) {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\n\nfunction $f6c31cce2adf654f$var$getPointClientRect(point) {\n  var offsetX = point.width / 2 || point.radiusX || 0;\n  var offsetY = point.height / 2 || point.radiusY || 0;\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction $f6c31cce2adf654f$var$areRectanglesOverlapping(a, b) {\n  if (a.left > b.right || b.left > a.right) return false;\n  if (a.top > b.bottom || b.top > a.bottom) return false;\n  return true;\n}\n\nfunction $f6c31cce2adf654f$var$isOverTarget(point, target) {\n  var rect = target.getBoundingClientRect();\n  var pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);\n  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction $f6c31cce2adf654f$var$shouldPreventDefault(target) {\n  return !(target instanceof HTMLElement) || !target.draggable;\n}\n\nfunction $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {\n  if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey(target, key);\n  if (target instanceof HTMLButtonElement) return target.type !== \"submit\";\n  return true;\n}\n\nvar $f6c31cce2adf654f$var$nonTextInputTypes = new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\n\nfunction $f6c31cce2adf654f$var$isValidInputKey(target, key) {\n  return target.type === \"checkbox\" || target.type === \"radio\" ? key === \" \" : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);\n}\n\nvar $3b117e43dc0ca95d$export$27c701ed9e449e99 = (0, $bx7SL$react).forwardRef(function (_ref4, ref) {\n  var children = _ref4.children,\n      props = _objectWithoutProperties(_ref4, _excluded3);\n\n  var newRef = (0, $bx7SL$useRef)();\n  ref = ref !== null && ref !== void 0 ? ref : newRef;\n\n  var _ref5 = (0, $f6c31cce2adf654f$export$45712eceda6fad21)(_objectSpread(_objectSpread({}, props), {}, {\n    ref: ref\n  })),\n      pressProps = _ref5.pressProps;\n\n  var child = (0, $bx7SL$react).Children.only(children);\n  return (0, $bx7SL$react).cloneElement(child, _objectSpread({\n    ref: ref\n  }, (0, $bx7SL$mergeProps)(child.props, pressProps)));\n});\nvar $f1ab8c75478c6f73$export$3351871ee4b288b8 = (0, $bx7SL$react).forwardRef(function (_ref6, ref) {\n  var children = _ref6.children,\n      props = _objectWithoutProperties(_ref6, _excluded4);\n\n  var isRegistered = (0, $bx7SL$useRef)(false);\n  var prevContext = (0, $bx7SL$useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));\n  var context = (0, $bx7SL$mergeProps)(prevContext || {}, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),\n    register: function register() {\n      isRegistered.current = true;\n      if (prevContext) prevContext.register();\n    }\n  }));\n  (0, $bx7SL$useSyncRef)(prevContext, ref);\n  (0, $bx7SL$useEffect)(function () {\n    if (!isRegistered.current) console.warn(\"A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.\");\n  }, []);\n  return (0, $bx7SL$react).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {\n    value: context\n  }, children);\n});\n\nvar $8a9cb279dc87e130$export$905e7fc544a71f36 = function () {\n  function $8a9cb279dc87e130$export$905e7fc544a71f36(type, nativeEvent) {\n    _classCallCheck(this, $8a9cb279dc87e130$export$905e7fc544a71f36);\n\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target;\n    this.currentTarget = nativeEvent.currentTarget;\n    this.relatedTarget = nativeEvent.relatedTarget;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  _createClass($8a9cb279dc87e130$export$905e7fc544a71f36, [{\n    key: \"isDefaultPrevented\",\n    value: function isDefaultPrevented() {\n      return this.nativeEvent.defaultPrevented;\n    }\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.defaultPrevented = true;\n      this.nativeEvent.preventDefault();\n    }\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      this.nativeEvent.stopPropagation();\n\n      this.isPropagationStopped = function () {\n        return true;\n      };\n    }\n  }, {\n    key: \"isPropagationStopped\",\n    value: function isPropagationStopped() {\n      return false;\n    }\n  }, {\n    key: \"persist\",\n    value: function persist() {}\n  }]);\n\n  return $8a9cb279dc87e130$export$905e7fc544a71f36;\n}();\n\nfunction $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {\n  var stateRef = (0, $bx7SL$useRef)({\n    isFocused: false,\n    onBlur: onBlur,\n    observer: null\n  });\n  stateRef.current.onBlur = onBlur;\n  (0, $bx7SL$useLayoutEffect)(function () {\n    var state = stateRef.current;\n    return function () {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n  return (0, $bx7SL$useCallback)(function (e) {\n    if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement) {\n      stateRef.current.isFocused = true;\n      var target = e.target;\n\n      var onBlurHandler = function onBlurHandler(e) {\n        var _stateRef_current, _stateRef_current_onBlur;\n\n        stateRef.current.isFocused = false;\n        if (target.disabled) (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $8a9cb279dc87e130$export$905e7fc544a71f36(\"blur\", e));\n\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener(\"focusout\", onBlurHandler, {\n        once: true\n      });\n      stateRef.current.observer = new MutationObserver(function () {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer.disconnect();\n          target.dispatchEvent(new FocusEvent(\"blur\"));\n          target.dispatchEvent(new FocusEvent(\"focusout\", {\n            bubbles: true\n          }));\n        }\n      });\n      stateRef.current.observer.observe(target, {\n        attributes: true,\n        attributeFilter: [\"disabled\"]\n      });\n    }\n  }, []);\n}\n\nfunction $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {\n  var isDisabled = props.isDisabled,\n      onFocusProp = props.onFocus,\n      onBlurProp = props.onBlur,\n      onFocusChange = props.onFocusChange;\n  var onBlur = (0, $bx7SL$useCallback)(function (e) {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) onBlurProp(e);\n      if (onFocusChange) onFocusChange(false);\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n  var onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);\n  var onFocus = (0, $bx7SL$useCallback)(function (e) {\n    if (e.target === e.currentTarget) {\n      if (onFocusProp) onFocusProp(e);\n      if (onFocusChange) onFocusChange(true);\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n  return {\n    focusProps: {\n      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : undefined,\n      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : undefined\n    }\n  };\n}\n\nvar $507fabe10e71c6fb$var$currentModality = null;\nvar $507fabe10e71c6fb$var$changeHandlers = new Set();\nvar $507fabe10e71c6fb$var$hasSetupGlobalListeners = false;\nvar $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\nvar $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\nvar $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e) {\n  for (var handler of $507fabe10e71c6fb$var$changeHandlers) handler(modality, e);\n}\n\nfunction $507fabe10e71c6fb$var$isValidKey(e) {\n  return !(e.metaKey || !(0, $bx7SL$isMac)() && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\n\nfunction $507fabe10e71c6fb$var$handleKeyboardEvent(e) {\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n\n  if ($507fabe10e71c6fb$var$isValidKey(e)) {\n    $507fabe10e71c6fb$var$currentModality = \"keyboard\";\n    $507fabe10e71c6fb$var$triggerChangeHandlers(\"keyboard\", e);\n  }\n}\n\nfunction $507fabe10e71c6fb$var$handlePointerEvent(e) {\n  $507fabe10e71c6fb$var$currentModality = \"pointer\";\n\n  if (e.type === \"mousedown\" || e.type === \"pointerdown\") {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    $507fabe10e71c6fb$var$triggerChangeHandlers(\"pointer\", e);\n  }\n}\n\nfunction $507fabe10e71c6fb$var$handleClickEvent(e) {\n  if ((0, $bx7SL$isVirtualClick)(e)) {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    $507fabe10e71c6fb$var$currentModality = \"virtual\";\n  }\n}\n\nfunction $507fabe10e71c6fb$var$handleFocusEvent(e) {\n  if (e.target === window || e.target === document) return;\n\n  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {\n    $507fabe10e71c6fb$var$currentModality = \"virtual\";\n    $507fabe10e71c6fb$var$triggerChangeHandlers(\"virtual\", e);\n  }\n\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\n}\n\nfunction $507fabe10e71c6fb$var$handleWindowBlur() {\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;\n}\n\nfunction $507fabe10e71c6fb$var$setupGlobalFocusEvents() {\n  if (typeof window === \"undefined\" || $507fabe10e71c6fb$var$hasSetupGlobalListeners) return;\n  var focus = HTMLElement.prototype.focus;\n\n  HTMLElement.prototype.focus = function () {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener(\"keydown\", $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n  document.addEventListener(\"keyup\", $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n  document.addEventListener(\"click\", $507fabe10e71c6fb$var$handleClickEvent, true);\n  window.addEventListener(\"focus\", $507fabe10e71c6fb$var$handleFocusEvent, true);\n  window.addEventListener(\"blur\", $507fabe10e71c6fb$var$handleWindowBlur, false);\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"pointermove\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"pointerup\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n  } else {\n    document.addEventListener(\"mousedown\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"mousemove\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"mouseup\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n  }\n\n  $507fabe10e71c6fb$var$hasSetupGlobalListeners = true;\n}\n\nif (typeof document !== \"undefined\") {\n  if (document.readyState !== \"loading\") $507fabe10e71c6fb$var$setupGlobalFocusEvents();else document.addEventListener(\"DOMContentLoaded\", $507fabe10e71c6fb$var$setupGlobalFocusEvents);\n}\n\nfunction $507fabe10e71c6fb$export$b9b3dfddab17db27() {\n  return $507fabe10e71c6fb$var$currentModality !== \"pointer\";\n}\n\nfunction $507fabe10e71c6fb$export$630ff653c5ada6a9() {\n  return $507fabe10e71c6fb$var$currentModality;\n}\n\nfunction $507fabe10e71c6fb$export$8397ddfc504fdb9a(modality) {\n  $507fabe10e71c6fb$var$currentModality = modality;\n  $507fabe10e71c6fb$var$triggerChangeHandlers(modality, null);\n}\n\nfunction $507fabe10e71c6fb$export$98e20ec92f614cfe() {\n  $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n\n  var _ref7 = (0, $bx7SL$useState)($507fabe10e71c6fb$var$currentModality),\n      _ref8 = _slicedToArray(_ref7, 2),\n      modality = _ref8[0],\n      setModality = _ref8[1];\n\n  (0, $bx7SL$useEffect)(function () {\n    var handler = function handler() {\n      setModality($507fabe10e71c6fb$var$currentModality);\n    };\n\n    $507fabe10e71c6fb$var$changeHandlers.add(handler);\n    return function () {\n      $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n    };\n  }, []);\n  return modality;\n}\n\nfunction $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e) {\n  return !(isTextInput && modality === \"keyboard\" && e instanceof KeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\nfunction $507fabe10e71c6fb$export$ffd9e5021c1fb2d6() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isTextInput = props.isTextInput,\n      autoFocus = props.autoFocus;\n\n  var _ref9 = (0, $bx7SL$useState)(autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27()),\n      _ref10 = _slicedToArray(_ref9, 2),\n      isFocusVisibleState = _ref10[0],\n      setFocusVisible = _ref10[1];\n\n  $507fabe10e71c6fb$export$ec71b4b83ac08ec3(function (isFocusVisible) {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {\n    isTextInput: isTextInput\n  });\n  return {\n    isFocusVisible: isFocusVisibleState\n  };\n}\n\nfunction $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {\n  $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n  (0, $bx7SL$useEffect)(function () {\n    var handler = function handler(modality, e) {\n      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(opts === null || opts === void 0 ? void 0 : opts.isTextInput, modality, e)) return;\n      fn($507fabe10e71c6fb$export$b9b3dfddab17db27());\n    };\n\n    $507fabe10e71c6fb$var$changeHandlers.add(handler);\n    return function () {\n      $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n    };\n  }, deps);\n}\n\nfunction $9ab94262bd0047c7$export$420e68273165f4ec(props) {\n  var isDisabled = props.isDisabled,\n      onBlurWithin = props.onBlurWithin,\n      onFocusWithin = props.onFocusWithin,\n      onFocusWithinChange = props.onFocusWithinChange;\n  var state = (0, $bx7SL$useRef)({\n    isFocusWithin: false\n  });\n  var onBlur = (0, $bx7SL$useCallback)(function (e) {\n    if (state.current.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {\n      state.current.isFocusWithin = false;\n      if (onBlurWithin) onBlurWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(false);\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n  var onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);\n  var onFocus = (0, $bx7SL$useCallback)(function (e) {\n    if (!state.current.isFocusWithin) {\n      if (onFocusWithin) onFocusWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(true);\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n  if (isDisabled) return {\n    focusWithinProps: {\n      onFocus: null,\n      onBlur: null\n    }\n  };\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\n\nvar $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\nvar $6179b936705e76d3$var$hoverCount = 0;\n\nfunction $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {\n  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;\n  setTimeout(function () {\n    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction $6179b936705e76d3$var$handleGlobalPointerEvent(e) {\n  if (e.pointerType === \"touch\") $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();\n}\n\nfunction $6179b936705e76d3$var$setupGlobalTouchEvents() {\n  if (typeof document === \"undefined\") return;\n  if (typeof PointerEvent !== \"undefined\") document.addEventListener(\"pointerup\", $6179b936705e76d3$var$handleGlobalPointerEvent);else document.addEventListener(\"touchend\", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n  $6179b936705e76d3$var$hoverCount++;\n  return function () {\n    $6179b936705e76d3$var$hoverCount--;\n    if ($6179b936705e76d3$var$hoverCount > 0) return;\n    if (typeof PointerEvent !== \"undefined\") document.removeEventListener(\"pointerup\", $6179b936705e76d3$var$handleGlobalPointerEvent);else document.removeEventListener(\"touchend\", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n  };\n}\n\nfunction $6179b936705e76d3$export$ae780daf29e6d456(props) {\n  var onHoverStart = props.onHoverStart,\n      onHoverChange = props.onHoverChange,\n      onHoverEnd = props.onHoverEnd,\n      isDisabled = props.isDisabled;\n\n  var _ref11 = (0, $bx7SL$useState)(false),\n      _ref12 = _slicedToArray(_ref11, 2),\n      isHovered = _ref12[0],\n      setHovered = _ref12[1];\n\n  var state = (0, $bx7SL$useRef)({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: \"\",\n    target: null\n  }).current;\n  (0, $bx7SL$useEffect)($6179b936705e76d3$var$setupGlobalTouchEvents, []);\n\n  var _ref13 = (0, $bx7SL$useMemo)(function () {\n    var triggerHoverStart = function triggerHoverStart(event, pointerType) {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === \"touch\" || state.isHovered || !event.currentTarget.contains(event.target)) return;\n      state.isHovered = true;\n      var target = event.currentTarget;\n      state.target = target;\n      if (onHoverStart) onHoverStart({\n        type: \"hoverstart\",\n        target: target,\n        pointerType: pointerType\n      });\n      if (onHoverChange) onHoverChange(true);\n      setHovered(true);\n    };\n\n    var triggerHoverEnd = function triggerHoverEnd(event, pointerType) {\n      state.pointerType = \"\";\n      state.target = null;\n      if (pointerType === \"touch\" || !state.isHovered) return;\n      state.isHovered = false;\n      var target = event.currentTarget;\n      if (onHoverEnd) onHoverEnd({\n        type: \"hoverend\",\n        target: target,\n        pointerType: pointerType\n      });\n      if (onHoverChange) onHoverChange(false);\n      setHovered(false);\n    };\n\n    var hoverProps = {};\n\n    if (typeof PointerEvent !== \"undefined\") {\n      hoverProps.onPointerEnter = function (e) {\n        if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e.pointerType === \"mouse\") return;\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = function (e) {\n        if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, e.pointerType);\n      };\n    } else {\n      hoverProps.onTouchStart = function () {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = function (e) {\n        if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e, \"mouse\");\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = function (e) {\n        if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, \"mouse\");\n      };\n    }\n\n    return {\n      hoverProps: hoverProps,\n      triggerHoverEnd: triggerHoverEnd\n    };\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]),\n      hoverProps = _ref13.hoverProps,\n      triggerHoverEnd = _ref13.triggerHoverEnd;\n\n  (0, $bx7SL$useEffect)(function () {\n    if (isDisabled) triggerHoverEnd({\n      currentTarget: state.target\n    }, state.pointerType);\n  }, [isDisabled]);\n  return {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  };\n}\n\nfunction $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {\n  var ref = props.ref,\n      onInteractOutside = props.onInteractOutside,\n      isDisabled = props.isDisabled,\n      onInteractOutsideStart = props.onInteractOutsideStart;\n  var stateRef = (0, $bx7SL$useRef)({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n    onInteractOutside: onInteractOutside,\n    onInteractOutsideStart: onInteractOutsideStart\n  });\n  var state = stateRef.current;\n  state.onInteractOutside = onInteractOutside;\n  state.onInteractOutsideStart = onInteractOutsideStart;\n  (0, $bx7SL$useEffect)(function () {\n    if (isDisabled) return;\n\n    var onPointerDown = function onPointerDown(e) {\n      if ($e0b6e0b68ec7f50f$var$isValidEvent(e, ref) && state.onInteractOutside) {\n        if (state.onInteractOutsideStart) state.onInteractOutsideStart(e);\n        state.isPointerDown = true;\n      }\n    };\n\n    if (typeof PointerEvent !== \"undefined\") {\n      var onPointerUp = function onPointerUp(e) {\n        if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) state.onInteractOutside(e);\n        state.isPointerDown = false;\n      };\n\n      document.addEventListener(\"pointerdown\", onPointerDown, true);\n      document.addEventListener(\"pointerup\", onPointerUp, true);\n      return function () {\n        document.removeEventListener(\"pointerdown\", onPointerDown, true);\n        document.removeEventListener(\"pointerup\", onPointerUp, true);\n      };\n    } else {\n      var onMouseUp = function onMouseUp(e) {\n        if (state.ignoreEmulatedMouseEvents) state.ignoreEmulatedMouseEvents = false;else if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) state.onInteractOutside(e);\n        state.isPointerDown = false;\n      };\n\n      var onTouchEnd = function onTouchEnd(e) {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.onInteractOutside && state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) state.onInteractOutside(e);\n        state.isPointerDown = false;\n      };\n\n      document.addEventListener(\"mousedown\", onPointerDown, true);\n      document.addEventListener(\"mouseup\", onMouseUp, true);\n      document.addEventListener(\"touchstart\", onPointerDown, true);\n      document.addEventListener(\"touchend\", onTouchEnd, true);\n      return function () {\n        document.removeEventListener(\"mousedown\", onPointerDown, true);\n        document.removeEventListener(\"mouseup\", onMouseUp, true);\n        document.removeEventListener(\"touchstart\", onPointerDown, true);\n        document.removeEventListener(\"touchend\", onTouchEnd, true);\n      };\n    }\n  }, [ref, state, isDisabled]);\n}\n\nfunction $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {\n  if (event.button > 0) return false;\n\n  if (event.target) {\n    var ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) return false;\n    if (event.target.closest(\"[data-react-aria-top-layer]\")) return false;\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n\nfunction $93925083ecbb358c$export$48d1ea6320830260(handler) {\n  if (!handler) return;\n  var shouldStopPropagation = true;\n  return function (e) {\n    var event = _objectSpread(_objectSpread({}, e), {}, {\n      preventDefault: function preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented: function isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation: function stopPropagation() {\n        console.error(\"stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.\");\n      },\n      continuePropagation: function continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    });\n\n    handler(event);\n    if (shouldStopPropagation) e.stopPropagation();\n  };\n}\n\nfunction $46d819fcbaf35654$export$8f71654801c2f7cd(props) {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyDown),\n      onKeyUp: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyUp)\n    }\n  };\n}\n\nfunction $e8a7022cf87cba2a$export$36da96379f79f245(props) {\n  var onMoveStart = props.onMoveStart,\n      onMove = props.onMove,\n      onMoveEnd = props.onMoveEnd;\n  var state = (0, $bx7SL$useRef)({\n    didMove: false,\n    lastPosition: null,\n    id: null\n  });\n\n  var _ref14 = (0, $bx7SL$useGlobalListeners)(),\n      addGlobalListener = _ref14.addGlobalListener,\n      removeGlobalListener = _ref14.removeGlobalListener;\n\n  var moveProps = (0, $bx7SL$useMemo)(function () {\n    var moveProps = {};\n\n    var start = function start() {\n      (0, $14c0b72509d70225$export$16a4697467175487)();\n      state.current.didMove = false;\n    };\n\n    var move = function move(originalEvent, pointerType, deltaX, deltaY) {\n      if (deltaX === 0 && deltaY === 0) return;\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart({\n          type: \"movestart\",\n          pointerType: pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      onMove({\n        type: \"move\",\n        pointerType: pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n\n    var end = function end(originalEvent, pointerType) {\n      (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)();\n      if (state.current.didMove) onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd({\n        type: \"moveend\",\n        pointerType: pointerType,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n\n    if (typeof PointerEvent === \"undefined\") {\n      var onMouseMove = function onMouseMove(e) {\n        if (e.button === 0) {\n          move(e, \"mouse\", e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button === 0) {\n          end(e, \"mouse\");\n          removeGlobalListener(window, \"mousemove\", onMouseMove, false);\n          removeGlobalListener(window, \"mouseup\", onMouseUp, false);\n        }\n      };\n\n      moveProps.onMouseDown = function (e) {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          addGlobalListener(window, \"mousemove\", onMouseMove, false);\n          addGlobalListener(window, \"mouseup\", onMouseUp, false);\n        }\n      };\n\n      var onTouchMove = function onTouchMove(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref15) {\n          var identifier = _ref15.identifier;\n          return identifier === state.current.id;\n        });\n\n        if (touch >= 0) {\n          var _e$changedTouches$tou = e.changedTouches[touch],\n              pageX = _e$changedTouches$tou.pageX,\n              pageY = _e$changedTouches$tou.pageY;\n          move(e, \"touch\", pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: pageX,\n            pageY: pageY\n          };\n        }\n      };\n\n      var onTouchEnd = function onTouchEnd(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref16) {\n          var identifier = _ref16.identifier;\n          return identifier === state.current.id;\n        });\n\n        if (touch >= 0) {\n          end(e, \"touch\");\n          state.current.id = null;\n          removeGlobalListener(window, \"touchmove\", onTouchMove);\n          removeGlobalListener(window, \"touchend\", onTouchEnd);\n          removeGlobalListener(window, \"touchcancel\", onTouchEnd);\n        }\n      };\n\n      moveProps.onTouchStart = function (e) {\n        if (e.changedTouches.length === 0 || state.current.id != null) return;\n        var _e$changedTouches$ = e.changedTouches[0],\n            pageX = _e$changedTouches$.pageX,\n            pageY = _e$changedTouches$.pageY,\n            identifier = _e$changedTouches$.identifier;\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {\n          pageX: pageX,\n          pageY: pageY\n        };\n        state.current.id = identifier;\n        addGlobalListener(window, \"touchmove\", onTouchMove, false);\n        addGlobalListener(window, \"touchend\", onTouchEnd, false);\n        addGlobalListener(window, \"touchcancel\", onTouchEnd, false);\n      };\n    } else {\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId === state.current.id) {\n          var pointerType = e.pointerType || \"mouse\";\n          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.current.id) {\n          var pointerType = e.pointerType || \"mouse\";\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, \"pointermove\", onPointerMove, false);\n          removeGlobalListener(window, \"pointerup\", onPointerUp, false);\n          removeGlobalListener(window, \"pointercancel\", onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = function (e) {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          state.current.id = e.pointerId;\n          addGlobalListener(window, \"pointermove\", onPointerMove, false);\n          addGlobalListener(window, \"pointerup\", onPointerUp, false);\n          addGlobalListener(window, \"pointercancel\", onPointerUp, false);\n        }\n      };\n    }\n\n    var triggerKeyboardMove = function triggerKeyboardMove(e, deltaX, deltaY) {\n      start();\n      move(e, \"keyboard\", deltaX, deltaY);\n      end(e, \"keyboard\");\n    };\n\n    moveProps.onKeyDown = function (e) {\n      switch (e.key) {\n        case \"Left\":\n        case \"ArrowLeft\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n\n        case \"Right\":\n        case \"ArrowRight\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n\n        case \"Up\":\n        case \"ArrowUp\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n\n        case \"Down\":\n        case \"ArrowDown\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n  return {\n    moveProps: moveProps\n  };\n}\n\nfunction $7d0a636d7a4dcefd$export$2123ff2b87c81ca(props, ref) {\n  var onScroll = props.onScroll,\n      isDisabled = props.isDisabled;\n  var onScrollHandler = (0, $bx7SL$useCallback)(function (e) {\n    if (e.ctrlKey) return;\n    e.preventDefault();\n    e.stopPropagation();\n    if (onScroll) onScroll({\n      deltaX: e.deltaX,\n      deltaY: e.deltaY\n    });\n  }, [onScroll]);\n  (0, $bx7SL$useEvent)(ref, \"wheel\", isDisabled ? null : onScrollHandler);\n}\n\nvar $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;\n\nfunction $8a26561d2877236e$export$c24ed0104d07eab9(props) {\n  var isDisabled = props.isDisabled,\n      onLongPressStart = props.onLongPressStart,\n      onLongPressEnd = props.onLongPressEnd,\n      onLongPress = props.onLongPress,\n      _props$threshold = props.threshold,\n      threshold = _props$threshold === void 0 ? $8a26561d2877236e$var$DEFAULT_THRESHOLD : _props$threshold,\n      accessibilityDescription = props.accessibilityDescription;\n  var timeRef = (0, $bx7SL$useRef)(null);\n\n  var _ref17 = (0, $bx7SL$useGlobalListeners)(),\n      addGlobalListener = _ref17.addGlobalListener,\n      removeGlobalListener = _ref17.removeGlobalListener;\n\n  var _ref18 = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({\n    isDisabled: isDisabled,\n    onPressStart: function onPressStart(e) {\n      if (e.pointerType === \"mouse\" || e.pointerType === \"touch\") {\n        if (onLongPressStart) onLongPressStart(_objectSpread(_objectSpread({}, e), {}, {\n          type: \"longpressstart\"\n        }));\n        timeRef.current = setTimeout(function () {\n          e.target.dispatchEvent(new PointerEvent(\"pointercancel\", {\n            bubbles: true\n          }));\n          if (onLongPress) onLongPress(_objectSpread(_objectSpread({}, e), {}, {\n            type: \"longpress\"\n          }));\n          timeRef.current = null;\n        }, threshold);\n\n        if (e.pointerType === \"touch\") {\n          var onContextMenu = function onContextMenu(e) {\n            e.preventDefault();\n          };\n\n          addGlobalListener(e.target, \"contextmenu\", onContextMenu, {\n            once: true\n          });\n          addGlobalListener(window, \"pointerup\", function () {\n            setTimeout(function () {\n              removeGlobalListener(e.target, \"contextmenu\", onContextMenu);\n            }, 30);\n          }, {\n            once: true\n          });\n        }\n      }\n    },\n    onPressEnd: function onPressEnd(e) {\n      if (timeRef.current) clearTimeout(timeRef.current);\n      if (onLongPressEnd && (e.pointerType === \"mouse\" || e.pointerType === \"touch\")) onLongPressEnd(_objectSpread(_objectSpread({}, e), {}, {\n        type: \"longpressend\"\n      }));\n    }\n  }),\n      pressProps = _ref18.pressProps;\n\n  var descriptionProps = (0, $bx7SL$useDescription)(onLongPress && !isDisabled ? accessibilityDescription : null);\n  return {\n    longPressProps: (0, $bx7SL$mergeProps)(pressProps, descriptionProps)\n  };\n}\n\nexport { $3b117e43dc0ca95d$export$27c701ed9e449e99 as Pressable, $f1ab8c75478c6f73$export$3351871ee4b288b8 as PressResponder, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6 as useFocus, $507fabe10e71c6fb$export$b9b3dfddab17db27 as isFocusVisible, $507fabe10e71c6fb$export$630ff653c5ada6a9 as getInteractionModality, $507fabe10e71c6fb$export$8397ddfc504fdb9a as setInteractionModality, $507fabe10e71c6fb$export$98e20ec92f614cfe as useInteractionModality, $507fabe10e71c6fb$export$ffd9e5021c1fb2d6 as useFocusVisible, $507fabe10e71c6fb$export$ec71b4b83ac08ec3 as useFocusVisibleListener, $9ab94262bd0047c7$export$420e68273165f4ec as useFocusWithin, $6179b936705e76d3$export$ae780daf29e6d456 as useHover, $e0b6e0b68ec7f50f$export$872b660ac5a1ff98 as useInteractOutside, $46d819fcbaf35654$export$8f71654801c2f7cd as useKeyboard, $e8a7022cf87cba2a$export$36da96379f79f245 as useMove, $f6c31cce2adf654f$export$45712eceda6fad21 as usePress, $7d0a636d7a4dcefd$export$2123ff2b87c81ca as useScrollWheel, $8a26561d2877236e$export$c24ed0104d07eab9 as useLongPress };","map":{"version":3,"sources":["packages/@react-aria/interactions/src/Pressable.tsx","packages/@react-aria/interactions/src/usePress.ts","packages/@react-aria/interactions/src/textSelection.ts","packages/@react-aria/interactions/src/context.ts","packages/@react-aria/interactions/src/PressResponder.tsx","packages/@react-aria/interactions/src/useFocus.ts","packages/@react-aria/interactions/src/utils.ts","packages/@react-aria/interactions/src/useFocusVisible.ts","packages/@react-aria/interactions/src/useFocusWithin.ts","packages/@react-aria/interactions/src/useHover.ts","packages/@react-aria/interactions/src/useInteractOutside.ts","packages/@react-aria/interactions/src/useKeyboard.ts","packages/@react-aria/interactions/src/createEventHandler.ts","packages/@react-aria/interactions/src/useMove.ts","packages/@react-aria/interactions/src/useScrollWheel.ts","packages/@react-aria/interactions/src/useLongPress.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<DOMAttributes, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<Element>) => {\n  let newRef = useRef();\n  ref = ref ?? newRef;\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {DOMAttributes, FocusableElement, PointerType, PressEvents} from '@react-types/shared';\nimport {focusWithoutScrolling, isVirtualClick, isVirtualPointerEvent, mergeProps, useGlobalListeners, useSyncRef} from '@react-aria/utils';\nimport {PressResponderContext} from './context';\nimport {RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean,\n  /**\n   * Whether press events should be canceled when the pointer leaves the target while pressed.\n   * By default, this is `false`, which means if the pointer returns back over the target while\n   * still pressed, onPressStart will be fired again. If set to `true`, the press is canceled\n   * when the pointer leaves the target and onPressStart will not be fired if the pointer returns.\n   */\n  shouldCancelOnPointerExit?: boolean,\n  /** Whether text selection should be enabled on the pressable element. */\n  allowTextSelectionOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<Element>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  didFirePressStart: boolean,\n  activePointerId: any,\n  target: FocusableElement | null,\n  isOverTarget: boolean,\n  pointerType: PointerType,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: DOMAttributes\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n  useSyncRef(context, props.ref);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    shouldCancelOnPointerExit,\n    allowTextSelectionOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb\n    ...domProps\n  } = usePressResponderContext(props);\n  let propsRef = useRef<PressHookProps>(null);\n  propsRef.current = {onPress, onPressChange, onPressStart, onPressEnd, onPressUp, isDisabled, shouldCancelOnPointerExit};\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let triggerPressStart = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressStart, onPressChange, isDisabled} = propsRef.current;\n      if (isDisabled || state.didFirePressStart) {\n        return;\n      }\n\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(true);\n      }\n\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n\n    let triggerPressEnd = (originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n      let {onPressEnd, onPressChange, onPress, isDisabled} = propsRef.current;\n      if (!state.didFirePressStart) {\n        return;\n      }\n\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(false);\n      }\n\n      setPressed(false);\n\n      if (onPress && wasPressed && !isDisabled) {\n        onPress({\n          type: 'press',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let triggerPressUp = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressUp, isDisabled} = propsRef.current;\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let cancel = (e: EventBase) => {\n      if (state.isPressed) {\n        if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n      }\n    };\n\n    let pressProps: DOMAttributes = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target as Element)) {\n          if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n            e.preventDefault();\n          }\n          e.stopPropagation();\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        } else if (e.key === 'Enter' && isHTMLAnchorLink(e.currentTarget)) {\n          // If the target is a link, we won't have handled this above because we want the default\n          // browser behavior to open the link when pressing Enter. But we still need to prevent\n          // default so that elements above do not also handle it (e.g. table row).\n          e.stopPropagation();\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target as Element)) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === 'virtual' || isVirtualClick(e.nativeEvent))) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e, state.target)) {\n        if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n\n        state.isPressed = false;\n        let target = e.target as Element;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', state.target.contains(target));\n        removeAllGlobalListeners();\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (state.target instanceof HTMLElement && state.target.contains(target) && (isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link')) {\n          state.target.click();\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n        // Ignore and let the onClick handler take care of it instead.\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        // https://bugs.webkit.org/show_bug.cgi?id=223202\n        if (isVirtualPointerEvent(e.nativeEvent)) {\n          state.pointerType = 'virtual';\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget as Element)) {\n          e.preventDefault();\n        }\n\n        state.pointerType = e.pointerType;\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          if (!allowTextSelectionOnPress) {\n            disableTextSelection(state.target);\n          }\n\n          triggerPressStart(e, state.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if (shouldPreventDefault(e.currentTarget as Element)) {\n            e.preventDefault();\n          }\n\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n        if (!e.currentTarget.contains(e.target as Element) || state.pointerType === 'virtual') {\n          return;\n        }\n\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType || e.pointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) {\n            restoreTextSelection(state.target);\n          }\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget)) {\n          e.preventDefault();\n        }\n\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        if (!allowTextSelectionOnPress) {\n          disableTextSelection(state.target);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, state.pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as Element).contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false,\n            altKey: false\n          });\n        }\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (!allowTextSelectionOnPress) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        restoreTextSelection(ref.current.target);\n      }\n    };\n  }, [allowTextSelectionOnPress]);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: Element): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent, currentTarget: Element): boolean {\n  const {key, code} = event;\n  const element = currentTarget as HTMLElement;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') &&\n    !((element instanceof HTMLInputElement && !isValidInputKey(element, key)) ||\n      element instanceof HTMLTextAreaElement ||\n      element.isContentEditable) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: FocusableElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\n\ninterface Rect {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number,\n  width?: number,\n  height?: number,\n  radiusX?: number,\n  radiusY?: number\n}\n\nfunction getPointClientRect(point: EventPoint): Rect {\n  let offsetX = (point.width / 2) || point.radiusX || 0;\n  let offsetY = (point.height / 2) || point.radiusY || 0;\n\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction areRectanglesOverlapping(a: Rect, b: Rect) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOverTarget(point: EventPoint, target: Element) {\n  let rect = target.getBoundingClientRect();\n  let pointRect = getPointClientRect(point);\n  return areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction shouldPreventDefault(target: Element) {\n  // We cannot prevent default if the target is a draggable element.\n  return !(target instanceof HTMLElement) || !target.draggable;\n}\n\nfunction shouldPreventDefaultKeyboard(target: Element, key: string) {\n  if (target instanceof HTMLInputElement) {\n    return !isValidInputKey(target, key);\n  }\n\n  if (target instanceof HTMLButtonElement) {\n    return target.type !== 'submit';\n  }\n\n  return true;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\nfunction isValidInputKey(target: HTMLInputElement, key: string) {\n  // Only space should toggle checkboxes and radios, not enter.\n  return target.type === 'checkbox' || target.type === 'radio'\n    ? key === ' '\n    : nonTextInputTypes.has(target.type);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isIOS, runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\n\n// For non-iOS devices, we apply user-select: none to the pressed element instead to avoid possible\n// performance issues that arise from applying and removing user-select: none to the entire page\n// (see https://github.com/adobe/react-spectrum/issues/1609).\ntype State = 'default' | 'disabled' | 'restoring';\n\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nlet state: State = 'default';\nlet savedUserSelect = '';\nlet modifiedElementMap = new WeakMap<Element, string>();\n\nexport function disableTextSelection(target?: Element) {\n  if (isIOS()) {\n    if (state === 'default') {\n      savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = 'none';\n    }\n\n    state = 'disabled';\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, store the target's original user-select and change to user-select: none\n    // Ignore state since it doesn't apply for non iOS\n    modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = 'none';\n  }\n}\n\nexport function restoreTextSelection(target?: Element) {\n  if (isIOS()) {\n    // If the state is already default, there's nothing to do.\n    // If it is restoring, then there's no need to queue a second restore.\n    if (state !== 'disabled') {\n      return;\n    }\n\n    state = 'restoring';\n\n    // There appears to be a delay on iOS where selection still might occur\n    // after pointer up, so wait a bit before removing user-select.\n    setTimeout(() => {\n      // Wait for any CSS transitions to complete so we don't recompute style\n      // for the whole page in the middle of the animation and cause jank.\n      runAfterTransition(() => {\n        // Avoid race conditions\n        if (state === 'restoring') {\n          if (document.documentElement.style.webkitUserSelect === 'none') {\n            document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n          }\n\n          savedUserSelect = '';\n          state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    if (target && modifiedElementMap.has(target)) {\n      let targetOldUserSelect = modifiedElementMap.get(target);\n\n      if (target.style.userSelect === 'none') {\n        target.style.userSelect = targetOldUserSelect;\n      }\n\n      if (target.getAttribute('style') === '') {\n        target.removeAttribute('style');\n      }\n      modifiedElementMap.delete(target);\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<FocusableElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<FocusableElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref: ref || prevContext?.ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, FocusEvents} from '@react-types/shared';\nimport {FocusEvent, useCallback} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusProps extends FocusEvents {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusResult {\n  /** Props to spread onto the target element. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus(props: FocusProps): FocusResult {\n  let {\n    isDisabled,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onFocusChange\n  } = props;\n\n  const onBlur: FocusProps['onBlur'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) {\n        onBlurProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(false);\n      }\n\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n\n\n  const onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n\n  const onFocus: FocusProps['onFocus'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onFocusProp) {\n        onFocusProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(true);\n      }\n\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n\n  return {\n    focusProps: {\n      onFocus: (!isDisabled && (onFocusProp || onFocusChange || onBlurProp)) ? onFocus : undefined,\n      onBlur: (!isDisabled && (onBlurProp || onFocusChange)) ? onBlur : undefined\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent as ReactFocusEvent, useCallback, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\nexport class SyntheticFocusEvent implements ReactFocusEvent {\n  nativeEvent: FocusEvent;\n  target: Element;\n  currentTarget: Element;\n  relatedTarget: Element;\n  bubbles: boolean;\n  cancelable: boolean;\n  defaultPrevented: boolean;\n  eventPhase: number;\n  isTrusted: boolean;\n  timeStamp: number;\n  type: string;\n\n  constructor(type: string, nativeEvent: FocusEvent) {\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target as Element;\n    this.currentTarget = nativeEvent.currentTarget as Element;\n    this.relatedTarget = nativeEvent.relatedTarget as Element;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  isDefaultPrevented(): boolean {\n    return this.nativeEvent.defaultPrevented;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n    this.nativeEvent.preventDefault();\n  }\n\n  stopPropagation(): void {\n    this.nativeEvent.stopPropagation();\n    this.isPropagationStopped = () => true;\n  }\n\n  isPropagationStopped(): boolean {\n    return false;\n  }\n\n  persist() {}\n}\n\nexport function useSyntheticBlurEvent(onBlur: (e: ReactFocusEvent) => void) {\n  let stateRef = useRef({\n    isFocused: false,\n    onBlur,\n    observer: null as MutationObserver\n  });\n  stateRef.current.onBlur = onBlur;\n\n  // Clean up MutationObserver on unmount. See below.\n  // eslint-disable-next-line arrow-body-style\n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler = (e: FocusEvent) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          stateRef.current.onBlur?.(new SyntheticFocusEvent('blur', e));\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer.disconnect();\n          target.dispatchEvent(new FocusEvent('blur'));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, []);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac, isVirtualClick} from '@react-aria/utils';\nimport {useEffect, useState} from 'react';\n\nexport type Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\nexport type FocusVisibleHandler = (isFocusVisible: boolean) => void;\nexport interface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalFocusEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalFocusEvents);\n  }\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return modality;\n}\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(opts?.isTextInput, modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {FocusEvent, useCallback, useRef} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\nexport interface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    if (!state.current.isFocusWithin) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        onFocus: null,\n        onBlur: null\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {HoverEvents} from '@react-types/shared';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: DOMAttributes,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.currentTarget;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.currentTarget;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: DOMAttributes = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({currentTarget: state.target}, state.pointerType);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\n\nexport interface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void,\n  onInteractOutsideStart?: (e: SyntheticEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled, onInteractOutsideStart} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n    onInteractOutside,\n    onInteractOutsideStart\n  });\n  let state = stateRef.current;\n  state.onInteractOutside = onInteractOutside;\n  state.onInteractOutsideStart = onInteractOutsideStart;\n\n  useEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    let onPointerDown = (e) => {\n      if (isValidEvent(e, ref) && state.onInteractOutside) {\n        if (state.onInteractOutsideStart) {\n          state.onInteractOutsideStart(e);\n        }\n        state.isPointerDown = true;\n      }\n    };\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.onInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      // changing these to capture phase fixed combobox\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.onInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      let onTouchEnd = (e) => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.onInteractOutside && state.isPointerDown && isValidEvent(e, ref)) {\n          state.onInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n\n      return () => {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, state, isDisabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  if (event.target) {\n    // if the event target is no longer in the document, ignore\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n\n    // If the target is within a top layer element (e.g. toasts), ignore.\n    if (event.target.closest('[data-react-aria-top-layer]')) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {DOMAttributes, KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: DOMAttributes\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {DOMAttributes, MoveEvents, PointerType} from '@react-types/shared';\nimport React, {useMemo, useRef} from 'react';\nimport {useGlobalListeners} from '@react-aria/utils';\n\nexport interface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: DOMAttributes\n}\n\ninterface EventBase {\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: DOMAttributes = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (originalEvent: EventBase, pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    let end = (originalEvent: EventBase, pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move(e, 'mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end(e, 'mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move(e, 'touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end(e, 'touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (e: EventBase, deltaX: number, deltaY: number) => {\n      start();\n      move(e, 'keyboard', deltaX, deltaY);\n      end(e, 'keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n\n  return {moveProps};\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ScrollEvents} from '@react-types/shared';\nimport {useEvent} from '@react-aria/utils';\n\nexport interface ScrollWheelProps extends ScrollEvents {\n  /** Whether the scroll listener should be disabled. */\n  isDisabled?: boolean\n}\n\n// scroll wheel needs to be added not passively so it's cancelable, small helper hook to remember that\nexport function useScrollWheel(props: ScrollWheelProps, ref: RefObject<HTMLElement>): void {\n  let {onScroll, isDisabled} = props;\n  let onScrollHandler = useCallback((e) => {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) {\n      return;\n    }\n\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (onScroll) {\n      onScroll({deltaX: e.deltaX, deltaY: e.deltaY});\n    }\n  }, [onScroll]);\n\n  useEvent(ref, 'wheel', isDisabled ? null : onScrollHandler);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, LongPressEvent} from '@react-types/shared';\nimport {mergeProps, useDescription, useGlobalListeners} from '@react-aria/utils';\nimport {usePress} from './usePress';\nimport {useRef} from 'react';\n\nexport interface LongPressProps {\n  /** Whether long press events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when a long press interaction starts. */\n  onLongPressStart?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when a long press interaction ends, either\n   * over the target or when the pointer leaves the target.\n   */\n  onLongPressEnd?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when the threshold time is met while\n   * the press is over the target.\n   */\n  onLongPress?: (e: LongPressEvent) => void,\n  /**\n   * The amount of time in milliseconds to wait before triggering a long press.\n   * @default 500ms\n   */\n  threshold?: number,\n  /**\n   * A description for assistive techology users indicating that a long press\n   * action is available, e.g. \"Long press to open menu\".\n   */\n  accessibilityDescription?: string\n}\n\nexport interface LongPressResult {\n  /** Props to spread on the target element. */\n  longPressProps: DOMAttributes\n}\n\nconst DEFAULT_THRESHOLD = 500;\n\n/**\n * Handles long press interactions across mouse and touch devices. Supports a customizable time threshold,\n * accessibility description, and normalizes behavior across browsers and devices.\n */\nexport function useLongPress(props: LongPressProps): LongPressResult {\n  let {\n    isDisabled,\n    onLongPressStart,\n    onLongPressEnd,\n    onLongPress,\n    threshold = DEFAULT_THRESHOLD,\n    accessibilityDescription\n  } = props;\n\n  const timeRef = useRef(null);\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let {pressProps} = usePress({\n    isDisabled,\n    onPressStart(e) {\n      if (e.pointerType === 'mouse' || e.pointerType === 'touch') {\n        if (onLongPressStart) {\n          onLongPressStart({\n            ...e,\n            type: 'longpressstart'\n          });\n        }\n\n        timeRef.current = setTimeout(() => {\n          // Prevent other usePress handlers from also handling this event.\n          e.target.dispatchEvent(new PointerEvent('pointercancel', {bubbles: true}));\n          if (onLongPress) {\n            onLongPress({\n              ...e,\n              type: 'longpress'\n            });\n          }\n          timeRef.current = null;\n        }, threshold);\n\n        // Prevent context menu, which may be opened on long press on touch devices\n        if (e.pointerType === 'touch') {\n          let onContextMenu = e => {\n            e.preventDefault();\n          };\n\n          addGlobalListener(e.target, 'contextmenu', onContextMenu, {once: true});\n          addGlobalListener(window, 'pointerup', () => {\n            // If no contextmenu event is fired quickly after pointerup, remove the handler\n            // so future context menu events outside a long press are not prevented.\n            setTimeout(() => {\n              removeGlobalListener(e.target, 'contextmenu', onContextMenu);\n            }, 30);\n          }, {once: true});\n        }\n      }\n    },\n    onPressEnd(e) {\n      if (timeRef.current) {\n        clearTimeout(timeRef.current);\n      }\n\n      if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) {\n        onLongPressEnd({\n          ...e,\n          type: 'longpressend'\n        });\n      }\n    }\n  });\n\n  let descriptionProps = useDescription(onLongPress && !isDisabled ? accessibilityDescription : null);\n\n  return {\n    longPressProps: mergeProps(pressProps, descriptionProps)\n  };\n}\n"]},"metadata":{},"sourceType":"module"}