{"ast":null,"code":"import { getAssetByID } from 'react-native/Libraries/Image/AssetRegistry';\nimport AssetSourceResolver from \"./AssetSourceResolver\";\n\nvar _customSourceTransformer;\n\nexport function setCustomSourceTransformer(transformer) {\n  _customSourceTransformer = transformer;\n}\nexport default function resolveAssetSource(source) {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  var asset = getAssetByID(source);\n\n  if (!asset) {\n    return undefined;\n  }\n\n  var resolver = new AssetSourceResolver(location.origin, null, asset);\n\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n\n  return resolver.defaultAsset();\n}\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get: function get() {\n    return setCustomSourceTransformer;\n  }\n});\nvar pickScale = AssetSourceResolver.pickScale;\nexport { pickScale };","map":{"version":3,"sources":["../src/resolveAssetSource.web.ts"],"names":[],"mappings":"AAAA,SAAS,YAAT,QAA6B,4CAA7B;AAEA,OAAO,mBAAP;;AAEA,IAAI,wBAAJ;;AAEA,OAAM,SAAU,0BAAV,CACJ,WADI,EAC+D;AAEnE,EAAA,wBAAwB,GAAG,WAA3B;AACD;AAMD,eAAc,SAAU,kBAAV,CAA6B,MAA7B,EAAwC;AACpD,MAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAO,MAAP;AACD;;AAED,MAAM,KAAK,GAAG,YAAY,CAAC,MAAD,CAA1B;;AACA,MAAI,CAAC,KAAL,EAAY;AACV,WAAO,SAAP;AACD;;AAED,MAAM,QAAQ,GAAG,IAAI,mBAAJ,CAAwB,QAAQ,CAAC,MAAjC,EAAyC,IAAzC,EAA+C,KAA/C,CAAjB;;AACA,MAAI,wBAAJ,EAA8B;AAC5B,WAAO,wBAAwB,CAAC,QAAD,CAA/B;AACD;;AACD,SAAO,QAAQ,CAAC,YAAT,EAAP;AACD;AAED,MAAM,CAAC,cAAP,CAAsB,kBAAtB,EAA0C,4BAA1C,EAAwE;AACtE,EAAA,GADsE,iBACnE;AACD,WAAO,0BAAP;AACD;AAHqE,CAAxE;AAMO,IAAQ,SAAR,GAAsB,mBAAtB,CAAQ,SAAR","sourcesContent":["import { getAssetByID } from 'react-native/Libraries/Image/AssetRegistry';\n\nimport AssetSourceResolver, { ResolvedAssetSource } from './AssetSourceResolver';\n\nlet _customSourceTransformer;\n\nexport function setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource\n): void {\n  _customSourceTransformer = transformer;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nexport default function resolveAssetSource(source: any): ResolvedAssetSource | undefined {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = getAssetByID(source);\n  if (!asset) {\n    return undefined;\n  }\n\n  const resolver = new AssetSourceResolver(location.origin, null, asset);\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get() {\n    return setCustomSourceTransformer;\n  },\n});\n\nexport const { pickScale } = AssetSourceResolver;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}