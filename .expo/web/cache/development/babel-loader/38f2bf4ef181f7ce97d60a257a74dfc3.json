{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport isArrayEqual from \"./isArrayEqual\";\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationRouteContext from \"./NavigationRouteContext\";\nexport default function useOnGetState(_ref) {\n  var getState = _ref.getState,\n      getStateListeners = _ref.getStateListeners;\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      addKeyedListener = _React$useContext.addKeyedListener;\n\n  var route = React.useContext(NavigationRouteContext);\n  var key = route ? route.key : 'root';\n  var getRehydratedState = React.useCallback(function () {\n    var state = getState();\n    var routes = state.routes.map(function (route) {\n      var _getStateListeners$ro;\n\n      var childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);\n\n      if (route.state === childState) {\n        return route;\n      }\n\n      return _objectSpread(_objectSpread({}, route), {}, {\n        state: childState\n      });\n    });\n\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      routes: routes\n    });\n  }, [getState, getStateListeners]);\n  React.useEffect(function () {\n    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}","map":{"version":3,"sources":["useOnGetState.tsx"],"names":["React","isArrayEqual","NavigationBuilderContext","NavigationRouteContext","useOnGetState","getState","getStateListeners","addKeyedListener","useContext","route","key","getRehydratedState","useCallback","state","routes","map","childState","useEffect"],"mappings":";;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,YAAP;AACA,OAAOC,wBAAP;AAGA,OAAOC,sBAAP;AAOA,eAAe,SAASC,aAAT,CAAsB,IAAtB,EAGH;AAH0B,MACpCC,QADoC,GAG5B,IAH4B,CACpCA,QADoC;AAAA,MAEpCC,iBAFoC,GAG5B,IAH4B,CAEpCA,iBAFoC;;AAIpC,0BAA6BN,KAAK,CAACQ,UAANR,CAAiBE,wBAAjBF,CAA7B;AAAA,MAAQO,gBAAR,qBAAQA,gBAAR;;AACA,MAAME,KAAK,GAAGT,KAAK,CAACQ,UAANR,CAAiBG,sBAAjBH,CAAd;AACA,MAAMU,GAAG,GAAGD,KAAK,GAAGA,KAAK,CAACC,GAAT,GAAe,MAAhC;AAEA,MAAMC,kBAAkB,GAAGX,KAAK,CAACY,WAANZ,CAAkB,YAAM;AACjD,QAAMa,KAAK,GAAGR,QAAQ,EAAtB;AAGA,QAAMS,MAAM,GAAGD,KAAK,CAACC,MAAND,CAAaE,GAAbF,CAAkBJ,UAAAA,KAAK,EAAK;AAAA,UAAA,qBAAA;;AACzC,UAAMO,UAAU,GAAA,CAAA,qBAAA,GAAGV,iBAAiB,CAACG,KAAK,CAACC,GAAP,CAApB,MAA+B,IAA/B,IAA+B,qBAAA,KAAA,KAAA,CAA/B,GAA+B,KAAA,CAA/B,GAAGJ,qBAAAA,CAAAA,IAAAA,CAAAA,iBAAAA,CAAnB;;AAEA,UAAIG,KAAK,CAACI,KAANJ,KAAgBO,UAApB,EAAgC;AAC9B,eAAOP,KAAP;AACF;;AAEA,6CAAYA,KAAZ;AAAmBI,QAAAA,KAAK,EAAEG;AAA1B;AACD,KARcH,CAAf;;AAUA,QAAIZ,YAAY,CAACY,KAAK,CAACC,MAAP,EAAeA,MAAf,CAAhB,EAAwC;AACtC,aAAOD,KAAP;AACF;;AAEA,2CAAYA,KAAZ;AAAmBC,MAAAA,MAAAA,EAAAA;AAAnB;AACD,GAnB0Bd,EAmBxB,CAACK,QAAD,EAAWC,iBAAX,CAnBwBN,CAA3B;AAqBAA,EAAAA,KAAK,CAACiB,SAANjB,CAAgB,YAAM;AACpB,WAAOO,gBAAgB,KAAA,IAAhBA,IAAAA,gBAAgB,KAAA,KAAA,CAAhBA,GAAgB,KAAA,CAAhBA,GAAAA,gBAAgB,CAAG,UAAH,EAAeG,GAAf,EAAoBC,kBAApB,CAAvB;AACD,GAFDX,EAEG,CAACO,gBAAD,EAAmBI,kBAAnB,EAAuCD,GAAvC,CAFHV;AAGF","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport isArrayEqual from './isArrayEqual';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nexport default function useOnGetState(_ref) {\n  let {\n    getState,\n    getStateListeners\n  } = _ref;\n  const {\n    addKeyedListener\n  } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n\n    // Avoid returning new route objects if we don't need to\n    const routes = state.routes.map(route => {\n      var _getStateListeners$ro;\n      const childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);\n      if (route.state === childState) {\n        return route;\n      }\n      return {\n        ...route,\n        state: childState\n      };\n    });\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n    return {\n      ...state,\n      routes\n    };\n  }, [getState, getStateListeners]);\n  React.useEffect(() => {\n    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n//# sourceMappingURL=useOnGetState.js.map"]},"metadata":{},"sourceType":"module"}