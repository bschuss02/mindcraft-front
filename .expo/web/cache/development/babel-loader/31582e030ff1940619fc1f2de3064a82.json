{"ast":null,"code":"import { useState, useEffect, useContext } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Box, Text, Button, HStack, VStack, Icon } from \"native-base\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SignupScreen from \"../screens/SignupScreen\";\nimport { LoginScreen } from \"../screens/LoginScreen\";\nimport { ProfileScreen } from \"../screens/ProfileScreen\";\nimport { UserContext } from \"../context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nfunction ProfileStackNav() {\n  var _useContext = useContext(UserContext),\n      currentUser = _useContext.currentUser;\n\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [!currentUser && _jsxs(Stack.Group, {\n      children: [_jsx(Stack.Screen, {\n        name: \"SignupScreen\",\n        component: SignupScreen\n      }), _jsx(Stack.Screen, {\n        name: \"LoginScreen\",\n        component: LoginScreen\n      })]\n    }), _jsx(Stack.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen\n    })]\n  });\n}\n\nexport { ProfileStackNav };","map":{"version":3,"sources":["/Users/Benjamin/Dev/hoohacks/mindcraft-front/src/navigation/ProfileStackNav.js"],"names":["useState","useEffect","useContext","Box","Text","Button","HStack","VStack","Icon","useNavigation","Ionicons","MaterialCommunityIcons","AsyncStorage","createStackNavigator","SignupScreen","LoginScreen","ProfileScreen","UserContext","Stack","ProfileStackNav","currentUser","headerShown"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,aAAxD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,QAAT,EAAmBC,sBAAnB,QAAiD,oBAAjD;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,YAAP;AACA,SAASC,WAAT;AACA,SAASC,aAAT;AACA,SAASC,WAAT;;;AAEA,IAAMC,KAAK,GAAGL,oBAAoB,EAAlC;;AAEA,SAASM,eAAT,GAA2B;AAC1B,oBAAwBjB,UAAU,CAACe,WAAD,CAAlC;AAAA,MAAQG,WAAR,eAAQA,WAAR;;AACA,SACC,MAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA,eACE,CAACD,WAAD,IACA,MAAC,KAAD,CAAO,KAAP;AAAA,iBACC,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,cAAnB;AAAkC,QAAA,SAAS,EAAEN;AAA7C,QADD,EAEC,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,aAAnB;AAAiC,QAAA,SAAS,EAAEC;AAA5C,QAFD;AAAA,MAFF,EAOC,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,eAAnB;AAAmC,MAAA,SAAS,EAAEC;AAA9C,MAPD;AAAA,IADD;AAWA;;AAED,SAASG,eAAT","sourcesContent":["import { useState, useEffect, useContext } from \"react\"\nimport { TouchableOpacity } from \"react-native\"\nimport { Box, Text, Button, HStack, VStack, Icon } from \"native-base\"\nimport { useNavigation } from \"@react-navigation/native\"\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { createStackNavigator } from \"@react-navigation/stack\"\n\nimport SignupScreen from \"../screens/SignupScreen\"\nimport { LoginScreen } from \"../screens/LoginScreen\"\nimport { ProfileScreen } from \"../screens/ProfileScreen\"\nimport { UserContext } from \"../context/UserContext\"\n\nconst Stack = createStackNavigator()\n\nfunction ProfileStackNav() {\n\tconst { currentUser } = useContext(UserContext)\n\treturn (\n\t\t<Stack.Navigator screenOptions={{ headerShown: false }}>\n\t\t\t{!currentUser && (\n\t\t\t\t<Stack.Group>\n\t\t\t\t\t<Stack.Screen name=\"SignupScreen\" component={SignupScreen} />\n\t\t\t\t\t<Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n\t\t\t\t</Stack.Group>\n\t\t\t)}\n\t\t\t<Stack.Screen name=\"ProfileScreen\" component={ProfileScreen} />\n\t\t</Stack.Navigator>\n\t)\n}\n\nexport { ProfileStackNav }\n"]},"metadata":{},"sourceType":"module"}