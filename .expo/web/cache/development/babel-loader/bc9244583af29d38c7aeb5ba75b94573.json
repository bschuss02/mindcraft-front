{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"enabled\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty2(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { State } from \"../../State\";\nimport { Direction } from \"../constants\";\nimport GestureHandler from \"./GestureHandler\";\nvar DEFAULT_MAX_DURATION_MS = 800;\nvar DEFAULT_MIN_ACCEPTABLE_DELTA = 160;\nvar DEFAULT_DIRECTION = Direction.RIGHT;\nvar DEFAULT_NUMBER_OF_TOUCHES_REQUIRED = 1;\n\nvar FlingGestureHandler = function (_GestureHandler) {\n  _inherits(FlingGestureHandler, _GestureHandler);\n\n  var _super = _createSuper(FlingGestureHandler);\n\n  function FlingGestureHandler() {\n    var _this;\n\n    _classCallCheck(this, FlingGestureHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"numberOfPointersRequired\", DEFAULT_NUMBER_OF_TOUCHES_REQUIRED);\n\n    _defineProperty(_assertThisInitialized(_this), \"direction\", DEFAULT_DIRECTION);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxDurationMs\", DEFAULT_MAX_DURATION_MS);\n\n    _defineProperty(_assertThisInitialized(_this), \"minAcceptableDelta\", DEFAULT_MIN_ACCEPTABLE_DELTA);\n\n    _defineProperty(_assertThisInitialized(_this), \"delayTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"startX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"startY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxNumberOfPointersSimultaneously\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"keyPointer\", NaN);\n\n    return _this;\n  }\n\n  _createClass(FlingGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n          enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n          props = _objectWithoutProperties(_ref, _excluded);\n\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n\n      if (this.config.direction) {\n        this.direction = this.config.direction;\n      }\n\n      if (this.config.numberOfPointers) {\n        this.numberOfPointersRequired = this.config.numberOfPointers;\n      }\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      var rect = this.view.getBoundingClientRect();\n      return {\n        x: this.tracker.getLastAvgX() - rect.left,\n        y: this.tracker.getLastAvgY() - rect.top,\n        absoluteX: this.tracker.getLastAvgX(),\n        absoluteY: this.tracker.getLastAvgY()\n      };\n    }\n  }, {\n    key: \"startFling\",\n    value: function startFling() {\n      var _this2 = this;\n\n      this.startX = this.tracker.getLastX(this.keyPointer);\n      this.startY = this.tracker.getLastY(this.keyPointer);\n      this.begin();\n      this.maxNumberOfPointersSimultaneously = 1;\n      this.delayTimeout = setTimeout(function () {\n        return _this2.fail();\n      }, this.maxDurationMs);\n    }\n  }, {\n    key: \"tryEndFling\",\n    value: function tryEndFling() {\n      if (this.maxNumberOfPointersSimultaneously === this.numberOfPointersRequired && (this.direction & Direction.RIGHT && this.tracker.getLastX(this.keyPointer) - this.startX > this.minAcceptableDelta || this.direction & Direction.LEFT && this.startX - this.tracker.getLastX(this.keyPointer) > this.minAcceptableDelta || this.direction & Direction.UP && this.startY - this.tracker.getLastY(this.keyPointer) > this.minAcceptableDelta || this.direction & Direction.DOWN && this.tracker.getLastY(this.keyPointer) - this.startY > this.minAcceptableDelta)) {\n        clearTimeout(this.delayTimeout);\n        this.activate();\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"endFling\",\n    value: function endFling() {\n      if (!this.tryEndFling()) {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      this.keyPointer = event.pointerId;\n\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n\n      this.newPointerAction();\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n\n      this.newPointerAction();\n    }\n  }, {\n    key: \"newPointerAction\",\n    value: function newPointerAction() {\n      if (this.currentState === State.UNDETERMINED) {\n        this.startFling();\n      }\n\n      if (this.currentState !== State.BEGAN) {\n        return;\n      }\n\n      this.tryEndFling();\n\n      if (this.tracker.getTrackedPointersCount() > this.maxNumberOfPointersSimultaneously) {\n        this.maxNumberOfPointersSimultaneously = this.tracker.getTrackedPointersCount();\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tracker.track(event);\n\n      if (this.currentState !== State.BEGAN) {\n        return;\n      }\n\n      this.tryEndFling();\n\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n\n      this.onUp(event);\n      this.keyPointer = NaN;\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n\n      this.onUp(event);\n    }\n  }, {\n    key: \"onUp\",\n    value: function onUp(event) {\n      this.tracker.removeFromTracker(event.pointerId);\n\n      if (this.currentState !== State.BEGAN) {\n        return;\n      }\n\n      this.endFling();\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"onPointerCancel\", this).call(this, event);\n\n      this.reset();\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(force) {\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"activate\", this).call(this, force);\n\n      this.end();\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"resetConfig\", this).call(this);\n\n      this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n      this.direction = DEFAULT_DIRECTION;\n    }\n  }]);\n\n  return FlingGestureHandler;\n}(GestureHandler);\n\nexport { FlingGestureHandler as default };","map":{"version":3,"sources":["FlingGestureHandler.ts"],"names":["DEFAULT_MAX_DURATION_MS","DEFAULT_MIN_ACCEPTABLE_DELTA","DEFAULT_DIRECTION","Direction","DEFAULT_NUMBER_OF_TOUCHES_REQUIRED","init","updateGestureConfig","enabled","props","transformNativeEvent","rect","x","y","absoluteX","absoluteY","startFling","setTimeout","tryEndFling","clearTimeout","endFling","onPointerDown","event","onPointerAdd","newPointerAction","State","onPointerMove","onPointerUp","onPointerRemove","onUp","onPointerCancel","activate","resetConfig"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,KAAA;AACA,SAAA,SAAA;AAGA,OAAA,cAAA;AAEA,IAAMA,uBAAuB,GAA7B,GAAA;AACA,IAAMC,4BAA4B,GAAlC,GAAA;AACA,IAAMC,iBAAiB,GAAGC,SAAS,CAAnC,KAAA;AACA,IAAMC,kCAAkC,GAAxC,CAAA;;IAEe,mB;;;;;AAAiD,iCAAA;AAAA;;AAAA;;AAAA,sCAAA,IAAA;AAAA,MAAA,IAAA;AAAA;;AAAA,oDAAA,IAAA;;AAAA,IAAA,eAAA,gCAAA,0BAAA,EAAA,kCAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,WAAA,EAAA,iBAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,eAAA,EAAA,uBAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,oBAAA,EAAA,4BAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,cAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,QAAA,EAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,QAAA,EAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,mCAAA,EAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,YAAA,EAAA,GAAA,CAAA;;AAAA;AAAA;;;;WAcvDC,cAAI,GAAJA,EAAI,QAAJA,EAA4D;AACjE,oFAAA,GAAA,EAAA,QAAA;AACD;;;WAEMC,mCAAgE;AAAA,8BAA1CC,OAA0C;AAAA,UAA1CA,OAA0C,6BAA5C,IAA4C;AAAA,UAAvBC,KAAuB;;AACrE;AAA4BD,QAAAA,OAAO,EAAT;AAA1B,SAAiDC,KAAjD;;AAEA,UAAI,KAAA,MAAA,CAAJ,SAAA,EAA2B;AACzB,aAAA,SAAA,GAAiB,KAAA,MAAA,CAAjB,SAAA;AACD;;AAED,UAAI,KAAA,MAAA,CAAJ,gBAAA,EAAkC;AAChC,aAAA,wBAAA,GAAgC,KAAA,MAAA,CAAhC,gBAAA;AACD;AACF;;;WAESC,gCAAuB;AAC/B,UAAMC,IAAa,GAAG,KAAA,IAAA,CAAtB,qBAAsB,EAAtB;AAEA,aAAO;AACLC,QAAAA,CAAC,EAAE,KAAA,OAAA,CAAA,WAAA,KAA6BD,IAAI,CAD/B,IAAA;AAELE,QAAAA,CAAC,EAAE,KAAA,OAAA,CAAA,WAAA,KAA6BF,IAAI,CAF/B,GAAA;AAGLG,QAAAA,SAAS,EAAE,KAAA,OAAA,CAHN,WAGM,EAHN;AAILC,QAAAA,SAAS,EAAE,KAAA,OAAA,CAAA,WAAA;AAJN,OAAP;AAMD;;;WAEOC,sBAAmB;AAAA;;AACzB,WAAA,MAAA,GAAc,KAAA,OAAA,CAAA,QAAA,CAAsB,KAApC,UAAc,CAAd;AACA,WAAA,MAAA,GAAc,KAAA,OAAA,CAAA,QAAA,CAAsB,KAApC,UAAc,CAAd;AAEA,WAAA,KAAA;AAEA,WAAA,iCAAA,GAAA,CAAA;AAEA,WAAA,YAAA,GAAoBC,UAAU,CAAC;AAAA,eAAM,MAAA,CAAP,IAAO,EAAN;AAAA,OAAD,EAAoB,KAAlD,aAA8B,CAA9B;AACD;;;WAEOC,uBAAuB;AAC7B,UACE,KAAA,iCAAA,KACE,KADF,wBAAA,KAEE,KAAA,SAAA,GAAiBd,SAAS,CAA1B,KAAA,IACA,KAAA,OAAA,CAAA,QAAA,CAAsB,KAAtB,UAAA,IAAyC,KAAzC,MAAA,GACE,KAFH,kBAAC,IAGC,KAAA,SAAA,GAAiBA,SAAS,CAA1B,IAAA,IACC,KAAA,MAAA,GAAc,KAAA,OAAA,CAAA,QAAA,CAAsB,KAApC,UAAc,CAAd,GACE,KALL,kBAAC,IAMC,KAAA,SAAA,GAAiBA,SAAS,CAA1B,EAAA,IACC,KAAA,MAAA,GAAc,KAAA,OAAA,CAAA,QAAA,CAAsB,KAApC,UAAc,CAAd,GACE,KARL,kBAAC,IASC,KAAA,SAAA,GAAiBA,SAAS,CAA1B,IAAA,IACC,KAAA,OAAA,CAAA,QAAA,CAAsB,KAAtB,UAAA,IAAyC,KAAzC,MAAA,GACE,KAdR,kBACE,CADF,EAeE;AACAe,QAAAA,YAAY,CAAC,KAAbA,YAAY,CAAZA;AACA,aAAA,QAAA;AAEA,eAAA,IAAA;AACD;;AAED,aAAA,KAAA;AACD;;;WAEOC,oBAAW;AACjB,UAAI,CAAC,KAAL,WAAK,EAAL,EAAyB;AACvB,aAAA,IAAA;AACD;AACF;;;WAESC,uBAAa,KAAbA,EAAyC;AACjD,WAAA,OAAA,CAAA,YAAA,CAAA,KAAA;AACA,WAAA,UAAA,GAAkBC,KAAK,CAAvB,SAAA;;AAEA,6FAAA,KAAA;;AACA,WAAA,gBAAA;AACD;;;WAESC,sBAAY,KAAZA,EAAwC;AAChD,WAAA,OAAA,CAAA,YAAA,CAAA,KAAA;;AACA,4FAAA,KAAA;;AACA,WAAA,gBAAA;AACD;;;WAEOC,4BAAyB;AAC/B,UAAI,KAAA,YAAA,KAAsBC,KAAK,CAA/B,YAAA,EAA8C;AAC5C,aAAA,UAAA;AACD;;AAED,UAAI,KAAA,YAAA,KAAsBA,KAAK,CAA/B,KAAA,EAAuC;AACrC;AACD;;AAED,WAAA,WAAA;;AAEA,UACE,KAAA,OAAA,CAAA,uBAAA,KACA,KAFF,iCAAA,EAGE;AACA,aAAA,iCAAA,GACE,KAAA,OAAA,CADF,uBACE,EADF;AAED;AACF;;;WAESC,uBAAa,KAAbA,EAAyC;AACjD,WAAA,OAAA,CAAA,KAAA,CAAA,KAAA;;AAEA,UAAI,KAAA,YAAA,KAAsBD,KAAK,CAA/B,KAAA,EAAuC;AACrC;AACD;;AAED,WAAA,WAAA;;AAEA,6FAAA,KAAA;AACD;;;WAESE,qBAAW,KAAXA,EAAuC;AAC/C,2FAAA,KAAA;;AACA,WAAA,IAAA,CAAA,KAAA;AAEA,WAAA,UAAA,GAAA,GAAA;AACD;;;WAESC,yBAAe,KAAfA,EAA2C;AACnD,+FAAA,KAAA;;AACA,WAAA,IAAA,CAAA,KAAA;AACD;;;WAEOC,cAAI,KAAJA,EAAgC;AACtC,WAAA,OAAA,CAAA,iBAAA,CAA+BP,KAAK,CAApC,SAAA;;AACA,UAAI,KAAA,YAAA,KAAsBG,KAAK,CAA/B,KAAA,EAAuC;AACrC;AACD;;AACD,WAAA,QAAA;AACD;;;WAESK,yBAAe,KAAfA,EAA2C;AACnD,+FAAA,KAAA;;AACA,WAAA,KAAA;AACD;;;WAEMC,kBAAQ,KAARA,EAAgC;AACrC,wFAAA,KAAA;;AACA,WAAA,GAAA;AACD;;;WAESC,uBAAoB;AAC5B;;AACA,WAAA,wBAAA,GAAA,kCAAA;AACA,WAAA,SAAA,GAAA,iBAAA;AACD;;;;EApKY,c;;SAAA,mB","sourcesContent":["import { State } from '../../State';\nimport { Direction } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MAX_DURATION_MS = 800;\nconst DEFAULT_MIN_ACCEPTABLE_DELTA = 160;\nconst DEFAULT_DIRECTION = Direction.RIGHT;\nconst DEFAULT_NUMBER_OF_TOUCHES_REQUIRED = 1;\n\nexport default class FlingGestureHandler extends GestureHandler {\n  private numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n  private direction = DEFAULT_DIRECTION;\n\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private minAcceptableDelta = DEFAULT_MIN_ACCEPTABLE_DELTA;\n  private delayTimeout!: number;\n\n  private startX = 0;\n  private startY = 0;\n\n  private maxNumberOfPointersSimultaneously = 0;\n  private keyPointer = NaN;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.direction) {\n      this.direction = this.config.direction;\n    }\n\n    if (this.config.numberOfPointers) {\n      this.numberOfPointersRequired = this.config.numberOfPointers;\n    }\n  }\n\n  protected transformNativeEvent() {\n    const rect: DOMRect = this.view.getBoundingClientRect();\n\n    return {\n      x: this.tracker.getLastAvgX() - rect.left,\n      y: this.tracker.getLastAvgY() - rect.top,\n      absoluteX: this.tracker.getLastAvgX(),\n      absoluteY: this.tracker.getLastAvgY(),\n    };\n  }\n\n  private startFling(): void {\n    this.startX = this.tracker.getLastX(this.keyPointer);\n    this.startY = this.tracker.getLastY(this.keyPointer);\n\n    this.begin();\n\n    this.maxNumberOfPointersSimultaneously = 1;\n\n    this.delayTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private tryEndFling(): boolean {\n    if (\n      this.maxNumberOfPointersSimultaneously ===\n        this.numberOfPointersRequired &&\n      ((this.direction & Direction.RIGHT &&\n        this.tracker.getLastX(this.keyPointer) - this.startX >\n          this.minAcceptableDelta) ||\n        (this.direction & Direction.LEFT &&\n          this.startX - this.tracker.getLastX(this.keyPointer) >\n            this.minAcceptableDelta) ||\n        (this.direction & Direction.UP &&\n          this.startY - this.tracker.getLastY(this.keyPointer) >\n            this.minAcceptableDelta) ||\n        (this.direction & Direction.DOWN &&\n          this.tracker.getLastY(this.keyPointer) - this.startY >\n            this.minAcceptableDelta))\n    ) {\n      clearTimeout(this.delayTimeout);\n      this.activate();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private endFling() {\n    if (!this.tryEndFling()) {\n      this.fail();\n    }\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    this.keyPointer = event.pointerId;\n\n    super.onPointerDown(event);\n    this.newPointerAction();\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    if (this.currentState === State.UNDETERMINED) {\n      this.startFling();\n    }\n\n    if (this.currentState !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n\n    if (\n      this.tracker.getTrackedPointersCount() >\n      this.maxNumberOfPointersSimultaneously\n    ) {\n      this.maxNumberOfPointersSimultaneously =\n        this.tracker.getTrackedPointersCount();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    if (this.currentState !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n\n    this.keyPointer = NaN;\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.currentState !== State.BEGAN) {\n      return;\n    }\n    this.endFling();\n  }\n\n  protected onPointerCancel(event: AdaptedEvent): void {\n    super.onPointerCancel(event);\n    this.reset();\n  }\n\n  public activate(force?: boolean): void {\n    super.activate(force);\n    this.end();\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n    this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n    this.direction = DEFAULT_DIRECTION;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}