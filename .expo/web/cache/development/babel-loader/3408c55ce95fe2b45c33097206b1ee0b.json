{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useState, useEffect, useContext } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Box, Text, Button, HStack, VStack, Icon } from \"native-base\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { UserContext } from \"../context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ProfileScreen() {\n  var navigation = useNavigation();\n\n  var _useContext = useContext(UserContext),\n      currentUser = _useContext.currentUser,\n      setCurrentUser = _useContext.setCurrentUser;\n\n  function handleSignOut() {\n    return _handleSignOut.apply(this, arguments);\n  }\n\n  function _handleSignOut() {\n    _handleSignOut = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.removeItem(\"authToken\");\n        setCurrentUser(null);\n        navigation.navigate(\"Profile\", {\n          screen: \"SignupScreen\"\n        });\n      } catch (error) {\n        console.error(\"Error signing out...: \", error);\n      }\n    });\n    return _handleSignOut.apply(this, arguments);\n  }\n\n  if (currentUser) {\n    var username = currentUser.username;\n    return _jsxs(Box, {\n      variant: \"screen\",\n      children: [_jsx(Text, {\n        children: \"ProfileScreen\"\n      }), _jsxs(Text, {\n        children: [\"Current user username: \", username]\n      }), _jsx(Button, {\n        onPress: handleSignOut,\n        children: _jsx(Text, {\n          children: \"Sign Out\"\n        })\n      })]\n    });\n  } else {\n    return _jsxs(Box, {\n      variant: \"screen\",\n      children: [_jsx(Text, {\n        children: \"Login to view your profile\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return navigation.navigate(\"SignupScreen\");\n        },\n        children: _jsx(Text, {\n          children: \"Log In\"\n        })\n      })]\n    });\n  }\n}\n\nexport { ProfileScreen };","map":{"version":3,"sources":["/Users/Benjamin/Dev/hoohacks/mindcraft-front/src/screens/ProfileScreen.js"],"names":["useState","useEffect","useContext","Box","Text","Button","HStack","VStack","Icon","useNavigation","Ionicons","MaterialCommunityIcons","AsyncStorage","UserContext","ProfileScreen","navigation","currentUser","setCurrentUser","handleSignOut","removeItem","navigate","screen","error","console","username"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,aAAxD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,QAAT,EAAmBC,sBAAnB,QAAiD,oBAAjD;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,SAASC,WAAT;;;;AAGA,SAASC,aAAT,GAAyB;AACxB,MAAMC,UAAU,GAAGN,aAAa,EAAhC;;AACA,oBAAwCP,UAAU,CAACW,WAAD,CAAlD;AAAA,MAAQG,WAAR,eAAQA,WAAR;AAAA,MAAqBC,cAArB,eAAqBA,cAArB;;AAFwB,WAITC,aAJS;AAAA;AAAA;;AAAA;AAAA,uCAIxB,aAA+B;AAC9B,UAAI;AACH,cAAMN,YAAY,CAACO,UAAb,CAAwB,WAAxB,CAAN;AACAF,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,QAAAA,UAAU,CAACK,QAAX,CAAoB,SAApB,EAA+B;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAA/B;AACA,OAJD,CAIE,OAAOC,KAAP,EAAc;AACfC,QAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACA;AACD,KAZuB;AAAA;AAAA;;AAcxB,MAAIN,WAAJ,EAAiB;AAChB,QAAQQ,QAAR,GAAqBR,WAArB,CAAQQ,QAAR;AACA,WACC,MAAC,GAAD;AAAK,MAAA,OAAO,EAAC,QAAb;AAAA,iBACC,KAAC,IAAD;AAAA,kBAAM;AAAN,QADD,EAEC,MAAC,IAAD;AAAA,mBAAM,yBAAN,EAA8BA,QAA9B;AAAA,QAFD,EAGC,KAAC,MAAD;AAAQ,QAAA,OAAO,EAAEN,aAAjB;AAAA,kBACC,KAAC,IAAD;AAAA,oBAAM;AAAN;AADD,QAHD;AAAA,MADD;AASA,GAXD,MAWO;AACN,WACC,MAAC,GAAD;AAAK,MAAA,OAAO,EAAC,QAAb;AAAA,iBACC,KAAC,IAAD;AAAA,kBAAM;AAAN,QADD,EAEC,KAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMH,UAAU,CAACK,QAAX,CAAoB,cAApB,CAAN;AAAA,SAAjB;AAAA,kBACC,KAAC,IAAD;AAAA,oBAAM;AAAN;AADD,QAFD;AAAA,MADD;AAQA;AACD;;AAED,SAASN,aAAT","sourcesContent":["import { useState, useEffect, useContext } from \"react\"\nimport { TouchableOpacity } from \"react-native\"\nimport { Box, Text, Button, HStack, VStack, Icon } from \"native-base\"\nimport { useNavigation } from \"@react-navigation/native\"\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\n\nimport { UserContext } from \"../context/UserContext\"\n\n// was just building signup route\nfunction ProfileScreen() {\n\tconst navigation = useNavigation()\n\tconst { currentUser, setCurrentUser } = useContext(UserContext)\n\n\tasync function handleSignOut() {\n\t\ttry {\n\t\t\tawait AsyncStorage.removeItem(\"authToken\")\n\t\t\tsetCurrentUser(null)\n\t\t\tnavigation.navigate(\"Profile\", { screen: \"SignupScreen\" })\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error signing out...: \", error)\n\t\t}\n\t}\n\n\tif (currentUser) {\n\t\tconst { username } = currentUser\n\t\treturn (\n\t\t\t<Box variant=\"screen\">\n\t\t\t\t<Text>ProfileScreen</Text>\n\t\t\t\t<Text>Current user username: {username}</Text>\n\t\t\t\t<Button onPress={handleSignOut}>\n\t\t\t\t\t<Text>Sign Out</Text>\n\t\t\t\t</Button>\n\t\t\t</Box>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<Box variant=\"screen\">\n\t\t\t\t<Text>Login to view your profile</Text>\n\t\t\t\t<Button onPress={() => navigation.navigate(\"SignupScreen\")}>\n\t\t\t\t\t<Text>Log In</Text>\n\t\t\t\t</Button>\n\t\t\t</Box>\n\t\t)\n\t}\n}\n\nexport { ProfileScreen }\n"]},"metadata":{},"sourceType":"module"}