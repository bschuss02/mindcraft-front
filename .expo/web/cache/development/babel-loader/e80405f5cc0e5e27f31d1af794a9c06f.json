{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"behavior\", \"contentContainerStyle\", \"keyboardVerticalOffset\"];\nimport * as React from 'react';\nimport View from \"../View\";\n\nvar KeyboardAvoidingView = function (_React$Component) {\n  _inherits(KeyboardAvoidingView, _React$Component);\n\n  var _super = _createSuper(KeyboardAvoidingView);\n\n  function KeyboardAvoidingView() {\n    var _this;\n\n    _classCallCheck(this, KeyboardAvoidingView);\n\n    _this = _super.apply(this, arguments);\n    _this.frame = null;\n\n    _this.onLayout = function (event) {\n      _this.frame = event.nativeEvent.layout;\n    };\n\n    return _this;\n  }\n\n  _createClass(KeyboardAvoidingView, [{\n    key: \"relativeKeyboardHeight\",\n    value: function relativeKeyboardHeight(keyboardFrame) {\n      var frame = this.frame;\n\n      if (!frame || !keyboardFrame) {\n        return 0;\n      }\n\n      var keyboardY = keyboardFrame.screenY - (this.props.keyboardVerticalOffset || 0);\n      return Math.max(frame.y + frame.height - keyboardY, 0);\n    }\n  }, {\n    key: \"onKeyboardChange\",\n    value: function onKeyboardChange(event) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          behavior = _this$props.behavior,\n          contentContainerStyle = _this$props.contentContainerStyle,\n          keyboardVerticalOffset = _this$props.keyboardVerticalOffset,\n          rest = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return React.createElement(View, _extends({\n        onLayout: this.onLayout\n      }, rest));\n    }\n  }]);\n\n  return KeyboardAvoidingView;\n}(React.Component);\n\nexport default KeyboardAvoidingView;","map":{"version":3,"sources":["/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/react-native-web/dist/exports/KeyboardAvoidingView/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","View","KeyboardAvoidingView","arguments","frame","onLayout","event","nativeEvent","layout","keyboardFrame","keyboardY","screenY","props","keyboardVerticalOffset","Math","max","y","height","_this$props","behavior","contentContainerStyle","rest","createElement","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,6BAAP,MAA0C,qDAA1C;AACA,IAAIC,SAAS,GAAG,CAAC,UAAD,EAAa,uBAAb,EAAsC,wBAAtC,CAAhB;AAWA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP;;IAEMC,oB;;;;;AACJ,kCAAc;AAAA;;AAAA;;AACZ,+BAASC,SAAT;AACA,UAAKC,KAAL,GAAa,IAAb;;AAEA,UAAKC,QAAL,GAAgB,UAAAC,KAAK,EAAI;AACvB,YAAKF,KAAL,GAAaE,KAAK,CAACC,WAAN,CAAkBC,MAA/B;AACD,KAFD;;AAJY;AAOb;;;;WAED,gCAAuBC,aAAvB,EAAsC;AACpC,UAAIL,KAAK,GAAG,KAAKA,KAAjB;;AAEA,UAAI,CAACA,KAAD,IAAU,CAACK,aAAf,EAA8B;AAC5B,eAAO,CAAP;AACD;;AAED,UAAIC,SAAS,GAAGD,aAAa,CAACE,OAAd,IAAyB,KAAKC,KAAL,CAAWC,sBAAX,IAAqC,CAA9D,CAAhB;AACA,aAAOC,IAAI,CAACC,GAAL,CAASX,KAAK,CAACY,CAAN,GAAUZ,KAAK,CAACa,MAAhB,GAAyBP,SAAlC,EAA6C,CAA7C,CAAP;AACD;;;WAED,0BAAiBJ,KAAjB,EAAwB,CAAE;;;WAE1B,kBAAS;AACP,UAAIY,WAAW,GAAG,KAAKN,KAAvB;AAAA,UACIO,QAAQ,GAAGD,WAAW,CAACC,QAD3B;AAAA,UAEIC,qBAAqB,GAAGF,WAAW,CAACE,qBAFxC;AAAA,UAGIP,sBAAsB,GAAGK,WAAW,CAACL,sBAHzC;AAAA,UAIIQ,IAAI,GAAGvB,6BAA6B,CAACoB,WAAD,EAAcnB,SAAd,CAJxC;;AAMA,aAAoBC,KAAK,CAACsB,aAAN,CAAoBrB,IAApB,EAA0BJ,QAAQ,CAAC;AACrDQ,QAAAA,QAAQ,EAAE,KAAKA;AADsC,OAAD,EAEnDgB,IAFmD,CAAlC,CAApB;AAGD;;;;EAjCgCrB,KAAK,CAACuB,S;;AAqCzC,eAAerB,oBAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"behavior\", \"contentContainerStyle\", \"keyboardVerticalOffset\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport View from '../View';\n\nclass KeyboardAvoidingView extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.frame = null;\n\n    this.onLayout = event => {\n      this.frame = event.nativeEvent.layout;\n    };\n  }\n\n  relativeKeyboardHeight(keyboardFrame) {\n    var frame = this.frame;\n\n    if (!frame || !keyboardFrame) {\n      return 0;\n    }\n\n    var keyboardY = keyboardFrame.screenY - (this.props.keyboardVerticalOffset || 0);\n    return Math.max(frame.y + frame.height - keyboardY, 0);\n  }\n\n  onKeyboardChange(event) {}\n\n  render() {\n    var _this$props = this.props,\n        behavior = _this$props.behavior,\n        contentContainerStyle = _this$props.contentContainerStyle,\n        keyboardVerticalOffset = _this$props.keyboardVerticalOffset,\n        rest = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return /*#__PURE__*/React.createElement(View, _extends({\n      onLayout: this.onLayout\n    }, rest));\n  }\n\n}\n\nexport default KeyboardAvoidingView;"]},"metadata":{},"sourceType":"module"}