{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { useEvent } from \"./utils\";\nimport { useSharedValue } from \"./useSharedValue\";\nvar subscribeForEvents = ['onScroll', 'onScrollBeginDrag', 'onScrollEndDrag', 'onMomentumScrollBegin', 'onMomentumScrollEnd'];\nexport function useScrollViewOffset(aref) {\n  var offsetRef = useRef(useSharedValue(0));\n  var event = useEvent(function () {\n    var _f = function _f(event) {\n      offsetRef.current.value = event.contentOffset.x === 0 ? event.contentOffset.y : event.contentOffset.x;\n    };\n\n    _f._closure = {\n      offsetRef: {\n        current: offsetRef.current\n      }\n    };\n    _f.asString = \"function _f(event){const{offsetRef}=jsThis._closure;{offsetRef.current.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;}}\";\n    _f.__workletHash = 9478808601686;\n    _f.__location = \"/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/react-native-reanimated/lib/reanimated2/hook/useScrollViewOffset.js (14:27)\";\n    return _f;\n  }(), subscribeForEvents);\n  useEffect(function () {\n    var _a;\n\n    var viewTag = findNodeHandle(aref.current);\n    (_a = event.current) === null || _a === void 0 ? void 0 : _a.registerForEvents(viewTag);\n  }, [aref.current]);\n  return offsetRef.current;\n}","map":{"version":3,"sources":["/Users/Benjamin/Dev/hoohacks/mindcraft-front/node_modules/react-native-reanimated/lib/reanimated2/hook/useScrollViewOffset.js"],"names":["useEffect","useRef","useEvent","useSharedValue","subscribeForEvents","useScrollViewOffset","aref","offsetRef","event","current","value","contentOffset","x","y","_a","viewTag","findNodeHandle","registerForEvents"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,SAASC,QAAT;AACA,SAASC,cAAT;AACA,IAAMC,kBAAkB,GAAG,CACvB,UADuB,EAEvB,mBAFuB,EAGvB,iBAHuB,EAIvB,uBAJuB,EAKvB,qBALuB,CAA3B;AAOA,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AACtC,MAAMC,SAAS,GAAGN,MAAM,CAACE,cAAc,CAAC,CAAD,CAAf,CAAxB;AACA,MAAMK,KAAK,GAAGN,QAAQ;AAAA,yBAAEM,KAAF,EAAY;AAE9BD,MAAAA,SAAS,CAACE,OAAV,CAAkBC,KAAlB,GACIF,KAAK,CAACG,aAAN,CAAoBC,CAApB,KAA0B,CAA1B,GACMJ,KAAK,CAACG,aAAN,CAAoBE,CAD1B,GAEML,KAAK,CAACG,aAAN,CAAoBC,CAH9B;AAIH,KANqB;;AAAA;AAAA;AAAA,iBAXxBL,SAAS,CAACE;AAWc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMnBL,kBANmB,CAAtB;AAOAJ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIc,EAAJ;;AACA,QAAMC,OAAO,GAAGC,cAAc,CAACV,IAAI,CAACG,OAAN,CAA9B;AACA,KAACK,EAAE,GAAGN,KAAK,CAACC,OAAZ,MAAyB,IAAzB,IAAiCK,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACG,iBAAH,CAAqBF,OAArB,CAA1D;AACH,GAJQ,EAIN,CAACT,IAAI,CAACG,OAAN,CAJM,CAAT;AAKA,SAAOF,SAAS,CAACE,OAAjB;AACH","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { findNodeHandle } from 'react-native';\nimport { useEvent } from './utils';\nimport { useSharedValue } from './useSharedValue';\nconst subscribeForEvents = [\n    'onScroll',\n    'onScrollBeginDrag',\n    'onScrollEndDrag',\n    'onMomentumScrollBegin',\n    'onMomentumScrollEnd',\n];\nexport function useScrollViewOffset(aref) {\n    const offsetRef = useRef(useSharedValue(0));\n    const event = useEvent((event) => {\n        'worklet';\n        offsetRef.current.value =\n            event.contentOffset.x === 0\n                ? event.contentOffset.y\n                : event.contentOffset.x;\n    }, subscribeForEvents);\n    useEffect(() => {\n        var _a;\n        const viewTag = findNodeHandle(aref.current);\n        (_a = event.current) === null || _a === void 0 ? void 0 : _a.registerForEvents(viewTag);\n    }, [aref.current]);\n    return offsetRef.current;\n}\n"]},"metadata":{},"sourceType":"module"}